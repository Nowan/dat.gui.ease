(function webpackUniversalModuleDefinition(root, factory) {
	if(typeof exports === 'object' && typeof module === 'object')
		module.exports = factory(require("dat.gui"));
	else if(typeof define === 'function' && define.amd)
		define(["dat.gui"], factory);
	else if(typeof exports === 'object')
		exports["datGuiEase"] = factory(require("dat.gui"));
	else
		root["datGuiEase"] = factory(root["dat"]);
})(self, function(__WEBPACK_EXTERNAL_MODULE_dat_gui__) {
return /******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./src/EaseManager.js":
/*!****************************!*\
  !*** ./src/EaseManager.js ***!
  \****************************/
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;(function (global, factory) {
  if (true) {
    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [exports, __webpack_require__(/*! ./middleware/Middleware */ "./src/middleware/Middleware.js")], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory),
		__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?
		(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
  } else { var mod; }
})(typeof globalThis !== "undefined" ? globalThis : typeof self !== "undefined" ? self : this, function (_exports, _Middleware) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports["default"] = void 0;
  _Middleware = _interopRequireDefault(_Middleware);

  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

  function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

  function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

  function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }

  var EaseManager = /*#__PURE__*/function () {
    function EaseManager() {
      _classCallCheck(this, EaseManager);

      this._middlewares = [];
    }
    /**
     * Checks whether a compatible middleware for ease was provided
     * @param {Ease} ease - Ease instance of animation library of your choice
     * @return {boolean}
     */


    _createClass(EaseManager, [{
      key: "hasCompatibleMiddleware",
      value: function hasCompatibleMiddleware(ease) {
        return this._middlewares.some(function (middleware) {
          return middleware.isFormatSupported(ease);
        });
      }
      /**
       * Returns a compatible middleware for ease
       * @param {Ease} ease - Ease instance of animation library of your choice
       * @return {Middleware | null}
       */

    }, {
      key: "getCompatibleMiddleware",
      value: function getCompatibleMiddleware(ease) {
        return this._middlewares.find(function (middleware) {
          return middleware.isFormatSupported(ease);
        }) || null;
      }
      /**
      * Register middleware to handle Ease objects of animation library of your choice
      * @param {Middleware} middleware - Middleware instance
      * @return {this} self reference for chaining.
      */

    }, {
      key: "use",
      value: function use(middleware) {
        if (middleware && _Middleware["default"].checkSignature(middleware)) {
          this._middlewares.push(middleware);
        } else {
          console.warn("Middleware instance expected");
        }
      }
    }]);

    return EaseManager;
  }();

  _exports["default"] = EaseManager;
});

/***/ }),

/***/ "./src/gui/addEaseGUI.js":
/*!*******************************!*\
  !*** ./src/gui/addEaseGUI.js ***!
  \*******************************/
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }

(function (global, factory) {
  if (true) {
    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [exports, __webpack_require__(/*! dat.gui */ "dat.gui"), __webpack_require__(/*! ./controller/GUIController */ "./src/gui/controller/GUIController.js")], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory),
		__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?
		(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
  } else { var mod; }
})(typeof globalThis !== "undefined" ? globalThis : typeof self !== "undefined" ? self : this, function (_exports, dat, _GUIController) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports["default"] = addEaseGUI;
  dat = _interopRequireWildcard(dat);
  _GUIController = _interopRequireDefault(_GUIController);

  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

  function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

  function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { "default": obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj["default"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

  var dom = dat.dom.dom;

  function addEaseGUI(object, property, middleware) {
    var controller = new _GUIController["default"](object, property, middleware); // Partial copy of add() method
    // https://github.com/dataarts/dat.gui/blob/40f4fc193e25ee51e7e57dfbbfc3118b3927169f/src/dat/gui/GUI.js#L1152

    _recallSavedValue(this, controller);

    var li = _addRow(this);

    dom.addClass(li, "cr");
    dom.addClass(li, 'ease');
    li.appendChild(controller.domElement);

    _augmentController(this, li, controller);

    this.__controllers.push(controller);

    return controller;
  }

  var DEFAULT_PRESET_NAME = 'Default'; // Copy of recallSavedValue() method
  // https://github.com/dataarts/dat.gui/blob/40f4fc193e25ee51e7e57dfbbfc3118b3927169f/src/dat/gui/GUI.js#L1080

  function _recallSavedValue(gui, controller) {
    var root = gui.getRoot();

    var matchedIndex = root.__rememberedObjects.indexOf(controller.object);

    if (matchedIndex !== -1) {
      var controllerMap = root.__rememberedObjectIndecesToControllers[matchedIndex];

      if (controllerMap === undefined) {
        controllerMap = {};
        root.__rememberedObjectIndecesToControllers[matchedIndex] = controllerMap;
      }

      controllerMap[controller.property] = controller;

      if (root.load && root.load.remembered) {
        var presetMap = root.load.remembered;
        var preset;

        if (presetMap[gui.preset]) {
          preset = presetMap[gui.preset];
        } else if (presetMap[DEFAULT_PRESET_NAME]) {
          preset = presetMap[DEFAULT_PRESET_NAME];
        } else {
          return;
        }

        if (preset[matchedIndex] && preset[matchedIndex][controller.property] !== undefined) {
          var value = preset[matchedIndex][controller.property];
          controller.initialValue = value;
          controller.setValue(value);
        }
      }
    }
  } // Partial copy of addRow() method
  // https://github.com/dataarts/dat.gui/blob/40f4fc193e25ee51e7e57dfbbfc3118b3927169f/src/dat/gui/GUI.js#L889


  function _addRow(gui) {
    var li = document.createElement('li');

    gui.__ul.appendChild(li);

    gui.onResize();
    return li;
  } // Partial copy of augmentController() method
  // https://github.com/dataarts/dat.gui/blob/40f4fc193e25ee51e7e57dfbbfc3118b3927169f/src/dat/gui/GUI.js#L922


  function _augmentController(gui, li, controller) {
    controller.__li = li;
    controller.__gui = this;

    controller.name = function (name) {
      this.__li.querySelector(".property-name").innerHTML = name;
      return this;
    };

    controller.listen = function () {
      this.__gui.listen(this);

      return this;
    };

    controller.remove = function () {
      this.__gui.remove(this);

      return this;
    };

    if (gui.getRoot().__preset_select) {
      controller.onValueModified = _markPresetModified.bind(null, gui, true);
    }
  } // Copy of markPresetModified() method
  // https://github.com/dataarts/dat.gui/blob/40f4fc193e25ee51e7e57dfbbfc3118b3927169f/src/dat/gui/GUI.js#L912


  function _markPresetModified(gui, modified) {
    var opt = gui.__preset_select[gui.__preset_select.selectedIndex];

    if (modified) {
      opt.innerHTML = opt.value + '*';
    } else {
      opt.innerHTML = opt.value;
    }
  }
});

/***/ }),

/***/ "./src/gui/controller/GUIController.js":
/*!*********************************************!*\
  !*** ./src/gui/controller/GUIController.js ***!
  \*********************************************/
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }

(function (global, factory) {
  if (true) {
    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [exports, __webpack_require__(/*! dat.gui */ "dat.gui"), __webpack_require__(/*! ../model/ease/Ease */ "./src/gui/model/ease/Ease.js"), __webpack_require__(/*! ../model/preset/EasePreset */ "./src/gui/model/preset/EasePreset.js"), __webpack_require__(/*! ../view/GUIView */ "./src/gui/view/GUIView.js"), __webpack_require__(/*! ../model/GUIModel */ "./src/gui/model/GUIModel.js")], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory),
		__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?
		(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
  } else { var mod; }
})(typeof globalThis !== "undefined" ? globalThis : typeof self !== "undefined" ? self : this, function (_exports, dat, _Ease, _EasePreset, _GUIView, _GUIModel) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports["default"] = void 0;
  dat = _interopRequireWildcard(dat);
  _Ease = _interopRequireDefault(_Ease);
  _EasePreset = _interopRequireDefault(_EasePreset);
  _GUIView = _interopRequireWildcard(_GUIView);
  _GUIModel = _interopRequireDefault(_GUIModel);

  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

  function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

  function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { "default": obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj["default"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

  function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

  function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

  function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }

  function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, "prototype", { writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }

  function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

  function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

  function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } else if (call !== void 0) { throw new TypeError("Derived constructors may only return object or undefined"); } return _assertThisInitialized(self); }

  function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

  function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

  function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

  var GUIController = /*#__PURE__*/function (_dat$controllers$Cont) {
    _inherits(GUIController, _dat$controllers$Cont);

    var _super = _createSuper(GUIController);

    function GUIController(object, property, middleware) {
      var _this;

      _classCallCheck(this, GUIController);

      _this = _super.apply(this, arguments);
      var rawEase = object[property];
      var preset = middleware["import"](rawEase);
      _this._middleware = middleware;
      _this._model = new _GUIModel["default"](middleware);
      _this._view = new _GUIView["default"](property, _this._model.curves);
      _this._model.activePreset = preset;

      _this._view.setOrientations(_this._model.getCurveOrientations(preset.curve));

      _this._view.setPreset(preset);

      if (_this._middleware.isEditingSupported()) {
        _this._view.showEditButton();
      }

      _this._view.on(_GUIView.GUIViewEvent.CURVE_PRESET_SELECTED, _this._onCurvePresetSelected.bind(_assertThisInitialized(_this)));

      _this._view.on(_GUIView.GUIViewEvent.ORIENTATION_PRESET_SELECTED, _this._onOrientationPresetSelected.bind(_assertThisInitialized(_this)));

      _this._view.on(_GUIView.GUIViewEvent.PROPERTY_MODIFIED, _this._onPropertyModified.bind(_assertThisInitialized(_this)));

      _this._view.on(_GUIView.GUIViewEvent.EDIT_EASE_CLICKED, _this._onEditEaseClicked.bind(_assertThisInitialized(_this)));

      _this._view.on(_GUIView.GUIViewEvent.EASE_MODIFIED, _this._onEaseModified.bind(_assertThisInitialized(_this)));

      _this._view.on(_GUIView.GUIViewEvent.ACCEPT_EASE_EDIT_CLICKED, _this._onAcceptEaseEditClicked.bind(_assertThisInitialized(_this)));

      _this._view.on(_GUIView.GUIViewEvent.DISCARD_EASE_EDIT_CLICKED, _this._onDiscardEaseEditClicked.bind(_assertThisInitialized(_this)));

      _this.domElement = _this._view.domElement;
      _this._onValueModified = null;
      return _this;
    } // Called from dat.GUI to store serialized value in revertable preset
    // (part of dat.GUi.prototype.remember() functionality)


    _createClass(GUIController, [{
      key: "getValue",
      value: function getValue() {
        return this._model.activePreset.ease.toString();
      } // Called from dat.GUI upon initializing with remembered value
      // or once preset is reverted

    }, {
      key: "setValue",
      value: function setValue(easeSvgPath) {
        var ease = _Ease["default"].fromSVGPath(easeSvgPath);

        var matchingPreset = this._model.getPresetMatchingEase(ease);

        if (matchingPreset) {
          this._model.activePreset = matchingPreset;
        } else {
          this._model.activePreset = new _EasePreset["default"](ease, _EasePreset["default"].CURVE.CUSTOM, _EasePreset["default"].ORIENTATION.NONE);
        }

        this._view.setOrientations(this._model.getCurveOrientations(this._model.activePreset.curve));

        this._view.setPreset(this._model.activePreset);

        this._applyRevertedValue(this._model.activePreset);
      }
    }, {
      key: "onValueModified",
      set: function set(callback) {
        this._onValueModified = callback;
      }
    }, {
      key: "_applyValue",
      value: function _applyValue(preset) {
        this._applyRevertedValue(preset);

        if (this._onValueModified) {
          this._onValueModified();
        }
      }
    }, {
      key: "_applyRevertedValue",
      value: function _applyRevertedValue(preset) {
        var externalEase = this._middleware["export"](preset);

        this.object[this.property] = externalEase;

        if (this.__onChange) {
          this.__onChange.call(this, externalEase);
        }

        if (this.__onFinishChange) {
          this.__onFinishChange.call(this, externalEase);
        }

        this.updateDisplay();
      }
    }, {
      key: "_onCurvePresetSelected",
      value: function _onCurvePresetSelected(nextCurve) {
        var currentOrientation = this._model.activePreset.orientation;

        var nextOrientations = this._model.getCurveOrientations(nextCurve);

        var nextOrientation = nextOrientations.includes(currentOrientation) ? currentOrientation : nextOrientations[0];

        var nextPreset = this._model.getMatchingPreset(nextCurve, nextOrientation);

        this._model.activePreset.ease.props.resetValues();

        this._model.activePreset = nextPreset;

        this._view.setOrientations(nextOrientations);

        this._view.setPreset(nextPreset);

        this._applyValue(nextPreset);
      }
    }, {
      key: "_onOrientationPresetSelected",
      value: function _onOrientationPresetSelected(nextOrientation) {
        var nextPreset = this._model.getMatchingPreset(this._model.activePreset.curve, nextOrientation);

        nextPreset.ease.props.copyValues(this._model.activePreset.ease.props);
        this._model.activePreset = nextPreset;

        this._view.setPreset(nextPreset);

        this._applyValue(nextPreset);
      }
    }, {
      key: "_onPropertyModified",
      value: function _onPropertyModified(propertyName, value) {
        var preset = this._model.activePreset;
        var ease = preset.ease;
        var property = ease.props.get(propertyName);
        property.value = value;
        property.mutate(ease, value);

        this._view.setPreset(preset);

        this._applyValue(preset);
      }
    }, {
      key: "_onEditEaseClicked",
      value: function _onEditEaseClicked() {
        this._model.preEditPreset = this._model.activePreset.clone();

        this._view.openEditor(this._model.activePreset.ease);
      }
    }, {
      key: "_onEaseModified",
      value: function _onEaseModified(modifiedEase) {
        var matchingPreset = this._model.getPresetMatchingEase(modifiedEase);

        if (matchingPreset) {
          this._model.activePreset = matchingPreset;
        } else {
          this._model.activePreset = new _EasePreset["default"](modifiedEase, _EasePreset["default"].CURVE.CUSTOM, _EasePreset["default"].ORIENTATION.NONE);
        }

        this._view.setPreset(this._model.activePreset);

        this._applyValue(this._model.activePreset);
      }
    }, {
      key: "_onAcceptEaseEditClicked",
      value: function _onAcceptEaseEditClicked() {
        this._view.closeEditor();

        this._view.setPreset(this._model.activePreset);

        this._applyValue(this._model.activePreset);
      }
    }, {
      key: "_onDiscardEaseEditClicked",
      value: function _onDiscardEaseEditClicked() {
        this._model.activePreset = this._model.preEditPreset;

        this._view.closeEditor();

        this._view.setPreset(this._model.activePreset);

        this._applyValue(this._model.activePreset);
      }
    }]);

    return GUIController;
  }(dat.controllers.Controller);

  _exports["default"] = GUIController;
  ;
});

/***/ }),

/***/ "./src/gui/model/GUIModel.js":
/*!***********************************!*\
  !*** ./src/gui/model/GUIModel.js ***!
  \***********************************/
/***/ (function(module, exports) {

var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;(function (global, factory) {
  if (true) {
    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [exports], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory),
		__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?
		(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
  } else { var mod; }
})(typeof globalThis !== "undefined" ? globalThis : typeof self !== "undefined" ? self : this, function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports["default"] = void 0;

  function _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it["return"] != null) it["return"](); } finally { if (didErr) throw err; } } }; }

  function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }

  function _nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

  function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

  function _iterableToArray(iter) { if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null) return Array.from(iter); }

  function _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }

  function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

  function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

  function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

  function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }

  var GUIModel = /*#__PURE__*/function () {
    function GUIModel(middleware) {
      _classCallCheck(this, GUIModel);

      this._presets = middleware.presets;
      this._curves = _extractCurves(this._presets);
      this._orientationsMap = _extractOrientationsPerCurveMap(this._presets, this._curves);
      this._activePreset = null;
      this._preEditPreset = null;
    }

    _createClass(GUIModel, [{
      key: "presets",
      get: function get() {
        return this._presets;
      }
    }, {
      key: "curves",
      get: function get() {
        return this._curves;
      }
    }, {
      key: "activePreset",
      get: function get() {
        return this._activePreset;
      },
      set: function set(preset) {
        this._activePreset = preset;
      }
    }, {
      key: "preEditPreset",
      get: function get() {
        return this._preEditPreset;
      },
      set: function set(preset) {
        this._preEditPreset = preset;
      }
    }, {
      key: "getCurveOrientations",
      value: function getCurveOrientations(curve) {
        return this._orientationsMap.get(curve) || [];
      }
    }, {
      key: "getMatchingPreset",
      value: function getMatchingPreset(curve, orientation) {
        return this._presets.find(function (preset) {
          return preset.curve === curve && preset.orientation === orientation;
        });
      }
    }, {
      key: "getPresetMatchingEase",
      value: function getPresetMatchingEase(ease) {
        return this._presets.find(function (preset) {
          return preset.ease.equals(ease);
        });
      }
    }]);

    return GUIModel;
  }();

  function _extractCurves(presets) {
    return presets.reduce(function (curves, preset) {
      return curves.includes(preset.curve) ? curves : [].concat(_toConsumableArray(curves), [preset.curve]);
    }, []);
  }

  function _extractOrientationsPerCurveMap(presets, curves) {
    var orientationsMap = new Map();

    var _iterator = _createForOfIteratorHelper(curves),
        _step;

    try {
      var _loop = function _loop() {
        var curve = _step.value;
        var curveMatchingPresets = presets.filter(function (preset) {
          return preset.curve === curve;
        });
        var orientations = curveMatchingPresets.map(function (preset) {
          return preset.orientation;
        });
        orientationsMap.set(curve, orientations);
      };

      for (_iterator.s(); !(_step = _iterator.n()).done;) {
        _loop();
      }
    } catch (err) {
      _iterator.e(err);
    } finally {
      _iterator.f();
    }

    return orientationsMap;
  }

  var _default = GUIModel;
  _exports["default"] = _default;
});

/***/ }),

/***/ "./src/gui/model/ease/Ease.js":
/*!************************************!*\
  !*** ./src/gui/model/ease/Ease.js ***!
  \************************************/
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }

(function (global, factory) {
  if (true) {
    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [exports, __webpack_require__(/*! ./composites/Anchor */ "./src/gui/model/ease/composites/Anchor.js"), __webpack_require__(/*! ./composites/Handle */ "./src/gui/model/ease/composites/Handle.js"), __webpack_require__(/*! ./composites/Point */ "./src/gui/model/ease/composites/Point.js"), __webpack_require__(/*! ./exceptions/InvalidSVGPathException */ "./src/gui/model/ease/exceptions/InvalidSVGPathException.js"), __webpack_require__(/*! bezier-js */ "./node_modules/bezier-js/dist/bezier.cjs"), __webpack_require__(/*! ./EaseProperties */ "./src/gui/model/ease/EaseProperties.js")], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory),
		__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?
		(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
  } else { var mod; }
})(typeof globalThis !== "undefined" ? globalThis : typeof self !== "undefined" ? self : this, function (_exports, _Anchor, _Handle, _Point, _InvalidSVGPathException, _bezierJs, _EaseProperties) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "Anchor", {
    enumerable: true,
    get: function get() {
      return _Anchor["default"];
    }
  });
  Object.defineProperty(_exports, "Handle", {
    enumerable: true,
    get: function get() {
      return _Handle["default"];
    }
  });
  Object.defineProperty(_exports, "Point", {
    enumerable: true,
    get: function get() {
      return _Point["default"];
    }
  });
  Object.defineProperty(_exports, "InvalidSVGPathException", {
    enumerable: true,
    get: function get() {
      return _InvalidSVGPathException["default"];
    }
  });
  _exports["default"] = _exports.Ease = void 0;
  _Anchor = _interopRequireDefault(_Anchor);
  _Handle = _interopRequireDefault(_Handle);
  _Point = _interopRequireDefault(_Point);
  _InvalidSVGPathException = _interopRequireDefault(_InvalidSVGPathException);
  _EaseProperties = _interopRequireDefault(_EaseProperties);

  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

  function _wrapRegExp() { _wrapRegExp = function _wrapRegExp(re, groups) { return new BabelRegExp(re, void 0, groups); }; var _super = RegExp.prototype, _groups = new WeakMap(); function BabelRegExp(re, flags, groups) { var _this = new RegExp(re, flags); return _groups.set(_this, groups || _groups.get(re)), _setPrototypeOf(_this, BabelRegExp.prototype); } function buildGroups(result, re) { var g = _groups.get(re); return Object.keys(g).reduce(function (groups, name) { return groups[name] = result[g[name]], groups; }, Object.create(null)); } return _inherits(BabelRegExp, RegExp), BabelRegExp.prototype.exec = function (str) { var result = _super.exec.call(this, str); return result && (result.groups = buildGroups(result, this)), result; }, BabelRegExp.prototype[Symbol.replace] = function (str, substitution) { if ("string" == typeof substitution) { var groups = _groups.get(this); return _super[Symbol.replace].call(this, str, substitution.replace(/\$<([^>]+)>/g, function (_, name) { return "$" + groups[name]; })); } if ("function" == typeof substitution) { var _this = this; return _super[Symbol.replace].call(this, str, function () { var args = arguments; return "object" != _typeof(args[args.length - 1]) && (args = [].slice.call(args)).push(buildGroups(args, _this)), substitution.apply(this, args); }); } return _super[Symbol.replace].call(this, str, substitution); }, _wrapRegExp.apply(this, arguments); }

  function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, "prototype", { writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }

  function _construct(Parent, args, Class) { if (_isNativeReflectConstruct()) { _construct = Reflect.construct; } else { _construct = function _construct(Parent, args, Class) { var a = [null]; a.push.apply(a, args); var Constructor = Function.bind.apply(Parent, a); var instance = new Constructor(); if (Class) _setPrototypeOf(instance, Class.prototype); return instance; }; } return _construct.apply(null, arguments); }

  function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

  function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

  function _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e2) { throw _e2; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e3) { didErr = true; err = _e3; }, f: function f() { try { if (!normalCompletion && it["return"] != null) it["return"](); } finally { if (didErr) throw err; } } }; }

  function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }

  function _nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

  function _iterableToArray(iter) { if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null) return Array.from(iter); }

  function _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }

  function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }

  function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

  function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

  function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

  function _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

  function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

  function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

  function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

  function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }

  var Ease = /*#__PURE__*/function () {
    function Ease() {
      _classCallCheck(this, Ease);

      for (var _len = arguments.length, anchors = new Array(_len), _key = 0; _key < _len; _key++) {
        anchors[_key] = arguments[_key];
      }

      this._anchors = Array.from(anchors);
      this._props = new _EaseProperties["default"](this);
    }

    _createClass(Ease, [{
      key: "props",
      get: function get() {
        return this._props;
      }
    }, {
      key: "anchors",
      get: function get() {
        return this._anchors;
      }
    }, {
      key: "firstAnchor",
      get: function get() {
        return this._anchors[0];
      }
    }, {
      key: "lastAnchor",
      get: function get() {
        return this._anchors[this._anchors.length - 1];
      }
    }, {
      key: "svgPath",
      get: function get() {
        return Ease.toSVGPath(this);
      }
    }, {
      key: "points",
      get: function get() {
        var points = [];

        for (var i = 0; i < this.anchors.length; i += 2) {
          var startAnchor = this.anchors[i];
          var endAnchor = this.anchors[i + 1];
          points.push(startAnchor.toPoint(), startAnchor.handle.toPoint(), endAnchor.handle.toPoint(), endAnchor.toPoint());
        }

        return points;
      }
    }, {
      key: "computeValue",
      value: function computeValue(t) {
        var _findBezierSegment = findBezierSegment(this._anchors, t),
            _findBezierSegment2 = _slicedToArray(_findBezierSegment, 2),
            segmentStartAnchor = _findBezierSegment2[0],
            segmentEndAnchor = _findBezierSegment2[1];

        var segmentT = (t - segmentStartAnchor.x) / (segmentEndAnchor.x - segmentStartAnchor.x);

        if (segmentT.toFixed(3) === "0.000" || segmentT.toFixed(3) === "1.000") {
          var segmentAnchor = segmentT === 0 ? segmentStartAnchor : segmentEndAnchor;
          return segmentAnchor.y;
        } else {
          var segmentBezier = new _bezierJs.Bezier(segmentStartAnchor, segmentStartAnchor.handle, segmentEndAnchor.handle, segmentEndAnchor);
          var segmentBezierStep = segmentBezier.intersects({
            p1: {
              x: t,
              y: -10
            },
            p2: {
              x: t,
              y: 10
            }
          }).shift();
          return segmentBezier.get(segmentBezierStep).y;
        }
      }
    }, {
      key: "equals",
      value: function equals(ease) {
        return this.svgPath === ease.svgPath;
      }
    }, {
      key: "addAnchor",
      value: function addAnchor(x, y) {
        var anchor = new _Anchor["default"](x, y);
        this.anchors.push(anchor);
        return anchor;
      }
    }, {
      key: "toString",
      value: function toString() {
        return this.svgPath;
      }
    }, {
      key: "clone",
      value: function clone() {
        var clone = Ease.of.apply(Ease, _toConsumableArray(this._anchors.map(function (anchor) {
          return anchor.clone();
        })));

        var _iterator = _createForOfIteratorHelper(this._props.entries()),
            _step;

        try {
          for (_iterator.s(); !(_step = _iterator.n()).done;) {
            var _step$value = _slicedToArray(_step.value, 2),
                propertyName = _step$value[0],
                property = _step$value[1];

            clone.props.add(propertyName, property.value, property.mutation, property.uiConfig);
          }
        } catch (err) {
          _iterator.e(err);
        } finally {
          _iterator.f();
        }

        return clone;
      }
    }], [{
      key: "of",
      value: function of() {
        for (var _len2 = arguments.length, anchors = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
          anchors[_key2] = arguments[_key2];
        }

        return _construct(Ease, anchors);
      }
    }, {
      key: "ofSVGPath",
      value: function ofSVGPath(svgPath) {
        try {
          var trimmedPath = svgPath.trim();

          var _trimmedPath$match$sp = trimmedPath.match( /*#__PURE__*/_wrapRegExp(/^M *(\x2D?[\.0-9]+),(\x2D?[\.0-9]+)/, {
            x: 1,
            y: 2
          })).splice(-2).map(safeParseCoordinate),
              _trimmedPath$match$sp2 = _slicedToArray(_trimmedPath$match$sp, 2),
              startX = _trimmedPath$match$sp2[0],
              startY = _trimmedPath$match$sp2[1];

          var cCoords = trimmedPath.replace(/^M.*C */, "").split(/[ ,]/).map(safeParseCoordinate);

          if (cCoords.length % 6 !== 0) {
            throw new Error("Irregular number of coordinates provided.");
          } else {
            var anchors = [];
            anchors[0] = _Anchor["default"].ofOriginAndHandle(_Point["default"].of(startX, startY), _Point["default"].of(cCoords[0], cCoords[1]));

            for (var i = 2; i < cCoords.length - 4; i += 6) {
              var a = (i - 2) / 3 + 1;
              anchors[a] = _Anchor["default"].ofOriginAndHandle(_Point["default"].of(cCoords[i + 2], cCoords[i + 3]), _Point["default"].of(cCoords[i], cCoords[i + 1]));
              anchors[a + 1] = _Anchor["default"].ofOriginAndHandle(_Point["default"].of(cCoords[i + 2], cCoords[i + 3]), _Point["default"].of(cCoords[i + 4], cCoords[i + 5]));
            }

            var lastAnchor = _Anchor["default"].ofOriginAndHandle(_Point["default"].of.apply(_Point["default"], _toConsumableArray(cCoords.slice(-2))), _Point["default"].of(cCoords[cCoords.length - 4], cCoords[cCoords.length - 3]));

            anchors.push(lastAnchor);
            return Ease.of.apply(Ease, anchors);
          }
        } catch (e) {
          throw new _InvalidSVGPathException["default"](e);
        }
      }
    }, {
      key: "toSVGPath",
      value: function toSVGPath(ease) {
        var path = "M ".concat(ease.firstAnchor.x, ",").concat(ease.firstAnchor.y, " C");

        for (var i = 0; i < ease.anchors.length; i += 2) {
          var startAnchor = ease.anchors[i];
          var endAnchor = ease.anchors[i + 1];
          path += " ".concat(startAnchor.handle.x, ",").concat(startAnchor.handle.y, " ").concat(endAnchor.handle.x, ",").concat(endAnchor.handle.y, " ").concat(endAnchor.x, ",").concat(endAnchor.y);
        }

        var points = ease.points;
        var originPoint = points.shift();
        var path2 = "M ".concat(originPoint.x, ",").concat(originPoint.y, " C");

        var _iterator2 = _createForOfIteratorHelper(points),
            _step2;

        try {
          for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {
            var point = _step2.value;
            path2 += " ".concat(point.x, ",").concat(point.y);
          }
        } catch (err) {
          _iterator2.e(err);
        } finally {
          _iterator2.f();
        }

        return path;
      }
    }, {
      key: "checkSignature",
      value: function checkSignature(object) {
        return Array.isArray(object.anchors) && typeof object.svgPath === "string" && typeof object.computeValue === "function";
      }
    }]);

    return Ease;
  }();

  _exports.Ease = Ease;

  function findBezierSegment(anchors, progress) {
    var startAnchor, endAnchor;

    for (var i = 0; i < anchors.length; i++) {
      startAnchor = anchors[i];
      endAnchor = anchors[i + 1];
      if (startAnchor.x <= progress && endAnchor.x >= progress) break;
    }

    return [startAnchor, endAnchor];
  }

  function safeParseCoordinate(rawCoordinate) {
    var coordinate = Number.parseFloat(rawCoordinate);
    if (coordinate === NaN) throw new Error("Error parsing coordinate \"".concat(rawCoordinate, "\""));
    return coordinate;
  }

  var _default = Ease;
  _exports["default"] = _default;
});

/***/ }),

/***/ "./src/gui/model/ease/EaseProperties.js":
/*!**********************************************!*\
  !*** ./src/gui/model/ease/EaseProperties.js ***!
  \**********************************************/
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }

(function (global, factory) {
  if (true) {
    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [exports, __webpack_require__(/*! ./EaseProperty */ "./src/gui/model/ease/EaseProperty.js")], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory),
		__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?
		(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
  } else { var mod; }
})(typeof globalThis !== "undefined" ? globalThis : typeof self !== "undefined" ? self : this, function (_exports, _EaseProperty) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports["default"] = void 0;
  _EaseProperty = _interopRequireDefault(_EaseProperty);

  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

  function _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it["return"] != null) it["return"](); } finally { if (didErr) throw err; } } }; }

  function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

  function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

  function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

  function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

  function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }

  function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, "prototype", { writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }

  function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

  function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } else if (call !== void 0) { throw new TypeError("Derived constructors may only return object or undefined"); } return _assertThisInitialized(self); }

  function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

  function _wrapNativeSuper(Class) { var _cache = typeof Map === "function" ? new Map() : undefined; _wrapNativeSuper = function _wrapNativeSuper(Class) { if (Class === null || !_isNativeFunction(Class)) return Class; if (typeof Class !== "function") { throw new TypeError("Super expression must either be null or a function"); } if (typeof _cache !== "undefined") { if (_cache.has(Class)) return _cache.get(Class); _cache.set(Class, Wrapper); } function Wrapper() { return _construct(Class, arguments, _getPrototypeOf(this).constructor); } Wrapper.prototype = Object.create(Class.prototype, { constructor: { value: Wrapper, enumerable: false, writable: true, configurable: true } }); return _setPrototypeOf(Wrapper, Class); }; return _wrapNativeSuper(Class); }

  function _construct(Parent, args, Class) { if (_isNativeReflectConstruct()) { _construct = Reflect.construct; } else { _construct = function _construct(Parent, args, Class) { var a = [null]; a.push.apply(a, args); var Constructor = Function.bind.apply(Parent, a); var instance = new Constructor(); if (Class) _setPrototypeOf(instance, Class.prototype); return instance; }; } return _construct.apply(null, arguments); }

  function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

  function _isNativeFunction(fn) { return Function.toString.call(fn).indexOf("[native code]") !== -1; }

  function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

  function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

  var EaseProperties = /*#__PURE__*/function (_Map) {
    _inherits(EaseProperties, _Map);

    var _super = _createSuper(EaseProperties);

    function EaseProperties(ease) {
      var _this;

      _classCallCheck(this, EaseProperties);

      _this = _super.call(this);
      _this._ease = ease;
      return _this;
    }

    _createClass(EaseProperties, [{
      key: "add",
      value: function add(propertyName, defaultValue, mutationFunction, uiConfig) {
        this.set(propertyName, new _EaseProperty["default"](propertyName, defaultValue, mutationFunction, uiConfig));
      }
    }, {
      key: "getValue",
      value: function getValue(propertyName) {
        return this.has(propertyName) ? this.get(propertyName).value : undefined;
      }
    }, {
      key: "setValue",
      value: function setValue(propertyName, value) {
        if (this.has(propertyName)) {
          this.get(propertyName).value = value;
        }
      }
    }, {
      key: "copyValues",
      value: function copyValues(props) {
        var _iterator = _createForOfIteratorHelper(props.values()),
            _step;

        try {
          for (_iterator.s(); !(_step = _iterator.n()).done;) {
            var property = _step.value;

            if (this.has(property.name)) {
              this.get(property.name).value = property.value;
            }
          }
        } catch (err) {
          _iterator.e(err);
        } finally {
          _iterator.f();
        }
      }
    }, {
      key: "resetValues",
      value: function resetValues() {
        var _iterator2 = _createForOfIteratorHelper(this.values()),
            _step2;

        try {
          for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {
            var property = _step2.value;
            property.reset();
          }
        } catch (err) {
          _iterator2.e(err);
        } finally {
          _iterator2.f();
        }
      }
    }]);

    return EaseProperties;
  }( /*#__PURE__*/_wrapNativeSuper(Map));

  _exports["default"] = EaseProperties;
});

/***/ }),

/***/ "./src/gui/model/ease/EaseProperty.js":
/*!********************************************!*\
  !*** ./src/gui/model/ease/EaseProperty.js ***!
  \********************************************/
/***/ (function(module, exports) {

var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;(function (global, factory) {
  if (true) {
    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [exports], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory),
		__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?
		(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
  } else { var mod; }
})(typeof globalThis !== "undefined" ? globalThis : typeof self !== "undefined" ? self : this, function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports["default"] = void 0;

  function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

  function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

  function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }

  var EaseProperty = /*#__PURE__*/function () {
    function EaseProperty(name, value, mutationFunction, uiConfig) {
      _classCallCheck(this, EaseProperty);

      this._name = name;
      this._defaultValue = value;
      this._value = this._defaultValue;
      this._mutationFunction = mutationFunction;
      this._uiConfig = uiConfig;
    }

    _createClass(EaseProperty, [{
      key: "name",
      get: function get() {
        return this._name;
      }
    }, {
      key: "value",
      get: function get() {
        return this._value;
      },
      set: function set(value) {
        this._value = value;
      }
    }, {
      key: "mutation",
      get: function get() {
        return this._mutationFunction;
      }
    }, {
      key: "uiConfig",
      get: function get() {
        return this._uiConfig;
      }
    }, {
      key: "mutate",
      value: function mutate(ease) {
        var value = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this._value;

        if (this._mutationFunction) {
          this._mutationFunction(ease, value);
        }
      }
    }, {
      key: "reset",
      value: function reset() {
        this._value = this._defaultValue;
      }
    }]);

    return EaseProperty;
  }();

  var _default = EaseProperty;
  _exports["default"] = _default;
});

/***/ }),

/***/ "./src/gui/model/ease/composites/Anchor.js":
/*!*************************************************!*\
  !*** ./src/gui/model/ease/composites/Anchor.js ***!
  \*************************************************/
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }

(function (global, factory) {
  if (true) {
    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [exports, __webpack_require__(/*! ./Handle */ "./src/gui/model/ease/composites/Handle.js"), __webpack_require__(/*! ./Point */ "./src/gui/model/ease/composites/Point.js")], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory),
		__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?
		(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
  } else { var mod; }
})(typeof globalThis !== "undefined" ? globalThis : typeof self !== "undefined" ? self : this, function (_exports, _Handle, _Point2) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports["default"] = void 0;
  _Handle = _interopRequireDefault(_Handle);
  _Point2 = _interopRequireDefault(_Point2);

  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

  function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

  function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

  function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }

  function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, "prototype", { writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }

  function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

  function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

  function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } else if (call !== void 0) { throw new TypeError("Derived constructors may only return object or undefined"); } return _assertThisInitialized(self); }

  function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

  function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

  function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

  var Anchor = /*#__PURE__*/function (_Point) {
    _inherits(Anchor, _Point);

    var _super = _createSuper(Anchor);

    function Anchor(x, y) {
      var _this;

      _classCallCheck(this, Anchor);

      _this = _super.call(this, x, y);
      _this.handle = new _Handle["default"](x, y);
      return _this;
    }

    _createClass(Anchor, [{
      key: "toPoint",
      value: function toPoint() {
        return _Point2["default"].of(this.x, this.y);
      }
    }, {
      key: "clone",
      value: function clone() {
        var clone = Anchor.ofOrigin(this);
        clone.handle.copy(this.handle);
        return clone;
      }
    }], [{
      key: "ofOriginAndHandle",
      value: function ofOriginAndHandle(originPointLike, handlePointLike) {
        var anchor = Anchor.ofOrigin(originPointLike);
        anchor.handle.copy(handlePointLike);
        return anchor;
      }
    }, {
      key: "ofOrigin",
      value: function ofOrigin(pointLike) {
        return Anchor.of(pointLike.x, pointLike.y);
      }
    }, {
      key: "of",
      value: function of(x, y) {
        return new Anchor(x, y);
      }
    }]);

    return Anchor;
  }(_Point2["default"]);

  _exports["default"] = Anchor;
});

/***/ }),

/***/ "./src/gui/model/ease/composites/Handle.js":
/*!*************************************************!*\
  !*** ./src/gui/model/ease/composites/Handle.js ***!
  \*************************************************/
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }

(function (global, factory) {
  if (true) {
    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [exports, __webpack_require__(/*! ./Point */ "./src/gui/model/ease/composites/Point.js")], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory),
		__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?
		(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
  } else { var mod; }
})(typeof globalThis !== "undefined" ? globalThis : typeof self !== "undefined" ? self : this, function (_exports, _Point2) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports["default"] = void 0;
  _Point2 = _interopRequireDefault(_Point2);

  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

  function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

  function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

  function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }

  function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, "prototype", { writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }

  function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

  function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

  function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } else if (call !== void 0) { throw new TypeError("Derived constructors may only return object or undefined"); } return _assertThisInitialized(self); }

  function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

  function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

  function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

  var Handle = /*#__PURE__*/function (_Point) {
    _inherits(Handle, _Point);

    var _super = _createSuper(Handle);

    function Handle() {
      _classCallCheck(this, Handle);

      return _super.apply(this, arguments);
    }

    _createClass(Handle, [{
      key: "toPoint",
      value: function toPoint() {
        return _Point2["default"].of(this.x, this.y);
      }
    }], [{
      key: "of",
      value: function of(x, y) {
        return new Handle(x, y);
      }
    }]);

    return Handle;
  }(_Point2["default"]);

  _exports["default"] = Handle;
});

/***/ }),

/***/ "./src/gui/model/ease/composites/Point.js":
/*!************************************************!*\
  !*** ./src/gui/model/ease/composites/Point.js ***!
  \************************************************/
/***/ (function(module, exports) {

var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;(function (global, factory) {
  if (true) {
    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [exports], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory),
		__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?
		(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
  } else { var mod; }
})(typeof globalThis !== "undefined" ? globalThis : typeof self !== "undefined" ? self : this, function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports["default"] = void 0;

  function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

  function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

  function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }

  var Point = /*#__PURE__*/function () {
    function Point() {
      var x = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;
      var y = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;

      _classCallCheck(this, Point);

      this.x = x;
      this.y = y;
    }

    _createClass(Point, [{
      key: "copy",
      value: function copy(pointLike) {
        this.x = pointLike.x;
        this.y = pointLike.y;
      }
    }], [{
      key: "of",
      value: function of(x, y) {
        return new Point(x, y);
      }
    }]);

    return Point;
  }();

  _exports["default"] = Point;
});

/***/ }),

/***/ "./src/gui/model/ease/exceptions/InvalidSVGPathException.js":
/*!******************************************************************!*\
  !*** ./src/gui/model/ease/exceptions/InvalidSVGPathException.js ***!
  \******************************************************************/
/***/ (function(module, exports) {

var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }

(function (global, factory) {
  if (true) {
    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [exports], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory),
		__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?
		(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
  } else { var mod; }
})(typeof globalThis !== "undefined" ? globalThis : typeof self !== "undefined" ? self : this, function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports["default"] = void 0;

  function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

  function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, "prototype", { writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }

  function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

  function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } else if (call !== void 0) { throw new TypeError("Derived constructors may only return object or undefined"); } return _assertThisInitialized(self); }

  function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

  function _wrapNativeSuper(Class) { var _cache = typeof Map === "function" ? new Map() : undefined; _wrapNativeSuper = function _wrapNativeSuper(Class) { if (Class === null || !_isNativeFunction(Class)) return Class; if (typeof Class !== "function") { throw new TypeError("Super expression must either be null or a function"); } if (typeof _cache !== "undefined") { if (_cache.has(Class)) return _cache.get(Class); _cache.set(Class, Wrapper); } function Wrapper() { return _construct(Class, arguments, _getPrototypeOf(this).constructor); } Wrapper.prototype = Object.create(Class.prototype, { constructor: { value: Wrapper, enumerable: false, writable: true, configurable: true } }); return _setPrototypeOf(Wrapper, Class); }; return _wrapNativeSuper(Class); }

  function _construct(Parent, args, Class) { if (_isNativeReflectConstruct()) { _construct = Reflect.construct; } else { _construct = function _construct(Parent, args, Class) { var a = [null]; a.push.apply(a, args); var Constructor = Function.bind.apply(Parent, a); var instance = new Constructor(); if (Class) _setPrototypeOf(instance, Class.prototype); return instance; }; } return _construct.apply(null, arguments); }

  function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

  function _isNativeFunction(fn) { return Function.toString.call(fn).indexOf("[native code]") !== -1; }

  function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

  function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

  var InvalidSVGPathException = /*#__PURE__*/function (_Error) {
    _inherits(InvalidSVGPathException, _Error);

    var _super = _createSuper(InvalidSVGPathException);

    function InvalidSVGPathException() {
      _classCallCheck(this, InvalidSVGPathException);

      return _super.apply(this, arguments);
    }

    return InvalidSVGPathException;
  }( /*#__PURE__*/_wrapNativeSuper(Error));

  _exports["default"] = InvalidSVGPathException;
});

/***/ }),

/***/ "./src/gui/model/preset/EasePreset.js":
/*!********************************************!*\
  !*** ./src/gui/model/preset/EasePreset.js ***!
  \********************************************/
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;(function (global, factory) {
  if (true) {
    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [exports, __webpack_require__(/*! ../ease/Ease */ "./src/gui/model/ease/Ease.js"), __webpack_require__(/*! ./enum/Curve */ "./src/gui/model/preset/enum/Curve.js"), __webpack_require__(/*! ./enum/Orientation */ "./src/gui/model/preset/enum/Orientation.js")], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory),
		__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?
		(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
  } else { var mod; }
})(typeof globalThis !== "undefined" ? globalThis : typeof self !== "undefined" ? self : this, function (_exports, _Ease, _Curve, _Orientation) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "Curve", {
    enumerable: true,
    get: function get() {
      return _Curve["default"];
    }
  });
  Object.defineProperty(_exports, "Orientation", {
    enumerable: true,
    get: function get() {
      return _Orientation["default"];
    }
  });
  _exports["default"] = void 0;
  _Ease = _interopRequireDefault(_Ease);
  _Curve = _interopRequireDefault(_Curve);
  _Orientation = _interopRequireDefault(_Orientation);

  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

  function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

  function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

  function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }

  function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

  var EasePreset = /*#__PURE__*/function () {
    function EasePreset(easeOrSvgPath) {
      var curve = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : EasePreset.CURVE.UNDEFINED;
      var orientation = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : EasePreset.ORIENTATION.NONE;

      _classCallCheck(this, EasePreset);

      this.ease = easeOrSvgPath instanceof _Ease["default"] ? easeOrSvgPath : _Ease["default"].ofSVGPath(easeOrSvgPath);
      this.curve = curve;
      this.orientation = orientation;
    }

    _createClass(EasePreset, [{
      key: "clone",
      value: function clone() {
        return EasePreset.of(this.ease.clone(), this.curve, this.orientation);
      }
    }, {
      key: "toString",
      value: function toString() {
        return "[".concat(this.ease.toString(), "][").concat(this.curve, ".").concat(this.orientation, "]");
      }
    }, {
      key: "equals",
      value: function equals(preset) {
        return this.toString() === preset.toString();
      }
    }, {
      key: "property",
      value: function property(propertyName, defaultValue, mutationFunction, uiConfig) {
        this.ease.props.add(propertyName, defaultValue, mutationFunction, uiConfig);
        return this;
      }
    }], [{
      key: "of",
      value: function of(svgPath) {
        var curve = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : EasePreset.CURVE.UNDEFINED;
        var orientation = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : EasePreset.ORIENTATION.NONE;
        return new EasePreset(svgPath, curve, orientation);
      }
    }, {
      key: "checkSignature",
      value: function checkSignature(object) {
        return typeof object.ease === "string" && typeof object.curve === "string" && typeof object.orientation === "string" && typeof object.clone === "function";
      }
    }]);

    return EasePreset;
  }();

  _defineProperty(EasePreset, "CURVE", _Curve["default"]);

  _defineProperty(EasePreset, "ORIENTATION", _Orientation["default"]);

  var _default = EasePreset;
  _exports["default"] = _default;
});

/***/ }),

/***/ "./src/gui/model/preset/EasePresetProvider.js":
/*!****************************************************!*\
  !*** ./src/gui/model/preset/EasePresetProvider.js ***!
  \****************************************************/
/***/ (function(module, exports) {

var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;(function (global, factory) {
  if (true) {
    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [exports], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory),
		__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?
		(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
  } else { var mod; }
})(typeof globalThis !== "undefined" ? globalThis : typeof self !== "undefined" ? self : this, function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports["default"] = void 0;

  function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }

  function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

  function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

  function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

  function _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

  function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

  function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

  function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

  function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }

  var EasePresetProvider = /*#__PURE__*/function () {
    function EasePresetProvider(providerFunction) {
      _classCallCheck(this, EasePresetProvider);

      this._providerFunction = providerFunction;
      this._curveAlias = null;
      this._orientationAlias = null;
      this._props = {};
    }

    _createClass(EasePresetProvider, [{
      key: "withAlias",
      value: function withAlias(curveAlias) {
        this._curveAlias = curveAlias;
        return this;
      }
    }, {
      key: "withOrientation",
      value: function withOrientation(orientation) {
        this._orientationAlias = orientation;
        return this;
      }
    }, {
      key: "property",
      value: function property(propertyName, defaultValue, mutationFunction, uiConfig) {
        this._props[propertyName] = {
          uiConfig: uiConfig,
          value: defaultValue,
          mutate: mutationFunction
        };
        return this;
      }
    }, {
      key: "next",
      value: function next() {
        var preset = this._providerFunction();

        if (this._curveAlias) {
          preset.curve = this._curveAlias;
        }

        if (this._orientationAlias) {
          preset.orientation = this._orientationAlias;
        }

        for (var _i = 0, _Object$entries = Object.entries(this._props); _i < _Object$entries.length; _i++) {
          var _Object$entries$_i = _slicedToArray(_Object$entries[_i], 2),
              propertyName = _Object$entries$_i[0],
              propertyEntry = _Object$entries$_i[1];

          preset.property(propertyName, propertyEntry.value, propertyEntry.mutate, propertyEntry.uiConfig);
        }

        return preset;
      }
    }], [{
      key: "ofSample",
      value: function ofSample(preset) {
        return new EasePresetProvider(function () {
          return preset.clone();
        });
      }
    }, {
      key: "checkSignature",
      value: function checkSignature(object) {
        return typeof object.next === "function";
      }
    }]);

    return EasePresetProvider;
  }();

  var _default = EasePresetProvider;
  _exports["default"] = _default;
});

/***/ }),

/***/ "./src/gui/model/preset/enum/Curve.js":
/*!********************************************!*\
  !*** ./src/gui/model/preset/enum/Curve.js ***!
  \********************************************/
/***/ (function(module, exports) {

var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;(function (global, factory) {
  if (true) {
    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [exports], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory),
		__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?
		(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
  } else { var mod; }
})(typeof globalThis !== "undefined" ? globalThis : typeof self !== "undefined" ? self : this, function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports["default"] = void 0;

  var _default = Object.freeze({
    LINEAR: "Linear",
    SINE: "Sine",
    QUAD: "Quad",
    CUBIC: "Cubic",
    QUART: "Quart",
    QUINT: "Quint",
    EXPO: "Expo",
    CIRC: "Circ",
    BACK: "Back",
    ELASTIC: "Elastic",
    BOUNCE: "Bounce",
    CUSTOM: "Custom",
    UNDEFINED: "Undefined"
  });

  _exports["default"] = _default;
});

/***/ }),

/***/ "./src/gui/model/preset/enum/Orientation.js":
/*!**************************************************!*\
  !*** ./src/gui/model/preset/enum/Orientation.js ***!
  \**************************************************/
/***/ (function(module, exports) {

var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;(function (global, factory) {
  if (true) {
    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [exports], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory),
		__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?
		(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
  } else { var mod; }
})(typeof globalThis !== "undefined" ? globalThis : typeof self !== "undefined" ? self : this, function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports["default"] = void 0;

  var _default = Object.freeze({
    IN: "in",
    OUT: "out",
    IN_OUT: "inOut",
    NONE: "none"
  });

  _exports["default"] = _default;
});

/***/ }),

/***/ "./src/gui/model/preset/presets.js":
/*!*****************************************!*\
  !*** ./src/gui/model/preset/presets.js ***!
  \*****************************************/
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }

(function (global, factory) {
  if (true) {
    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [exports, __webpack_require__(/*! ./EasePreset */ "./src/gui/model/preset/EasePreset.js"), __webpack_require__(/*! ./EasePresetProvider */ "./src/gui/model/preset/EasePresetProvider.js")], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory),
		__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?
		(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
  } else { var mod; }
})(typeof globalThis !== "undefined" ? globalThis : typeof self !== "undefined" ? self : this, function (_exports, _EasePreset, _EasePresetProvider) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.BackInOut = _exports.BackOut = _exports.BackIn = _exports.CircInOut = _exports.CircOut = _exports.CircIn = _exports.ExpoInOut = _exports.ExpoOut = _exports.ExpoIn = _exports.QuartInOut = _exports.QuartOut = _exports.QuartIn = _exports.CubicInOut = _exports.CubicOut = _exports.CubicIn = _exports.QuadInOut = _exports.QuadOut = _exports.QuadIn = _exports.SineInOut = _exports.SineOut = _exports.SineIn = _exports.Linear = void 0;
  _EasePreset = _interopRequireWildcard(_EasePreset);
  _EasePresetProvider = _interopRequireDefault(_EasePresetProvider);

  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

  function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

  function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { "default": obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj["default"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

  // Predefined list of easings commonly used across various animation engines
  // https://easings.net/
  var Linear = _EasePresetProvider["default"].ofSample(_EasePreset["default"].of("M 0,0 C 0,0 1,1 1,1", _EasePreset.Curve.LINEAR, _EasePreset.Orientation.NONE));

  _exports.Linear = Linear;

  var SineIn = _EasePresetProvider["default"].ofSample(_EasePreset["default"].of("M 0,0 C 0.12,0 0.39,0 1,1", _EasePreset.Curve.SINE, _EasePreset.Orientation.IN));

  _exports.SineIn = SineIn;

  var SineOut = _EasePresetProvider["default"].ofSample(_EasePreset["default"].of("M 0,0 C 0.61,1 0.88,1 1,1", _EasePreset.Curve.SINE, _EasePreset.Orientation.OUT));

  _exports.SineOut = SineOut;

  var SineInOut = _EasePresetProvider["default"].ofSample(_EasePreset["default"].of("M 0,0 C 0.37,0 0.63,1 1,1", _EasePreset.Curve.SINE, _EasePreset.Orientation.IN_OUT));

  _exports.SineInOut = SineInOut;

  var QuadIn = _EasePresetProvider["default"].ofSample(_EasePreset["default"].of("M 0,0 C 0.11,0 0.5,0 1,1", _EasePreset.Curve.QUAD, _EasePreset.Orientation.IN));

  _exports.QuadIn = QuadIn;

  var QuadOut = _EasePresetProvider["default"].ofSample(_EasePreset["default"].of("M 0,0 C 0.5,1 0.89,1 1,1", _EasePreset.Curve.QUAD, _EasePreset.Orientation.OUT));

  _exports.QuadOut = QuadOut;

  var QuadInOut = _EasePresetProvider["default"].ofSample(_EasePreset["default"].of("M 0,0 C 0.45,0 0.55,1 1,1", _EasePreset.Curve.QUAD, _EasePreset.Orientation.IN_OUT));

  _exports.QuadInOut = QuadInOut;

  var CubicIn = _EasePresetProvider["default"].ofSample(_EasePreset["default"].of("M 0,0 C 0.32,0 0.67,0 1,1", _EasePreset.Curve.CUBIC, _EasePreset.Orientation.IN));

  _exports.CubicIn = CubicIn;

  var CubicOut = _EasePresetProvider["default"].ofSample(_EasePreset["default"].of("M 0,0 C 0.33,1 0.68,1 1,1", _EasePreset.Curve.CUBIC, _EasePreset.Orientation.OUT));

  _exports.CubicOut = CubicOut;

  var CubicInOut = _EasePresetProvider["default"].ofSample(_EasePreset["default"].of("M 0,0 C 0.65,0 0.35,1 1,1", _EasePreset.Curve.CUBIC, _EasePreset.Orientation.IN_OUT));

  _exports.CubicInOut = CubicInOut;

  var QuartIn = _EasePresetProvider["default"].ofSample(_EasePreset["default"].of("M 0,0 C 0.5,0 0.75,0 1,1", _EasePreset.Curve.QUART, _EasePreset.Orientation.IN));

  _exports.QuartIn = QuartIn;

  var QuartOut = _EasePresetProvider["default"].ofSample(_EasePreset["default"].of("M 0,0 C 0.25,1 0.5,1 1,1", _EasePreset.Curve.QUART, _EasePreset.Orientation.OUT));

  _exports.QuartOut = QuartOut;

  var QuartInOut = _EasePresetProvider["default"].ofSample(_EasePreset["default"].of("M 0,0 C 0.76,0 0.24,1 1,1", _EasePreset.Curve.QUART, _EasePreset.Orientation.IN_OUT));

  _exports.QuartInOut = QuartInOut;

  var ExpoIn = _EasePresetProvider["default"].ofSample(_EasePreset["default"].of("M 0,0 C 0.7,0 0.84,0 1,1", _EasePreset.Curve.EXPO, _EasePreset.Orientation.IN));

  _exports.ExpoIn = ExpoIn;

  var ExpoOut = _EasePresetProvider["default"].ofSample(_EasePreset["default"].of("M 0,0 C 0.16,1 0.3,1 1,1", _EasePreset.Curve.EXPO, _EasePreset.Orientation.OUT));

  _exports.ExpoOut = ExpoOut;

  var ExpoInOut = _EasePresetProvider["default"].ofSample(_EasePreset["default"].of("M 0,0 C 0.87,0 0.13,1 1,1", _EasePreset.Curve.EXPO, _EasePreset.Orientation.IN_OUT));

  _exports.ExpoInOut = ExpoInOut;

  var CircIn = _EasePresetProvider["default"].ofSample(_EasePreset["default"].of("M 0,0 C 0.55,0 1,0.45 1,1", _EasePreset.Curve.CIRC, _EasePreset.Orientation.IN));

  _exports.CircIn = CircIn;

  var CircOut = _EasePresetProvider["default"].ofSample(_EasePreset["default"].of("M 0,0 C 0,0.55 0.45,1 1,1", _EasePreset.Curve.CIRC, _EasePreset.Orientation.OUT));

  _exports.CircOut = CircOut;

  var CircInOut = _EasePresetProvider["default"].ofSample(_EasePreset["default"].of("M 0,0 C 0.85,0 0.15,1 1,1", _EasePreset.Curve.CIRC, _EasePreset.Orientation.IN_OUT));

  _exports.CircInOut = CircInOut;

  var BackIn = _EasePresetProvider["default"].ofSample(_EasePreset["default"].of("M 0,0 C 0.36,0 0.66,-0.56 1,1", _EasePreset.Curve.BACK, _EasePreset.Orientation.IN));

  _exports.BackIn = BackIn;

  var BackOut = _EasePresetProvider["default"].ofSample(_EasePreset["default"].of("M 0,0 C 0.34,1.56 0.64,1 1,1", _EasePreset.Curve.BACK, _EasePreset.Orientation.OUT));

  _exports.BackOut = BackOut;

  var BackInOut = _EasePresetProvider["default"].ofSample(_EasePreset["default"].of("M 0,0 C 0.68,-0.6 0.32,1.6 1,1", _EasePreset.Curve.BACK, _EasePreset.Orientation.IN_OUT));

  _exports.BackInOut = BackInOut;
});

/***/ }),

/***/ "./src/gui/view/GUIView.js":
/*!*********************************!*\
  !*** ./src/gui/view/GUIView.js ***!
  \*********************************/
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }

(function (global, factory) {
  if (true) {
    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [exports, __webpack_require__(/*! ./dom/gui.html */ "./src/gui/view/dom/gui.html"), __webpack_require__(/*! ./GUIViewEvent */ "./src/gui/view/GUIViewEvent.js"), __webpack_require__(/*! ./dom/directors/EasePanelDirector */ "./src/gui/view/dom/directors/EasePanelDirector.js"), __webpack_require__(/*! ./HTMLElementDirector */ "./src/gui/view/HTMLElementDirector.js"), __webpack_require__(/*! ./dom/directors/EaseEditorDirector */ "./src/gui/view/dom/directors/EaseEditorDirector.js"), __webpack_require__(/*! ./dom/directors/EasePropertiesDirector */ "./src/gui/view/dom/directors/EasePropertiesDirector.js")], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory),
		__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?
		(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
  } else { var mod; }
})(typeof globalThis !== "undefined" ? globalThis : typeof self !== "undefined" ? self : this, function (_exports, _gui, _GUIViewEvent, _EasePanelDirector, _HTMLElementDirector2, _EaseEditorDirector, _EasePropertiesDirector) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "GUIViewEvent", {
    enumerable: true,
    get: function get() {
      return _GUIViewEvent["default"];
    }
  });
  _exports["default"] = void 0;
  _gui = _interopRequireDefault(_gui);
  _GUIViewEvent = _interopRequireDefault(_GUIViewEvent);
  _EasePanelDirector = _interopRequireDefault(_EasePanelDirector);
  _HTMLElementDirector2 = _interopRequireDefault(_HTMLElementDirector2);
  _EaseEditorDirector = _interopRequireDefault(_EaseEditorDirector);
  _EasePropertiesDirector = _interopRequireDefault(_EasePropertiesDirector);

  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

  function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

  function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

  function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }

  function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, "prototype", { writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }

  function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

  function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

  function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } else if (call !== void 0) { throw new TypeError("Derived constructors may only return object or undefined"); } return _assertThisInitialized(self); }

  function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

  function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

  function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

  var GUIView = /*#__PURE__*/function (_HTMLElementDirector) {
    _inherits(GUIView, _HTMLElementDirector);

    var _super = _createSuper(GUIView);

    function GUIView(guiName, curves) {
      var _this;

      _classCallCheck(this, GUIView);

      _this = _super.call(this, _renderTemplate(_gui["default"]));
      _this._element.querySelector(".header .property-name").innerHTML = guiName;
      _this._easePanelDirector = new _EasePanelDirector["default"](_this._element, curves);
      _this._easePropertiesDirector = new _EasePropertiesDirector["default"](_this._element);
      _this._easeEditorDirector = null;

      _this._easePanelDirector.on(_GUIViewEvent["default"].CURVE_PRESET_SELECTED, function () {
        var _this2;

        for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
          args[_key] = arguments[_key];
        }

        return (_this2 = _this).emit.apply(_this2, [_GUIViewEvent["default"].CURVE_PRESET_SELECTED].concat(args));
      });

      _this._easePanelDirector.on(_GUIViewEvent["default"].ORIENTATION_PRESET_SELECTED, function () {
        var _this3;

        for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
          args[_key2] = arguments[_key2];
        }

        return (_this3 = _this).emit.apply(_this3, [_GUIViewEvent["default"].ORIENTATION_PRESET_SELECTED].concat(args));
      });

      _this._easePanelDirector.on(_GUIViewEvent["default"].EDIT_EASE_CLICKED, function () {
        var _this4;

        for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {
          args[_key3] = arguments[_key3];
        }

        return (_this4 = _this).emit.apply(_this4, [_GUIViewEvent["default"].EDIT_EASE_CLICKED].concat(args));
      });

      _this._easePropertiesDirector.on(_GUIViewEvent["default"].PROPERTY_MODIFIED, function () {
        var _this5;

        for (var _len4 = arguments.length, args = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {
          args[_key4] = arguments[_key4];
        }

        return (_this5 = _this).emit.apply(_this5, [_GUIViewEvent["default"].PROPERTY_MODIFIED].concat(args));
      });

      return _this;
    }

    _createClass(GUIView, [{
      key: "setOrientations",
      value: function setOrientations(orientations) {
        this._easePanelDirector.setOrientations(orientations);
      }
    }, {
      key: "setPreset",
      value: function setPreset(preset) {
        this._easePanelDirector.setPreset(preset);

        this._easePropertiesDirector.values = preset.ease.props;

        if (this._isEditorOpen()) {
          this._easeEditorDirector.ease = preset.ease;
        }
      }
    }, {
      key: "openEditor",
      value: function openEditor(initialEase) {
        var _this6 = this;

        if (this._isEditorOpen()) return;

        this._element.classList.remove("mode-select");

        this._element.classList.add("mode-edit");

        this._easeEditorDirector = new _EaseEditorDirector["default"](this._element);

        this._easeEditorDirector.on(_GUIViewEvent["default"].ACCEPT_EASE_EDIT_CLICKED, function () {
          for (var _len5 = arguments.length, args = new Array(_len5), _key5 = 0; _key5 < _len5; _key5++) {
            args[_key5] = arguments[_key5];
          }

          return _this6.emit.apply(_this6, [_GUIViewEvent["default"].ACCEPT_EASE_EDIT_CLICKED].concat(args));
        });

        this._easeEditorDirector.on(_GUIViewEvent["default"].DISCARD_EASE_EDIT_CLICKED, function () {
          for (var _len6 = arguments.length, args = new Array(_len6), _key6 = 0; _key6 < _len6; _key6++) {
            args[_key6] = arguments[_key6];
          }

          return _this6.emit.apply(_this6, [_GUIViewEvent["default"].DISCARD_EASE_EDIT_CLICKED].concat(args));
        });

        this._easeEditorDirector.on(_GUIViewEvent["default"].EASE_MODIFIED, function () {
          for (var _len7 = arguments.length, args = new Array(_len7), _key7 = 0; _key7 < _len7; _key7++) {
            args[_key7] = arguments[_key7];
          }

          return _this6.emit.apply(_this6, [_GUIViewEvent["default"].EASE_MODIFIED].concat(args));
        });

        this._easeEditorDirector.ease = initialEase;
      }
    }, {
      key: "closeEditor",
      value: function closeEditor() {
        if (!this._isEditorOpen()) return;

        this._element.classList.remove("mode-edit");

        this._element.classList.add("mode-select");

        this._easeEditorDirector.cleanUp();

        this._easeEditorDirector = null;
      }
    }, {
      key: "showEditButton",
      value: function showEditButton() {
        this._easePanelDirector.showEditButton();
      }
    }, {
      key: "domElement",
      get: function get() {
        return this._element;
      }
    }, {
      key: "_isEditorOpen",
      value: function _isEditorOpen() {
        return !!this._easeEditorDirector;
      }
    }]);

    return GUIView;
  }(_HTMLElementDirector2["default"]);

  function _renderTemplate(template) {
    return new DOMParser().parseFromString(template, "text/html").body.firstChild;
  }

  var _default = GUIView;
  _exports["default"] = _default;
});

/***/ }),

/***/ "./src/gui/view/GUIViewEvent.js":
/*!**************************************!*\
  !*** ./src/gui/view/GUIViewEvent.js ***!
  \**************************************/
/***/ (function(module, exports) {

var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;(function (global, factory) {
  if (true) {
    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [exports], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory),
		__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?
		(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
  } else { var mod; }
})(typeof globalThis !== "undefined" ? globalThis : typeof self !== "undefined" ? self : this, function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports["default"] = void 0;

  var _default = Object.freeze({
    CURVE_PRESET_SELECTED: "CurvePresetSelectedGUIViewEvent",
    ORIENTATION_PRESET_SELECTED: "OrientationPresetSelectedGUIViewEvent",
    PROPERTY_MODIFIED: "PropertyModifiedGUIViewEvent",
    EDIT_EASE_CLICKED: "EditEaseClickedGUIViewEvent",
    EASE_MODIFIED: "EaseModifiedGUIViewEvent",
    ACCEPT_EASE_EDIT_CLICKED: "AcceptEaseEditClickedGUIViewEvent",
    DISCARD_EASE_EDIT_CLICKED: "DiscardEaseEditClickedGUIViewEvent"
  });

  _exports["default"] = _default;
});

/***/ }),

/***/ "./src/gui/view/HTMLElementDirector.js":
/*!*********************************************!*\
  !*** ./src/gui/view/HTMLElementDirector.js ***!
  \*********************************************/
/***/ (function(module, exports) {

var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;(function (global, factory) {
  if (true) {
    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [exports], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory),
		__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?
		(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
  } else { var mod; }
})(typeof globalThis !== "undefined" ? globalThis : typeof self !== "undefined" ? self : this, function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports["default"] = void 0;

  function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }

  function _nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

  function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

  function _iterableToArray(iter) { if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null) return Array.from(iter); }

  function _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }

  function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

  function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

  function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

  function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }

  var HTMLElementDirector = /*#__PURE__*/function () {
    function HTMLElementDirector(htmlElement) {
      _classCallCheck(this, HTMLElementDirector);

      this._element = htmlElement;
    }

    _createClass(HTMLElementDirector, [{
      key: "on",
      value: function on(eventKey, callback) {
        this._element.addEventListener(eventKey, function (event) {
          return callback.apply(void 0, _toConsumableArray(event.detail));
        });
      }
    }, {
      key: "emit",
      value: function emit(eventKey) {
        for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
          args[_key - 1] = arguments[_key];
        }

        this._element.dispatchEvent(new CustomEvent(eventKey, {
          detail: args
        }));
      }
    }]);

    return HTMLElementDirector;
  }();

  _exports["default"] = HTMLElementDirector;
});

/***/ }),

/***/ "./src/gui/view/dom/directors/CurveSelectorDirector.js":
/*!*************************************************************!*\
  !*** ./src/gui/view/dom/directors/CurveSelectorDirector.js ***!
  \*************************************************************/
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }

(function (global, factory) {
  if (true) {
    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [exports, __webpack_require__(/*! ../../HTMLElementDirector */ "./src/gui/view/HTMLElementDirector.js"), __webpack_require__(/*! ../selectors */ "./src/gui/view/dom/selectors.js"), __webpack_require__(/*! ../../../model/preset/EasePreset */ "./src/gui/model/preset/EasePreset.js"), __webpack_require__(/*! ../../GUIViewEvent */ "./src/gui/view/GUIViewEvent.js")], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory),
		__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?
		(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
  } else { var mod; }
})(typeof globalThis !== "undefined" ? globalThis : typeof self !== "undefined" ? self : this, function (_exports, _HTMLElementDirector2, _selectors, _EasePreset, _GUIViewEvent) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports["default"] = void 0;
  _HTMLElementDirector2 = _interopRequireDefault(_HTMLElementDirector2);
  _GUIViewEvent = _interopRequireDefault(_GUIViewEvent);

  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

  function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }

  function _nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

  function _iterableToArray(iter) { if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null) return Array.from(iter); }

  function _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }

  function _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it["return"] != null) it["return"](); } finally { if (didErr) throw err; } } }; }

  function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

  function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

  function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

  function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

  function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }

  function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, "prototype", { writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }

  function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

  function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

  function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } else if (call !== void 0) { throw new TypeError("Derived constructors may only return object or undefined"); } return _assertThisInitialized(self); }

  function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

  function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

  function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

  var CurveSelectorDirector = /*#__PURE__*/function (_HTMLElementDirector) {
    _inherits(CurveSelectorDirector, _HTMLElementDirector);

    var _super = _createSuper(CurveSelectorDirector);

    function CurveSelectorDirector(rootDomElement, curves) {
      var _this;

      _classCallCheck(this, CurveSelectorDirector);

      _this = _super.call(this, (0, _selectors.curveSelector)(rootDomElement));

      var _iterator = _createForOfIteratorHelper(_this._composeOptions(curves)),
          _step;

      try {
        for (_iterator.s(); !(_step = _iterator.n()).done;) {
          var option = _step.value;

          _this._element.options.add(option);
        }
      } catch (err) {
        _iterator.e(err);
      } finally {
        _iterator.f();
      }

      _this._element.onchange = function () {
        return _this.emit(_GUIViewEvent["default"].CURVE_PRESET_SELECTED, _this._element.value);
      };

      return _this;
    }

    _createClass(CurveSelectorDirector, [{
      key: "value",
      set: function set(curve) {
        this._element.value = curve;
      }
    }, {
      key: "_composeOptions",
      value: function _composeOptions(curves) {
        var options = curves.map(function (curve) {
          return new Option(curve, curve);
        });
        return [].concat(_toConsumableArray(options), [this._createCustomCurveOption()]);
      }
    }, {
      key: "_createCustomCurveOption",
      value: function _createCustomCurveOption() {
        var customCurveOption = new Option(_EasePreset.Curve.CUSTOM, _EasePreset.Curve.CUSTOM);
        customCurveOption.setAttribute("hidden", true);
        return customCurveOption;
      }
    }]);

    return CurveSelectorDirector;
  }(_HTMLElementDirector2["default"]);

  _exports["default"] = CurveSelectorDirector;
});

/***/ }),

/***/ "./src/gui/view/dom/directors/EaseEditorDirector.js":
/*!**********************************************************!*\
  !*** ./src/gui/view/dom/directors/EaseEditorDirector.js ***!
  \**********************************************************/
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }

(function (global, factory) {
  if (true) {
    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [exports, __webpack_require__(/*! ../../../model/ease/Ease */ "./src/gui/model/ease/Ease.js"), __webpack_require__(/*! ../../editor/EaseEditor */ "./src/gui/view/editor/EaseEditor.js"), __webpack_require__(/*! ../../GUIView */ "./src/gui/view/GUIView.js"), __webpack_require__(/*! ../../HTMLElementDirector */ "./src/gui/view/HTMLElementDirector.js"), __webpack_require__(/*! ../selectors */ "./src/gui/view/dom/selectors.js")], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory),
		__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?
		(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
  } else { var mod; }
})(typeof globalThis !== "undefined" ? globalThis : typeof self !== "undefined" ? self : this, function (_exports, _Ease, _EaseEditor, _GUIView, _HTMLElementDirector2, _selectors) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports["default"] = void 0;
  _Ease = _interopRequireDefault(_Ease);
  _EaseEditor = _interopRequireWildcard(_EaseEditor);
  _HTMLElementDirector2 = _interopRequireDefault(_HTMLElementDirector2);

  function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

  function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { "default": obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj["default"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

  function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

  function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

  function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }

  function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, "prototype", { writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }

  function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

  function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

  function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } else if (call !== void 0) { throw new TypeError("Derived constructors may only return object or undefined"); } return _assertThisInitialized(self); }

  function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

  function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

  function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

  var EaseEditorDirector = /*#__PURE__*/function (_HTMLElementDirector) {
    _inherits(EaseEditorDirector, _HTMLElementDirector);

    var _super = _createSuper(EaseEditorDirector);

    function EaseEditorDirector(rootDomElement) {
      var _this;

      _classCallCheck(this, EaseEditorDirector);

      _this = _super.call(this, (0, _selectors.editorCanvas)(rootDomElement));
      _this._editor = new _EaseEditor["default"](_this._element);

      _this._element.addEventListener(_EaseEditor.EditorCurveChangeEvent.KEY, function () {
        return _this.emit(_GUIView.GUIViewEvent.EASE_MODIFIED, _this._editor.ease);
      });

      _this._svgPathInspector = _this._initSvgPathInspector(rootDomElement);
      _this._copyButton = _this._initCopyButton(rootDomElement, _this._svgPathInspector);
      _this._acceptButton = _this._initAcceptButton(rootDomElement);
      _this._discardButton = _this._initDiscardButton(rootDomElement);
      return _this;
    }

    _createClass(EaseEditorDirector, [{
      key: "ease",
      set: function set(ease) {
        this._editor.ease = ease;
        this._svgPathInspector.value = ease.toString();
      }
    }, {
      key: "cleanUp",
      value: function cleanUp() {
        // Hack to reset event listeners assigned to original canvas by CurveJS & external listeners
        var canvas = this._element;
        var canvasClone = canvas.cloneNode(true);
        canvas.parentNode.replaceChild(canvasClone, canvas);
      }
    }, {
      key: "_initSvgPathInspector",
      value: function _initSvgPathInspector(rootDomElement) {
        var _this2 = this;

        var inspectorElement = (0, _selectors.editorSvgPathInspector)(rootDomElement);

        inspectorElement.oninput = function (event) {
          try {
            var ease = _Ease["default"].fromSVGPath(inspectorElement.value);

            _this2._editor.ease = ease;

            _this2.emit(_GUIView.GUIViewEvent.EASE_MODIFIED, ease);
          } catch (e) {
            console.warn("Couldn't parse SVG path ".concat(inspectorElement.value));
          }
        };

        return inspectorElement;
      }
    }, {
      key: "_initCopyButton",
      value: function _initCopyButton(rootDomElement, svgPathInspectorElement) {
        var buttonElement = (0, _selectors.editorSvgPathCopyButton)(rootDomElement);

        buttonElement.onclick = function () {
          svgPathInspectorElement.select();
          document.execCommand("copy");
          console.info("Copied ".concat(svgPathInspectorElement.value));
        };

        return buttonElement;
      }
    }, {
      key: "_initAcceptButton",
      value: function _initAcceptButton(rootDomElement) {
        var _this3 = this;

        var buttonElement = (0, _selectors.editorAcceptButton)(rootDomElement);

        buttonElement.onclick = function () {
          return _this3.emit(_GUIView.GUIViewEvent.ACCEPT_EASE_EDIT_CLICKED, _this3._editor.ease);
        };

        return buttonElement;
      }
    }, {
      key: "_initDiscardButton",
      value: function _initDiscardButton(rootDomElement) {
        var _this4 = this;

        var buttonElement = (0, _selectors.editorDeclineButton)(rootDomElement);

        buttonElement.onclick = function () {
          return _this4.emit(_GUIView.GUIViewEvent.DISCARD_EASE_EDIT_CLICKED);
        };

        return buttonElement;
      }
    }]);

    return EaseEditorDirector;
  }(_HTMLElementDirector2["default"]);

  _exports["default"] = EaseEditorDirector;
});

/***/ }),

/***/ "./src/gui/view/dom/directors/EasePanelBackgroundDirector.js":
/*!*******************************************************************!*\
  !*** ./src/gui/view/dom/directors/EasePanelBackgroundDirector.js ***!
  \*******************************************************************/
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }

(function (global, factory) {
  if (true) {
    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [exports, __webpack_require__(/*! ../../HTMLElementDirector */ "./src/gui/view/HTMLElementDirector.js"), __webpack_require__(/*! ../selectors */ "./src/gui/view/dom/selectors.js")], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory),
		__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?
		(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
  } else { var mod; }
})(typeof globalThis !== "undefined" ? globalThis : typeof self !== "undefined" ? self : this, function (_exports, _HTMLElementDirector2, _selectors) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports["default"] = void 0;
  _HTMLElementDirector2 = _interopRequireDefault(_HTMLElementDirector2);

  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

  function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

  function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

  function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }

  function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, "prototype", { writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }

  function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

  function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

  function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } else if (call !== void 0) { throw new TypeError("Derived constructors may only return object or undefined"); } return _assertThisInitialized(self); }

  function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

  function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

  function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

  var EasePanelBackgroundDirector = /*#__PURE__*/function (_HTMLElementDirector) {
    _inherits(EasePanelBackgroundDirector, _HTMLElementDirector);

    var _super = _createSuper(EasePanelBackgroundDirector);

    function EasePanelBackgroundDirector(rootDomElement) {
      var _this;

      _classCallCheck(this, EasePanelBackgroundDirector);

      _this = _super.call(this);
      _this._cornerCurveCanvas = (0, _selectors.cornerCurveCanvas)(rootDomElement);
      _this._cornerCurveCanvas.width = _this._cornerCurveCanvas.height = 60;
      _this._cornerCurveCanvasContext = _this._cornerCurveCanvas.getContext("2d");
      return _this;
    }

    _createClass(EasePanelBackgroundDirector, [{
      key: "refresh",
      value: function refresh(ease) {
        var ctx = this._cornerCurveCanvasContext;
        var _this$_cornerCurveCan = this._cornerCurveCanvas,
            width = _this$_cornerCurveCan.width,
            height = _this$_cornerCurveCan.height;
        ctx.strokeStyle = ctx.fillStyle = "#88CE02";
        ctx.lineWidth = 1;
        ctx.clearRect(0, 0, width, height);
        ctx.beginPath();
        ctx.moveTo(ease.firstAnchor.x * width, (1 - ease.firstAnchor.y) * height);

        for (var i = 0; i < ease.anchors.length; i += 2) {
          var startAnchor = ease.anchors[i];
          var endAnchor = ease.anchors[i + 1];
          ctx.bezierCurveTo(startAnchor.handle.x * width, (1 - startAnchor.handle.y) * height, endAnchor.handle.x * width, (1 - endAnchor.handle.y) * height, endAnchor.x * width, (1 - endAnchor.y) * height);
        }

        ctx.lineTo(width, height);
        ctx.lineTo(0, height);
        ctx.stroke();
        ctx.fill();
      }
    }]);

    return EasePanelBackgroundDirector;
  }(_HTMLElementDirector2["default"]);

  _exports["default"] = EasePanelBackgroundDirector;
});

/***/ }),

/***/ "./src/gui/view/dom/directors/EasePanelDirector.js":
/*!*********************************************************!*\
  !*** ./src/gui/view/dom/directors/EasePanelDirector.js ***!
  \*********************************************************/
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }

(function (global, factory) {
  if (true) {
    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [exports, __webpack_require__(/*! ../../HTMLElementDirector */ "./src/gui/view/HTMLElementDirector.js"), __webpack_require__(/*! ../selectors */ "./src/gui/view/dom/selectors.js"), __webpack_require__(/*! ./CurveSelectorDirector */ "./src/gui/view/dom/directors/CurveSelectorDirector.js"), __webpack_require__(/*! ./OrientationSelectorDirector */ "./src/gui/view/dom/directors/OrientationSelectorDirector.js"), __webpack_require__(/*! ../../GUIViewEvent */ "./src/gui/view/GUIViewEvent.js"), __webpack_require__(/*! ./EasePanelBackgroundDirector */ "./src/gui/view/dom/directors/EasePanelBackgroundDirector.js")], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory),
		__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?
		(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
  } else { var mod; }
})(typeof globalThis !== "undefined" ? globalThis : typeof self !== "undefined" ? self : this, function (_exports, _HTMLElementDirector2, _selectors, _CurveSelectorDirector, _OrientationSelectorDirector, _GUIViewEvent, _EasePanelBackgroundDirector) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports["default"] = void 0;
  _HTMLElementDirector2 = _interopRequireDefault(_HTMLElementDirector2);
  _CurveSelectorDirector = _interopRequireDefault(_CurveSelectorDirector);
  _OrientationSelectorDirector = _interopRequireDefault(_OrientationSelectorDirector);
  _GUIViewEvent = _interopRequireDefault(_GUIViewEvent);
  _EasePanelBackgroundDirector = _interopRequireDefault(_EasePanelBackgroundDirector);

  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

  function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

  function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

  function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }

  function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, "prototype", { writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }

  function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

  function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

  function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } else if (call !== void 0) { throw new TypeError("Derived constructors may only return object or undefined"); } return _assertThisInitialized(self); }

  function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

  function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

  function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

  var EasePanelDirector = /*#__PURE__*/function (_HTMLElementDirector) {
    _inherits(EasePanelDirector, _HTMLElementDirector);

    var _super = _createSuper(EasePanelDirector);

    function EasePanelDirector(rootDomElement, curves) {
      var _this;

      _classCallCheck(this, EasePanelDirector);

      _this = _super.call(this, (0, _selectors.easePanel)(rootDomElement));
      _this._curveSelector = new _CurveSelectorDirector["default"](rootDomElement, curves);

      _this._curveSelector.on(_GUIViewEvent["default"].CURVE_PRESET_SELECTED, function () {
        var _this2;

        for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
          args[_key] = arguments[_key];
        }

        return (_this2 = _this).emit.apply(_this2, [_GUIViewEvent["default"].CURVE_PRESET_SELECTED].concat(args));
      });

      _this._orientationSelector = new _OrientationSelectorDirector["default"](rootDomElement);

      _this._orientationSelector.on(_GUIViewEvent["default"].ORIENTATION_PRESET_SELECTED, function () {
        var _this3;

        for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
          args[_key2] = arguments[_key2];
        }

        return (_this3 = _this).emit.apply(_this3, [_GUIViewEvent["default"].ORIENTATION_PRESET_SELECTED].concat(args));
      });

      _this._background = new _EasePanelBackgroundDirector["default"](rootDomElement);
      _this._editButtonElement = (0, _selectors.editButton)(rootDomElement);
      _this._editButtonElement.style.display = "none";

      _this._editButtonElement.addEventListener("click", function () {
        return _this.emit(_GUIViewEvent["default"].EDIT_EASE_CLICKED);
      });

      return _this;
    }

    _createClass(EasePanelDirector, [{
      key: "setOrientations",
      value: function setOrientations(orientations) {
        this._orientationSelector.values = orientations;
      }
    }, {
      key: "setPreset",
      value: function setPreset(preset) {
        this._curveSelector.value = preset.curve;
        this._orientationSelector.value = preset.orientation;

        this._background.refresh(preset.ease);
      }
    }, {
      key: "showEditButton",
      value: function showEditButton() {
        this._editButtonElement.style.display = null;
      }
    }]);

    return EasePanelDirector;
  }(_HTMLElementDirector2["default"]);

  _exports["default"] = EasePanelDirector;
});

/***/ }),

/***/ "./src/gui/view/dom/directors/EasePropertiesDirector.js":
/*!**************************************************************!*\
  !*** ./src/gui/view/dom/directors/EasePropertiesDirector.js ***!
  \**************************************************************/
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;(function (global, factory) {
  if (true) {
    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [exports, __webpack_require__(/*! ../property.html */ "./src/gui/view/dom/property.html"), __webpack_require__(/*! ../../HTMLElementDirector */ "./src/gui/view/HTMLElementDirector.js"), __webpack_require__(/*! ../selectors */ "./src/gui/view/dom/selectors.js"), __webpack_require__(/*! dat.gui */ "dat.gui"), __webpack_require__(/*! ../../GUIViewEvent */ "./src/gui/view/GUIViewEvent.js")], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory),
		__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?
		(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
  } else { var mod; }
})(typeof globalThis !== "undefined" ? globalThis : typeof self !== "undefined" ? self : this, function (_exports, _property, _HTMLElementDirector2, _selectors, _dat, _GUIViewEvent) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports["default"] = void 0;
  _property = _interopRequireDefault(_property);
  _HTMLElementDirector2 = _interopRequireDefault(_HTMLElementDirector2);
  _GUIViewEvent = _interopRequireDefault(_GUIViewEvent);

  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

  function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }

  function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

  function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }

  function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

  function _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

  function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

  function _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e2) { throw _e2; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e3) { didErr = true; err = _e3; }, f: function f() { try { if (!normalCompletion && it["return"] != null) it["return"](); } finally { if (didErr) throw err; } } }; }

  function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

  function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

  function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

  function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

  function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }

  function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, "prototype", { writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }

  function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

  function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

  function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } else if (call !== void 0) { throw new TypeError("Derived constructors may only return object or undefined"); } return _assertThisInitialized(self); }

  function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

  function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

  function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

  var StringController = _dat.controllers.StringController,
      NumberControllerBox = _dat.controllers.NumberControllerBox,
      NumberControllerSlider = _dat.controllers.NumberControllerSlider,
      BooleanController = _dat.controllers.BooleanController;

  var EasePropertiesDirector = /*#__PURE__*/function (_HTMLElementDirector) {
    _inherits(EasePropertiesDirector, _HTMLElementDirector);

    var _super = _createSuper(EasePropertiesDirector);

    function EasePropertiesDirector(rootDomElement) {
      var _this;

      _classCallCheck(this, EasePropertiesDirector);

      _this = _super.call(this, (0, _selectors.propertiesContainer)(rootDomElement));
      _this._values = {};
      return _this;
    }

    _createClass(EasePropertiesDirector, [{
      key: "values",
      set: function set(props) {
        var _this2 = this;

        if (this._values === props) return;
        this._element.innerHTML = "";

        var _iterator = _createForOfIteratorHelper(props.entries()),
            _step;

        try {
          var _loop = function _loop() {
            var _step$value = _slicedToArray(_step.value, 2),
                propertyName = _step$value[0],
                property = _step$value[1];

            var controller = createDatGuiController(property);
            controller.onChange(function (value) {
              return _this2.emit(_GUIViewEvent["default"].PROPERTY_MODIFIED, propertyName, value);
            });

            _this2._element.append(controller.domElement);
          };

          for (_iterator.s(); !(_step = _iterator.n()).done;) {
            _loop();
          }
        } catch (err) {
          _iterator.e(err);
        } finally {
          _iterator.f();
        }

        this._values = props;
      }
    }]);

    return EasePropertiesDirector;
  }(_HTMLElementDirector2["default"]);

  function createDatGuiController(property) {
    var config = _defineProperty({}, property.name, property.value);

    switch (_typeof(property.value)) {
      case "string":
        return createStringController(config, property);

      case "number":
        return createNumberController(config, property);

      case "boolean":
        return createBooleanController(config, property);
    }
  }

  function createStringController(config, property) {
    return extendControllerDOM(new StringController(config, property.name));
  }

  function createNumberController(config, property) {
    if (property.uiConfig) {
      return createNumberSliderController(config, property);
    } else {
      return createNumberBoxController(config, property);
    }
  } // https://github.com/dataarts/dat.gui/blob/f720c729deca5d5c79da8464f8a05500d38b140c/src/dat/gui/GUI.js#L992


  function createNumberSliderController(config, property) {
    var sliderController = new NumberControllerSlider(config, property.name, property.uiConfig.min, property.uiConfig.max, property.uiConfig.step);
    var boxController = new NumberControllerBox(config, property.name, property.uiConfig.min, property.uiConfig.max, property.uiConfig.step);

    var wrapperElement = _renderTemplate(_property["default"]);

    ['updateDisplay', 'onChange', 'onFinishChange', 'step', 'min', 'max'].forEach(function (method) {
      var pc = sliderController[method];
      var pb = boxController[method];

      sliderController[method] = boxController[method] = function () {
        var args = Array.prototype.slice.call(arguments);
        pb.apply(boxController, args);
        return pc.apply(sliderController, args);
      };
    });
    wrapperElement.classList.add("number", "has-slider");
    wrapperElement.querySelector("span.property-name").innerHTML = property.name.toUpperCase();
    wrapperElement.querySelector("div.c").append(sliderController.domElement, boxController.domElement);
    sliderController.domElement = wrapperElement;
    return sliderController;
  }

  function createNumberBoxController(config, property) {
    return extendControllerDOM(new NumberControllerBox(config, property.name));
  }

  function createBooleanController(config, property) {
    return extendControllerDOM(new BooleanController(config, property.name));
  }

  function extendControllerDOM(controller) {
    var controllerElement = controller.domElement;

    var wrapperElement = _renderTemplate(_property["default"]);

    wrapperElement.classList.add(_typeof(controller.object[controller.property]));
    wrapperElement.querySelector("span.property-name").innerHTML = controller.property;
    wrapperElement.querySelector("div.c").append(controllerElement.firstElementChild);
    controller.domElement = wrapperElement;
    return controller;
  }

  function _renderTemplate(template) {
    return new DOMParser().parseFromString(template, "text/html").body.firstChild;
  }

  var _default = EasePropertiesDirector;
  _exports["default"] = _default;
});

/***/ }),

/***/ "./src/gui/view/dom/directors/OrientationSelectorDirector.js":
/*!*******************************************************************!*\
  !*** ./src/gui/view/dom/directors/OrientationSelectorDirector.js ***!
  \*******************************************************************/
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }

(function (global, factory) {
  if (true) {
    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [exports, __webpack_require__(/*! ../../HTMLElementDirector */ "./src/gui/view/HTMLElementDirector.js"), __webpack_require__(/*! ../selectors */ "./src/gui/view/dom/selectors.js"), __webpack_require__(/*! ../../GUIViewEvent */ "./src/gui/view/GUIViewEvent.js")], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory),
		__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?
		(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
  } else { var mod; }
})(typeof globalThis !== "undefined" ? globalThis : typeof self !== "undefined" ? self : this, function (_exports, _HTMLElementDirector2, _selectors, _GUIViewEvent) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports["default"] = void 0;
  _HTMLElementDirector2 = _interopRequireDefault(_HTMLElementDirector2);
  _GUIViewEvent = _interopRequireDefault(_GUIViewEvent);

  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

  function _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it["return"] != null) it["return"](); } finally { if (didErr) throw err; } } }; }

  function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

  function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

  function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

  function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

  function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }

  function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, "prototype", { writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }

  function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

  function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

  function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } else if (call !== void 0) { throw new TypeError("Derived constructors may only return object or undefined"); } return _assertThisInitialized(self); }

  function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

  function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

  function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

  var OrientationSelectorDirector = /*#__PURE__*/function (_HTMLElementDirector) {
    _inherits(OrientationSelectorDirector, _HTMLElementDirector);

    var _super = _createSuper(OrientationSelectorDirector);

    function OrientationSelectorDirector(rootDomElement) {
      var _this;

      _classCallCheck(this, OrientationSelectorDirector);

      _this = _super.call(this, (0, _selectors.orientationSelector)(rootDomElement));

      _this._element.onchange = function () {
        return _this.emit(_GUIViewEvent["default"].ORIENTATION_PRESET_SELECTED, _this._element.value);
      };

      return _this;
    }

    _createClass(OrientationSelectorDirector, [{
      key: "values",
      set: function set(orientations) {
        this._element.options.length = 0;

        if (orientations.length > 0) {
          var _iterator = _createForOfIteratorHelper(orientations),
              _step;

          try {
            for (_iterator.s(); !(_step = _iterator.n()).done;) {
              var orientation = _step.value;

              this._element.options.add(new Option(orientation, orientation));
            }
          } catch (err) {
            _iterator.e(err);
          } finally {
            _iterator.f();
          }

          this._element.removeAttribute("disabled");
        } else {
          this._element.setAttribute("disabled", true);
        }
      }
    }, {
      key: "value",
      set: function set(orientation) {
        this._element.value = orientation;
      }
    }]);

    return OrientationSelectorDirector;
  }(_HTMLElementDirector2["default"]);

  _exports["default"] = OrientationSelectorDirector;
});

/***/ }),

/***/ "./src/gui/view/dom/selectors.js":
/*!***************************************!*\
  !*** ./src/gui/view/dom/selectors.js ***!
  \***************************************/
/***/ (function(module, exports) {

var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;(function (global, factory) {
  if (true) {
    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [exports], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory),
		__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?
		(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
  } else { var mod; }
})(typeof globalThis !== "undefined" ? globalThis : typeof self !== "undefined" ? self : this, function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.easePanel = easePanel;
  _exports.curveSelector = curveSelector;
  _exports.orientationSelector = orientationSelector;
  _exports.cornerCurveCanvas = cornerCurveCanvas;
  _exports.editButton = editButton;
  _exports.propertiesContainer = propertiesContainer;
  _exports.editorCanvas = editorCanvas;
  _exports.editorSvgPathInspector = editorSvgPathInspector;
  _exports.editorSvgPathCopyButton = editorSvgPathCopyButton;
  _exports.editorAcceptButton = editorAcceptButton;
  _exports.editorDeclineButton = editorDeclineButton;

  function easePanel(rootDomElement) {
    return rootDomElement.querySelector(".ease-selector");
  }

  function curveSelector(rootDomElement) {
    return rootDomElement.querySelector(".curve-selector");
  }

  function orientationSelector(rootDomElement) {
    return rootDomElement.querySelector(".orientation-selector");
  }

  function cornerCurveCanvas(rootDomElement) {
    return rootDomElement.querySelector("canvas.corner-curve");
  }

  function editButton(rootDomElement) {
    return rootDomElement.querySelector(".edit-button");
  }

  function propertiesContainer(rootDomElement) {
    return rootDomElement.querySelector(".properties-container");
  }

  function editorCanvas(rootDomElement) {
    return rootDomElement.querySelector("canvas.editor");
  }

  function editorSvgPathInspector(rootDomElement) {
    return rootDomElement.querySelector(".path-selector");
  }

  function editorSvgPathCopyButton(rootDomElement) {
    return rootDomElement.querySelector(".copy-button");
  }

  function editorAcceptButton(rootDomElement) {
    return rootDomElement.querySelector(".accept-button");
  }

  function editorDeclineButton(rootDomElement) {
    return rootDomElement.querySelector(".decline-button");
  }
});

/***/ }),

/***/ "./src/gui/view/editor/EaseEditor.js":
/*!*******************************************!*\
  !*** ./src/gui/view/editor/EaseEditor.js ***!
  \*******************************************/
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;(function (global, factory) {
  if (true) {
    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [exports, __webpack_require__(/*! ./lib/curvesjs/Curve */ "./src/gui/view/editor/lib/curvesjs/Curve.js"), __webpack_require__(/*! ./lib/curvesjs/BezierPoint */ "./src/gui/view/editor/lib/curvesjs/BezierPoint.js"), __webpack_require__(/*! ./events */ "./src/gui/view/editor/events/index.js"), __webpack_require__(/*! ../../model/ease/Ease */ "./src/gui/model/ease/Ease.js")], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory),
		__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?
		(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
  } else { var mod; }
})(typeof globalThis !== "undefined" ? globalThis : typeof self !== "undefined" ? self : this, function (_exports, _Curve, _BezierPoint, _events, _Ease) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "EditorCurveChangeEvent", {
    enumerable: true,
    get: function get() {
      return _events.EditorCurveChangeEvent;
    }
  });
  _exports["default"] = void 0;
  _Curve = _interopRequireDefault(_Curve);
  _BezierPoint = _interopRequireDefault(_BezierPoint);
  _Ease = _interopRequireDefault(_Ease);

  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

  function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

  function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

  function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }

  var EaseEditor = /*#__PURE__*/function () {
    function EaseEditor(canvas) {
      _classCallCheck(this, EaseEditor);

      this._canvas = canvas;
      this._ctx = this._prepareContext(canvas);
      this._curve = this._createCurveJSInstance(this._ctx);

      this._propagateEvents(this._curve, canvas);
    }

    _createClass(EaseEditor, [{
      key: "ease",
      get: function get() {
        var ease = new _Ease["default"]();
        var _this$_curve = this._curve,
            cw = _this$_curve.cw,
            ch = _this$_curve.ch,
            points = _this$_curve.points;

        for (var i = 0; i < points.length - 1; i++) {
          var startPoint = points[i];
          var startAnchor = ease.addAnchor(this._fromCanvasX(startPoint.position.x), this._fromCanvasY(startPoint.position.y));
          startAnchor.handle.x = this._fromCanvasX(startPoint.cp2.x);
          startAnchor.handle.y = this._fromCanvasY(startPoint.cp2.y);
          var endPoint = points[i + 1];
          var endAnchor = ease.addAnchor(this._fromCanvasX(endPoint.position.x), this._fromCanvasY(endPoint.position.y));
          endAnchor.handle.x = this._fromCanvasX(endPoint.cp1.x);
          endAnchor.handle.y = this._fromCanvasY(endPoint.cp1.y);
        }

        return ease;
      },
      set: function set(ease) {
        var _this$_curve2 = this._curve,
            points = _this$_curve2.points,
            pointColor = _this$_curve2.pointColor,
            pointSize = _this$_curve2.pointSize,
            cpDist = _this$_curve2.cpDist;
        var anchors = ease.anchors,
            firstAnchor = ease.firstAnchor,
            lastAnchor = ease.lastAnchor;
        points.length = 0;
        var firstPoint = new _BezierPoint["default"](this._toCanvasX(firstAnchor.x), this._toCanvasY(firstAnchor.y), this._ctx, pointColor, pointSize, cpDist);
        firstPoint.cp2.x = this._toCanvasX(firstAnchor.handle.x);
        firstPoint.cp2.y = this._toCanvasY(firstAnchor.handle.y);
        firstPoint.cp1.x = -firstPoint.cp2.x;
        firstPoint.cp1.y = -firstPoint.cp2.y;
        points.push(firstPoint);

        for (var i = 1; i < anchors.length - 1; i += 2) {
          var precedingCurveEndAnchor = anchors[i];
          var followingCurveStartAnchor = anchors[i + 1];
          var point = new _BezierPoint["default"](this._toCanvasX(precedingCurveEndAnchor.x), this._toCanvasY(precedingCurveEndAnchor.y), this._ctx, pointColor, pointSize, cpDist);
          point.cp1.x = this._toCanvasX(precedingCurveEndAnchor.handle.x);
          point.cp1.y = this._toCanvasY(precedingCurveEndAnchor.handle.y);
          point.cp2.x = this._toCanvasX(followingCurveStartAnchor.handle.x);
          point.cp2.y = this._toCanvasY(followingCurveStartAnchor.handle.y);
          points.push(point);
        }

        var lastPoint = new _BezierPoint["default"](this._toCanvasX(lastAnchor.x), this._toCanvasY(lastAnchor.y), this._ctx, pointColor, pointSize, cpDist);
        lastPoint.cp1.x = this._toCanvasX(lastAnchor.handle.x);
        lastPoint.cp1.y = this._toCanvasY(lastAnchor.handle.y);
        lastPoint.cp2.x = -lastPoint.cp1.x;
        lastPoint.cp2.y = -lastPoint.cp1.y;
        points.push(lastPoint);

        this._curve.draw();
      }
    }, {
      key: "_prepareContext",
      value: function _prepareContext(canvas) {
        var ctx = canvas.getContext("2d");
        ctx.canvas.width = canvas.clientWidth;
        ctx.canvas.height = canvas.clientHeight;
        return ctx;
      }
    }, {
      key: "_createCurveJSInstance",
      value: function _createCurveJSInstance(ctx) {
        var curve = new _Curve["default"](ctx);
        curve.setPointStyle('#ffffff', 8);
        curve.setLineStyle('#ace247', 2);
        return curve;
      }
    }, {
      key: "_propagateEvents",
      value: function _propagateEvents(curve, canvas) {
        curve.on('drag', function () {
          return canvas.dispatchEvent(new _events.EditorCurveChangeEvent());
        });
        curve.on('newpoint', function () {
          return canvas.dispatchEvent(new _events.EditorCurveChangeEvent());
        });
        curve.on('removepoint', function () {
          return canvas.dispatchEvent(new _events.EditorCurveChangeEvent());
        });
      }
    }, {
      key: "_toCanvasX",
      value: function _toCanvasX(x) {
        return x * this._curve.cw;
      }
    }, {
      key: "_toCanvasY",
      value: function _toCanvasY(y) {
        return (1 - y) * this._curve.ch;
      }
    }, {
      key: "_fromCanvasX",
      value: function _fromCanvasX(x) {
        return this._round(x / this._curve.cw);
      }
    }, {
      key: "_fromCanvasY",
      value: function _fromCanvasY(y) {
        return this._round(1 - y / this._curve.ch);
      }
    }, {
      key: "_round",
      value: function _round(coord) {
        var numberOfFloatDigits = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 3;
        var power = Math.pow(10, numberOfFloatDigits);
        return Math.round(coord * power) / power;
      }
    }]);

    return EaseEditor;
  }();

  _exports["default"] = EaseEditor;
});

/***/ }),

/***/ "./src/gui/view/editor/events/EditorCurveChangeEvent.js":
/*!**************************************************************!*\
  !*** ./src/gui/view/editor/events/EditorCurveChangeEvent.js ***!
  \**************************************************************/
/***/ (function(module, exports) {

var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }

(function (global, factory) {
  if (true) {
    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [exports], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory),
		__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?
		(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
  } else { var mod; }
})(typeof globalThis !== "undefined" ? globalThis : typeof self !== "undefined" ? self : this, function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports["default"] = void 0;

  function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

  function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, "prototype", { writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }

  function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

  function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } else if (call !== void 0) { throw new TypeError("Derived constructors may only return object or undefined"); } return _assertThisInitialized(self); }

  function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

  function _wrapNativeSuper(Class) { var _cache = typeof Map === "function" ? new Map() : undefined; _wrapNativeSuper = function _wrapNativeSuper(Class) { if (Class === null || !_isNativeFunction(Class)) return Class; if (typeof Class !== "function") { throw new TypeError("Super expression must either be null or a function"); } if (typeof _cache !== "undefined") { if (_cache.has(Class)) return _cache.get(Class); _cache.set(Class, Wrapper); } function Wrapper() { return _construct(Class, arguments, _getPrototypeOf(this).constructor); } Wrapper.prototype = Object.create(Class.prototype, { constructor: { value: Wrapper, enumerable: false, writable: true, configurable: true } }); return _setPrototypeOf(Wrapper, Class); }; return _wrapNativeSuper(Class); }

  function _construct(Parent, args, Class) { if (_isNativeReflectConstruct()) { _construct = Reflect.construct; } else { _construct = function _construct(Parent, args, Class) { var a = [null]; a.push.apply(a, args); var Constructor = Function.bind.apply(Parent, a); var instance = new Constructor(); if (Class) _setPrototypeOf(instance, Class.prototype); return instance; }; } return _construct.apply(null, arguments); }

  function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

  function _isNativeFunction(fn) { return Function.toString.call(fn).indexOf("[native code]") !== -1; }

  function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

  function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

  function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

  var EditorCurveChangeEvent = /*#__PURE__*/function (_CustomEvent) {
    _inherits(EditorCurveChangeEvent, _CustomEvent);

    var _super = _createSuper(EditorCurveChangeEvent);

    function EditorCurveChangeEvent() {
      _classCallCheck(this, EditorCurveChangeEvent);

      return _super.call(this, EditorCurveChangeEvent.KEY);
    }

    return EditorCurveChangeEvent;
  }( /*#__PURE__*/_wrapNativeSuper(CustomEvent));

  _exports["default"] = EditorCurveChangeEvent;

  _defineProperty(EditorCurveChangeEvent, "KEY", "editorCurveChangeEvent");
});

/***/ }),

/***/ "./src/gui/view/editor/events/index.js":
/*!*********************************************!*\
  !*** ./src/gui/view/editor/events/index.js ***!
  \*********************************************/
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;(function (global, factory) {
  if (true) {
    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [exports, __webpack_require__(/*! ./EditorCurveChangeEvent */ "./src/gui/view/editor/events/EditorCurveChangeEvent.js")], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory),
		__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?
		(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
  } else { var mod; }
})(typeof globalThis !== "undefined" ? globalThis : typeof self !== "undefined" ? self : this, function (_exports, _EditorCurveChangeEvent) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  Object.defineProperty(_exports, "EditorCurveChangeEvent", {
    enumerable: true,
    get: function get() {
      return _EditorCurveChangeEvent["default"];
    }
  });
  _EditorCurveChangeEvent = _interopRequireDefault(_EditorCurveChangeEvent);

  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }
});

/***/ }),

/***/ "./src/gui/view/editor/lib/curvesjs/BezierPoint.js":
/*!*********************************************************!*\
  !*** ./src/gui/view/editor/lib/curvesjs/BezierPoint.js ***!
  \*********************************************************/
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;(function (global, factory) {
  if (true) {
    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [exports, __webpack_require__(/*! ./Point */ "./src/gui/view/editor/lib/curvesjs/Point.js")], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory),
		__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?
		(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
  } else { var mod; }
})(typeof globalThis !== "undefined" ? globalThis : typeof self !== "undefined" ? self : this, function (_exports, _Point) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports["default"] = void 0;
  _Point = _interopRequireDefault(_Point);

  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

  function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

  function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

  function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }

  var BezierPoint = /*#__PURE__*/function () {
    function BezierPoint(x, y, context, color, size, cpDist) {
      _classCallCheck(this, BezierPoint);

      this.cpDist = cpDist;
      this.color = color;
      this.size = size;
      this.position = new _Point["default"](x, y, this.color, this.size, context);
      this.cp1 = new _Point["default"](x - this.cpDist, y, this.color, this.size, context);
      this.cp2 = new _Point["default"](x + this.cpDist, y, this.color, this.size, context);
      this.ctx = context;
      this.r = 2;
      this.collapsed = false;
    }

    _createClass(BezierPoint, [{
      key: "collapse",
      value: function collapse() {
        if (!this.collapsed) {
          this.collapsed = true;
          this.cp1.x = this.cp2.x = this.position.x;
          this.cp1.y = this.cp2.y = this.position.y;
        } else {
          this.collapsed = false;
          this.cp1.x = this.position.x - this.cpDist;
          this.cp2.x = this.position.x + this.cpDist;
        }
      }
    }, {
      key: "move",
      value: function move() {
        if (!this.collapsed) {
          this.v1x = this.cp1.x - this.position.x;
          this.v1y = this.cp1.y - this.position.y;
          this.v2x = this.cp2.x - this.position.x;
          this.v2y = this.cp2.y - this.position.y;
        } else {
          this.v1x = this.v1y = this.v2x = this.v2y = 0;
        }
      }
    }, {
      key: "setPointStyle",
      value: function setPointStyle(color, size) {
        this.position.color = color;
        this.cp1.color = color;
        this.cp2.color = color;
        this.position.r = size / 2;
        this.cp1.r = size / 2;
        this.cp2.r = size / 2;
      }
    }, {
      key: "draw",
      value: function draw() {
        this.ctx.lineWidth = 0.2;
        this.ctx.beginPath();
        this.ctx.moveTo(this.position.x, this.position.y);
        this.ctx.lineTo(this.cp1.x, this.cp1.y);
        this.ctx.stroke();
        this.ctx.beginPath();
        this.ctx.moveTo(this.position.x, this.position.y);
        this.ctx.lineTo(this.cp2.x, this.cp2.y);
        this.ctx.stroke();
        this.position.draw();
        this.cp1.draw();
        this.cp2.draw();
      }
    }]);

    return BezierPoint;
  }();

  _exports["default"] = BezierPoint;
});

/***/ }),

/***/ "./src/gui/view/editor/lib/curvesjs/Curve.js":
/*!***************************************************!*\
  !*** ./src/gui/view/editor/lib/curvesjs/Curve.js ***!
  \***************************************************/
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;(function (global, factory) {
  if (true) {
    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [exports, __webpack_require__(/*! ./BezierPoint */ "./src/gui/view/editor/lib/curvesjs/BezierPoint.js")], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory),
		__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?
		(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
  } else { var mod; }
})(typeof globalThis !== "undefined" ? globalThis : typeof self !== "undefined" ? self : this, function (_exports, _BezierPoint) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports["default"] = void 0;
  _BezierPoint = _interopRequireDefault(_BezierPoint);

  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

  function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

  function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

  function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }

  var Curve = /*#__PURE__*/function () {
    function Curve(context, interval, cpDist) {
      _classCallCheck(this, Curve);

      this.BezierPoint = _BezierPoint["default"];
      this.cpDist = cpDist ? cpDist : context.canvas.width * 0.2;
      this.pointColor = '#f00';
      this.pointSize = 4;
      this.lineColor = '#fff';
      this.lineWidth = 1;
      this.points = [new _BezierPoint["default"](0, context.canvas.height, context, this.pointColor, this.pointSize, this.cpDist), new _BezierPoint["default"](context.canvas.width, 0, context, this.pointColor, this.pointSize, this.cpDist)];
      this.ctx = context;
      this.cw = context.canvas.width;
      this.ch = context.canvas.height;
      this.mouseX = 0;
      this.mouseY = 0;
      this.events = {};
      this.interval = interval;
      this.canvasEvents();
      this.createLUT();
      this.draw();
    }

    _createClass(Curve, [{
      key: "xGetY",
      value: function xGetY(frame) {
        var tolerance = 0.0001;
        var iMin = 0;
        var iMax = 5000;
        var key = (iMin + iMax) / 2;
        var xTarget = frame / this.interval;
        var xCurrent = this.lookupX[key];
        var i = 0;

        while (Math.abs(xTarget - xCurrent) > tolerance) {
          i++;

          if (xCurrent > xTarget) {
            iMax = key;
          } else if (xCurrent < xTarget) {
            iMin = key;
          }

          key = Math.round((iMin + iMax) / 2);
          xCurrent = this.lookupX[key];

          if (i > 20) {
            break;
          }
        }

        return this.lookupY[key];
      }
    }, {
      key: "createLUT",
      value: function createLUT() {
        this.lookupX = [];
        this.lookupY = []; //Percent Based Tesselation

        for (var i = 1; i < this.points.length; i++) {
          var p1 = this.points[i - 1];
          var p2 = this.points[i];
          var pct = p2.position.x / this.cw - p1.position.x / this.cw;

          for (var t = 0; t < 1; t += 1 / (5000 * pct)) {
            var x = Math.pow(1 - t, 3) * p1.position.x + 3 * Math.pow(1 - t, 2) * t * p1.cp2.x + 3 * (1 - t) * Math.pow(t, 2) * p2.cp1.x + Math.pow(t, 3) * p2.position.x;
            var y = Math.pow(1 - t, 3) * p1.position.y + 3 * Math.pow(1 - t, 2) * t * p1.cp2.y + 3 * (1 - t) * Math.pow(t, 2) * p2.cp1.y + Math.pow(t, 3) * p2.position.y;
            this.lookupX.push(x / this.cw);
            this.lookupY.push(-y / this.ch + 1);
          }
        }
      }
    }, {
      key: "on",
      value: function on(event, func) {
        this.events['on' + event] = func.bind(this);
      }
    }, {
      key: "canvasEvents",
      value: function canvasEvents() {
        var x, y, dist, dragReady, dragCP, draging;

        var _this = this;

        this.ctx.canvas.addEventListener('mousemove', function (evt) {
          var bbox = this.getBoundingClientRect();
          x = evt.clientX - bbox.left;
          y = evt.clientY - bbox.top;
          _this.mouseX = x;
          _this.mouseY = y;

          for (var i = 0; i < _this.points.length; i++) {
            var p = _this.points[i];

            if (!draging) {
              dist = Math.sqrt((x - p.position.x) * (x - p.position.x) + (y - p.position.y) * (y - p.position.y));

              if (dist <= _this.pointSize / 2 + 2) {
                this.style.cursor = 'pointer';
                dragReady = i;
                break;
              } else {
                dist = Math.sqrt((x - p.cp1.x) * (x - p.cp1.x) + (y - p.cp1.y) * (y - p.cp1.y));

                if (dist <= _this.pointSize / 2 + 2) {
                  this.style.cursor = 'pointer';
                  dragReady = i;
                  dragCP = 'cp1';
                  break;
                } else {
                  dist = Math.sqrt((x - p.cp2.x) * (x - p.cp2.x) + (y - p.cp2.y) * (y - p.cp2.y));

                  if (dist <= _this.pointSize / 2 + 2) {
                    this.style.cursor = 'pointer';
                    dragReady = i;
                    dragCP = 'cp2';
                    break;
                  } else {
                    this.style.cursor = 'initial';
                    dragReady = false;
                    dragCP = false;
                  }
                }
              }
            }
          }

          if (keys[18]) {
            var deltaW = _this.cw / 20;
            var deltaH = _this.ch / 10;
            var posX = Math.floor((x + deltaW / 2) / deltaW);
            var posY = Math.floor((y + deltaH / 2) / deltaH);
            x = deltaW * posX;
            y = deltaH * posY;
          }

          if (draging) {
            if (dragCP == 'cp1') {
              _this.points[dragReady].cp1.x = x;
              _this.points[dragReady].cp1.y = y;

              _this.points[dragReady].move();

              if (!keys[16]) {
                _this.points[dragReady].cp2.x = x - _this.points[dragReady].v1x * 2;
                _this.points[dragReady].cp2.y = y - _this.points[dragReady].v1y * 2;
              }
            } else if (dragCP == 'cp2') {
              _this.points[dragReady].cp2.x = x;
              _this.points[dragReady].cp2.y = y;

              _this.points[dragReady].move();

              if (!keys[16]) {
                _this.points[dragReady].cp1.x = x - _this.points[dragReady].v2x * 2;
                _this.points[dragReady].cp1.y = y - _this.points[dragReady].v2y * 2;
              }
            } else {
              _this.points[dragReady].move();

              _this.points[dragReady].position.x = x;
              _this.points[dragReady].position.y = y;

              if (dragReady === 0) {
                _this.points[dragReady].position.x = 0;
              }

              if (dragReady == _this.points.length - 1) {
                _this.points[dragReady].position.x = _this.cw;
              }

              _this.points[dragReady].cp1.x = _this.points[dragReady].position.x + _this.points[dragReady].v1x;
              _this.points[dragReady].cp1.y = _this.points[dragReady].position.y + _this.points[dragReady].v1y;
              _this.points[dragReady].cp2.x = _this.points[dragReady].position.x + _this.points[dragReady].v2x;
              _this.points[dragReady].cp2.y = _this.points[dragReady].position.y + _this.points[dragReady].v2y;
              var temp;

              if (_this.points[dragReady - 1] && _this.points[dragReady + 1]) {
                if (_this.points[dragReady].position.x > _this.points[dragReady + 1].position.x) {
                  temp = _this.points[dragReady];
                  _this.points[dragReady] = _this.points[dragReady + 1];
                  _this.points[dragReady + 1] = temp;
                  dragReady++;
                }

                if (_this.points[dragReady - 1].position.x > _this.points[dragReady].position.x) {
                  temp = _this.points[dragReady];
                  _this.points[dragReady] = _this.points[dragReady - 1];
                  _this.points[dragReady - 1] = temp;
                  dragReady--;
                }
              }
            }

            _this.events.ondrag ? _this.events.ondrag() : null;

            _this.draw();
          }

          _this.events.onmousemove ? _this.events.onmousemove() : null;
        });
        this.ctx.canvas.addEventListener('mousedown', function (evt) {
          evt.preventDefault();

          if (dragReady || dragReady === 0) {
            draging = true;
          } else {
            if (dist > 5) {
              dragReady = _this.addPoint(x, y);
              draging = true;
              this.style.cursor = 'pointer';

              _this.draw();

              _this.events.onnewpoint ? _this.events.onnewpoint() : null;
            }
          }
        });
        this.ctx.canvas.addEventListener('mouseup', function (evt) {
          draging = false;

          if (dist > 5) {
            dragReady = dragCP = false;
          }

          for (var i = 0; i < _this.points.length; i++) {
            var p = _this.points[i];
            dist = Math.sqrt((x - p.position.x) * (x - p.position.x) + (y - p.position.y) * (y - p.position.y));

            if (dist <= _this.pointSize / 2 + 2) {
              this.style.cursor = 'pointer';
              dragReady = i;
              break;
            }
          }

          _this.createLUT();
        });
        this.ctx.canvas.addEventListener('mouseleave', function (evt) {
          if (draging) {
            if (evt.offsetX < 0 || evt.offsetX > _this.cw) {
              if (evt.offsetX < 0) {
                if (dragCP == 'cp1') {
                  _this.points[dragReady].cp1.x = 0;

                  _this.points[dragReady].move();

                  if (!keys[16]) {
                    _this.points[dragReady].cp2.x = 0 - _this.points[dragReady].v1x * 2;
                    _this.points[dragReady].cp2.y = y - _this.points[dragReady].v1y * 2;
                  }
                } else if (dragCP == 'cp2') {
                  _this.points[dragReady].cp2.x = 0;

                  _this.points[dragReady].move();

                  if (!keys[16]) {
                    _this.points[dragReady].cp1.x = 0 - _this.points[dragReady].v2x * 2;
                    _this.points[dragReady].cp1.y = y - _this.points[dragReady].v2y * 2;
                  }
                } else {
                  _this.points[dragReady].position.x = 0;
                  _this.points[dragReady].cp1.x = 0 + _this.points[dragReady].v1x;
                  _this.points[dragReady].cp2.x = 0 + _this.points[dragReady].v2x;
                }
              } else {
                if (dragCP == 'cp1') {
                  _this.points[dragReady].cp1.x = _this.cw;

                  _this.points[dragReady].move();

                  if (!keys[16]) {
                    _this.points[dragReady].cp2.x = _this.cw - _this.points[dragReady].v1x * 2;
                    _this.points[dragReady].cp2.y = y - _this.points[dragReady].v1y * 2;
                  }
                } else if (dragCP == 'cp2') {
                  _this.points[dragReady].cp2.x = _this.cw;

                  _this.points[dragReady].move();

                  if (!keys[16]) {
                    _this.points[dragReady].cp1.x = _this.cw - _this.points[dragReady].v2x * 2;
                    _this.points[dragReady].cp1.y = y - _this.points[dragReady].v2y * 2;
                  }
                } else {
                  _this.points[dragReady].position.x = _this.cw;
                  _this.points[dragReady].cp1.x = _this.cw + _this.points[dragReady].v1x;
                  _this.points[dragReady].cp2.x = _this.cw + _this.points[dragReady].v2x;
                }
              }
            } else if (evt.offsetY < 0 || evt.offsetY > _this.ch) {
              if (evt.offsetY < 0) {
                if (dragCP == 'cp1') {
                  _this.points[dragReady].cp1.y = 0;

                  _this.points[dragReady].move();

                  if (!keys[16]) {
                    _this.points[dragReady].cp2.x = x - _this.points[dragReady].v1x * 2;
                    _this.points[dragReady].cp2.y = 0 - _this.points[dragReady].v1y * 2;
                  }
                } else if (dragCP == 'cp2') {
                  _this.points[dragReady].cp2.y = 0;

                  _this.points[dragReady].move();

                  if (!keys[16]) {
                    _this.points[dragReady].cp1.x = x - _this.points[dragReady].v2x * 2;
                    _this.points[dragReady].cp1.y = 0 - _this.points[dragReady].v2y * 2;
                  }
                } else {
                  _this.points[dragReady].position.y = 0;
                  _this.points[dragReady].cp1.y = 0 + _this.points[dragReady].v1y;
                  _this.points[dragReady].cp2.y = 0 + _this.points[dragReady].v2y;
                }
              } else {
                if (dragCP == 'cp1') {
                  _this.points[dragReady].cp1.y = _this.ch;

                  _this.points[dragReady].move();

                  if (!keys[16]) {
                    _this.points[dragReady].cp2.x = x - _this.points[dragReady].v1x * 2;
                    _this.points[dragReady].cp2.y = _this.ch - _this.points[dragReady].v1y * 2;
                  }
                } else if (dragCP == 'cp2') {
                  _this.points[dragReady].cp2.y = _this.ch;

                  _this.points[dragReady].move();

                  if (!keys[16]) {
                    _this.points[dragReady].cp1.x = x - _this.points[dragReady].v2x * 2;
                    _this.points[dragReady].cp1.y = _this.ch - _this.points[dragReady].v2y * 2;
                  }
                } else {
                  _this.points[dragReady].position.y = _this.ch;
                  _this.points[dragReady].cp1.y = _this.ch + _this.points[dragReady].v1y;
                  _this.points[dragReady].cp2.y = _this.ch + _this.points[dragReady].v2y;
                }
              }
            }
          }

          _this.draw();

          _this.createLUT();

          draging = dragReady = dragCP = false;
        });
        this.ctx.canvas.addEventListener('click', function (evt) {
          if (keys[16] && !dragCP) {
            _this.points[dragReady].collapse();

            _this.draw();

            _this.createLUT();

            _this.events.ontogglecontrol ? _this.events.ontogglecontrol() : null;
          }
        });
        this.ctx.canvas.addEventListener('dblclick', function (evt) {
          _this.points.splice(dragReady, 1);

          draging = dragReady = dragCP = false;
          dist = 1000;
          this.style.cursor = 'initial';

          _this.draw();

          _this.createLUT();

          _this.events.onremovepoint ? _this.events.onremovepoint() : null;
        });
      }
    }, {
      key: "addPoint",
      value: function addPoint(x, y) {
        this.points.push(new _BezierPoint["default"](x, y, this.ctx, this.pointColor, this.pointSize, this.cpDist));
        this.points.sort(function (a, b) {
          return a.position.x - b.position.x;
        });

        for (var i = 0; i < this.points.length; i++) {
          var p = this.points[i];

          if (x == p.position.x && y == p.position.y) {
            return i;
          }
        }
      }
    }, {
      key: "setPointStyle",
      value: function setPointStyle(color, size) {
        for (var i = 0; i < this.points.length; i++) {
          this.points[i].setPointStyle(color, size);
          this.pointColor = color;
          this.pointSize = size;
        }

        this.draw();
      }
    }, {
      key: "setLineStyle",
      value: function setLineStyle(color, width) {
        this.lineColor = color;
        this.lineWidth = width;
        this.draw();
      }
    }, {
      key: "draw",
      value: function draw() {
        this.ctx.clearRect(0, 0, this.cw, this.ch);
        this.ctx.strokeStyle = '#444';
        this.ctx.lineWidth = 1;

        for (var i = 1; i < 10; i++) {
          this.ctx.beginPath();
          this.ctx.moveTo(this.cw / 10 * i - 0.5, 0);
          this.ctx.lineTo(this.cw / 10 * i - 0.5, this.ch);
          this.ctx.stroke();
        }

        for (var _i = 1; _i < 5; _i++) {
          this.ctx.beginPath();
          this.ctx.moveTo(0, this.ch / 5 * _i - 0.5);
          this.ctx.lineTo(this.cw, this.ch / 5 * _i - 0.5);
          this.ctx.stroke();
        }

        this.ctx.lineWidth = 0.5;

        for (var _i2 = 1; _i2 < 20; _i2++) {
          this.ctx.beginPath();
          this.ctx.moveTo(this.cw / 20 * _i2 - 0.5, 0);
          this.ctx.lineTo(this.cw / 20 * _i2 - 0.5, this.ch);
          this.ctx.stroke();
        }

        for (var _i3 = 1; _i3 < 10; _i3++) {
          this.ctx.beginPath();
          this.ctx.moveTo(0, this.ch / 10 * _i3 - 0.5);
          this.ctx.lineTo(this.cw, this.ch / 10 * _i3 - 0.5);
          this.ctx.stroke();
        }

        this.ctx.strokeStyle = this.lineColor;
        this.ctx.lineWidth = this.lineWidth;
        this.ctx.beginPath();
        this.ctx.moveTo(this.points[0].position.x, this.points[0].position.y);

        for (var _i4 = 1; _i4 < this.points.length; _i4++) {
          var p = this.points[_i4];
          var pP = this.points[_i4 - 1];
          this.ctx.bezierCurveTo(pP.cp2.x, pP.cp2.y, p.cp1.x, p.cp1.y, p.position.x, p.position.y);
        }

        this.ctx.stroke();

        for (var _i5 = 0; _i5 < this.points.length; _i5++) {
          this.points[_i5].draw();
        }
      }
    }]);

    return Curve;
  }();

  _exports["default"] = Curve;
  var keys = [];
  window.addEventListener('keydown', function (e) {
    keys[e.keyCode] = true;
  });
  window.addEventListener('keyup', function (e) {
    delete keys[e.keyCode];
  });
});

/***/ }),

/***/ "./src/gui/view/editor/lib/curvesjs/Point.js":
/*!***************************************************!*\
  !*** ./src/gui/view/editor/lib/curvesjs/Point.js ***!
  \***************************************************/
/***/ (function(module, exports) {

var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;(function (global, factory) {
  if (true) {
    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [exports], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory),
		__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?
		(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
  } else { var mod; }
})(typeof globalThis !== "undefined" ? globalThis : typeof self !== "undefined" ? self : this, function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports["default"] = void 0;

  function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

  function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

  function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }

  var Point = /*#__PURE__*/function () {
    function Point(x, y, color, size, context) {
      _classCallCheck(this, Point);

      this.x = x;
      this.y = y;
      this.r = size / 2;
      this.color = color;
      this.ctx = context;
    }

    _createClass(Point, [{
      key: "draw",
      value: function draw() {
        this.ctx.fillStyle = this.color;
        this.ctx.beginPath();
        this.ctx.arc(this.x, this.y, this.r, 0, Math.PI * 2, false);
        this.ctx.closePath();
        this.ctx.fill();
      }
    }]);

    return Point;
  }();

  _exports["default"] = Point;
});

/***/ }),

/***/ "./src/index.js":
/*!**********************!*\
  !*** ./src/index.js ***!
  \**********************/
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }

(function (global, factory) {
  if (true) {
    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [exports, __webpack_require__(/*! ./index.scss */ "./src/index.scss"), __webpack_require__(/*! ./EaseManager */ "./src/EaseManager.js"), __webpack_require__(/*! ./gui/addEaseGUI */ "./src/gui/addEaseGUI.js"), __webpack_require__(/*! ./middleware/Middleware */ "./src/middleware/Middleware.js"), __webpack_require__(/*! ./gui/model/ease/Ease */ "./src/gui/model/ease/Ease.js"), __webpack_require__(/*! ./gui/model/preset/EasePreset */ "./src/gui/model/preset/EasePreset.js"), __webpack_require__(/*! ./gui/model/preset/presets */ "./src/gui/model/preset/presets.js")], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory),
		__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?
		(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
  } else { var mod; }
})(typeof globalThis !== "undefined" ? globalThis : typeof self !== "undefined" ? self : this, function (_exports, _index, _EaseManager, _addEaseGUI, _Middleware, _Ease, _EasePreset, presets) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.extend = extend;
  Object.defineProperty(_exports, "Middleware", {
    enumerable: true,
    get: function get() {
      return _Middleware["default"];
    }
  });
  Object.defineProperty(_exports, "middleware", {
    enumerable: true,
    get: function get() {
      return _Middleware.middleware;
    }
  });
  Object.defineProperty(_exports, "Ease", {
    enumerable: true,
    get: function get() {
      return _Ease["default"];
    }
  });
  Object.defineProperty(_exports, "Handle", {
    enumerable: true,
    get: function get() {
      return _Ease.Handle;
    }
  });
  Object.defineProperty(_exports, "Anchor", {
    enumerable: true,
    get: function get() {
      return _Ease.Anchor;
    }
  });
  Object.defineProperty(_exports, "Point", {
    enumerable: true,
    get: function get() {
      return _Ease.Point;
    }
  });
  Object.defineProperty(_exports, "EasePreset", {
    enumerable: true,
    get: function get() {
      return _EasePreset["default"];
    }
  });
  _exports.presets = _exports["default"] = _exports.manager = void 0;
  _EaseManager = _interopRequireDefault(_EaseManager);
  _addEaseGUI = _interopRequireDefault(_addEaseGUI);
  _Middleware = _interopRequireWildcard(_Middleware);
  _Ease = _interopRequireWildcard(_Ease);
  _EasePreset = _interopRequireDefault(_EasePreset);
  presets = _interopRequireWildcard(presets);
  _exports.presets = presets;

  function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

  function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { "default": obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj["default"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

  var easeManager = new _EaseManager["default"]();
  _exports.manager = easeManager;

  function addEase(object, property) {
    var ease = object[property];

    if (easeManager.hasCompatibleMiddleware(ease)) {
      return _addEaseGUI["default"].call(this, object, property, easeManager.getCompatibleMiddleware(ease));
    } else {
      console.warn("No compatible middleware found.");
    }
  }

  function extend(dat) {
    dat.gui.ease = easeManager;
    var add = dat.GUI.prototype.add;

    function addOverride(object, property) {
      var value = object[property] || object;

      if (easeManager.hasCompatibleMiddleware(value)) {
        return addEase.call.apply(addEase, [this].concat(Array.prototype.slice.call(arguments)));
      } else {
        return add.call.apply(add, [this].concat(Array.prototype.slice.call(arguments)));
      }
    }

    dat.GUI.prototype.add = addOverride;
    dat.gui.GUI.prototype.add = addOverride;
    dat.GUI.prototype.addEase = addEase;
    dat.gui.GUI.prototype.addEase = addEase;
    return easeManager;
  }

  var _default = {
    extend: extend
  };
  _exports["default"] = _default;
});

/***/ }),

/***/ "./src/middleware/Middleware.js":
/*!**************************************!*\
  !*** ./src/middleware/Middleware.js ***!
  \**************************************/
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;(function (global, factory) {
  if (true) {
    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [exports, __webpack_require__(/*! ./cast/PredicateCastEntry */ "./src/middleware/cast/PredicateCastEntry.js"), __webpack_require__(/*! ./cast/InstanceCastEntry */ "./src/middleware/cast/InstanceCastEntry.js"), __webpack_require__(/*! ./cast/TransformCastEntry */ "./src/middleware/cast/TransformCastEntry.js")], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory),
		__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?
		(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
  } else { var mod; }
})(typeof globalThis !== "undefined" ? globalThis : typeof self !== "undefined" ? self : this, function (_exports, _PredicateCastEntry, _InstanceCastEntry, _TransformCastEntry) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.middleware = middleware;
  _exports["default"] = void 0;
  _PredicateCastEntry = _interopRequireDefault(_PredicateCastEntry);
  _InstanceCastEntry = _interopRequireDefault(_InstanceCastEntry);
  _TransformCastEntry = _interopRequireDefault(_TransformCastEntry);

  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

  function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }

  function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

  function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

  function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }

  var Middleware = /*#__PURE__*/function () {
    function Middleware(name) {
      var castEntries = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];

      _classCallCheck(this, Middleware);

      this._name = name;
      this._castEntries = castEntries;
    }

    _createClass(Middleware, [{
      key: "castEntries",
      get: function get() {
        return this._castEntries;
      }
    }, {
      key: "presets",
      get: function get() {
        return this._castEntries.filter(function (castEntry) {
          return !(castEntry instanceof _TransformCastEntry["default"]);
        }).map(function (entry) {
          return entry.preset;
        });
      }
    }, {
      key: "preset",
      value: function preset(thirdPartyEaseOrPredicateFunction) {
        for (var _len = arguments.length, followupArguments = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
          followupArguments[_key - 1] = arguments[_key];
        }

        switch (_typeof(thirdPartyEaseOrPredicateFunction)) {
          case "function":
            this._predicatePreset.apply(this, [thirdPartyEaseOrPredicateFunction].concat(followupArguments));

            return this;

          case "string":
          case "object":
            this._instancePreset.apply(this, [thirdPartyEaseOrPredicateFunction].concat(followupArguments));

            return this;

          default:
            console.warn("Unsupported ease format: ", thirdPartyEaseOrPredicate);
            return this;
        }
      }
    }, {
      key: "transform",
      value: function transform(predicateFunction, thirdPartyToNativeCast, nativeToThirdPartyCast) {
        this.castEntries.push(_TransformCastEntry["default"].of(predicateFunction, thirdPartyToNativeCast, nativeToThirdPartyCast));
        return this;
      }
    }, {
      key: "pick",
      value: function pick(predicateFunction) {
        var middleware = this;
        return {
          transform: function transform(thirdPartyToNativeCast, nativeToThirdPartyCast) {
            middleware.castEntries.push(_TransformCastEntry["default"].of(predicateFunction, thirdPartyToNativeCast, nativeToThirdPartyCast));
            return middleware;
          }
        };
      }
    }, {
      key: "isEditingSupported",
      value: function isEditingSupported() {
        return this.castEntries.some(function (castEntry) {
          return castEntry instanceof _TransformCastEntry["default"];
        });
      }
    }, {
      key: "isFormatSupported",
      value: function isFormatSupported(thirdPartyEase) {
        return this.castEntries.some(function (castEntry) {
          return castEntry.supportsCastInward(thirdPartyEase);
        });
      }
    }, {
      key: "import",
      value: function _import(thirdPartyEase) {
        var castEntry = this._castEntries.find(function (castEntry) {
          return castEntry.supportsCastInward(thirdPartyEase);
        });

        if (castEntry) {
          return castEntry.castInward(thirdPartyEase);
        } else {
          console.warn("Unsupported inward cast requested for ease ".concat(thirdPartyEase.toString()));
        }
      }
    }, {
      key: "export",
      value: function _export(nativeEase) {
        var castEntry = this._castEntries.find(function (castEntry) {
          return castEntry.supportsCastOutward(nativeEase);
        });

        if (castEntry) {
          return castEntry.castOutward(nativeEase);
        } else {
          console.warn("Unsupported outward cast requested for ease ".concat(nativeEase.toString()));
        }
      }
    }, {
      key: "toString",
      value: function toString() {
        return "[object DatGuiEase".concat(this._name, "Middleware]");
      }
    }, {
      key: "_predicatePreset",
      value: function _predicatePreset(predicateFunction, thirdPartyToNativeCast, nativeToThirdPartyCast, nativeEasePreset) {
        this.castEntries.push(_PredicateCastEntry["default"].of.apply(_PredicateCastEntry["default"], arguments));
      }
    }, {
      key: "_instancePreset",
      value: function _instancePreset(thirdPartyEase, nativeEasePreset) {
        this.castEntries.push(_InstanceCastEntry["default"].of.apply(_InstanceCastEntry["default"], arguments));
      }
    }], [{
      key: "checkSignature",
      value: function checkSignature(instanceLike) {
        return /^\[object DatGuiEase(?:.*)Middleware\]$/.test(instanceLike.toString());
      }
    }]);

    return Middleware;
  }();

  function middleware(name) {
    return new Middleware(name);
  }

  var _default = Middleware;
  _exports["default"] = _default;
});

/***/ }),

/***/ "./src/middleware/cast/CastEntry.js":
/*!******************************************!*\
  !*** ./src/middleware/cast/CastEntry.js ***!
  \******************************************/
/***/ (function(module, exports) {

var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;(function (global, factory) {
  if (true) {
    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [exports], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory),
		__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?
		(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
  } else { var mod; }
})(typeof globalThis !== "undefined" ? globalThis : typeof self !== "undefined" ? self : this, function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports["default"] = void 0;

  function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

  function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

  function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }

  var CastEntry = /*#__PURE__*/function () {
    function CastEntry() {
      _classCallCheck(this, CastEntry);
    }

    _createClass(CastEntry, [{
      key: "supportsCastInward",
      value: function supportsCastInward(thirdPartyEase) {
        try {
          return !!this.castInward(thirdPartyEase);
        } catch (e) {
          return false;
        }
      }
    }, {
      key: "supportsCastOutward",
      value: function supportsCastOutward(nativeEasePreset) {
        try {
          return !!this.castOutward(nativeEasePreset);
        } catch (e) {
          return false;
        }
      }
    }, {
      key: "castInward",
      value: function castInward(thirdPartyEase) {
        throw new Error("Method override missing");
      }
    }, {
      key: "castOutward",
      value: function castOutward(nativeEasePreset) {
        throw new Error("Method override missing");
      }
    }]);

    return CastEntry;
  }();

  _exports["default"] = CastEntry;
});

/***/ }),

/***/ "./src/middleware/cast/InstanceCastEntry.js":
/*!**************************************************!*\
  !*** ./src/middleware/cast/InstanceCastEntry.js ***!
  \**************************************************/
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }

(function (global, factory) {
  if (true) {
    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [exports, __webpack_require__(/*! ../../gui/model/preset/EasePreset */ "./src/gui/model/preset/EasePreset.js"), __webpack_require__(/*! ../../gui/model/preset/EasePresetProvider */ "./src/gui/model/preset/EasePresetProvider.js"), __webpack_require__(/*! ./CastEntry */ "./src/middleware/cast/CastEntry.js")], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory),
		__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?
		(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
  } else { var mod; }
})(typeof globalThis !== "undefined" ? globalThis : typeof self !== "undefined" ? self : this, function (_exports, _EasePreset, _EasePresetProvider, _CastEntry2) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports["default"] = void 0;
  _EasePreset = _interopRequireDefault(_EasePreset);
  _EasePresetProvider = _interopRequireDefault(_EasePresetProvider);
  _CastEntry2 = _interopRequireDefault(_CastEntry2);

  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

  function _construct(Parent, args, Class) { if (_isNativeReflectConstruct()) { _construct = Reflect.construct; } else { _construct = function _construct(Parent, args, Class) { var a = [null]; a.push.apply(a, args); var Constructor = Function.bind.apply(Parent, a); var instance = new Constructor(); if (Class) _setPrototypeOf(instance, Class.prototype); return instance; }; } return _construct.apply(null, arguments); }

  function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

  function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

  function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }

  function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, "prototype", { writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }

  function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

  function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

  function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } else if (call !== void 0) { throw new TypeError("Derived constructors may only return object or undefined"); } return _assertThisInitialized(self); }

  function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

  function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

  function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

  var InstanceCastEntry = /*#__PURE__*/function (_CastEntry) {
    _inherits(InstanceCastEntry, _CastEntry);

    var _super = _createSuper(InstanceCastEntry);

    function InstanceCastEntry(thirdPartyEase, nativeEasePresetOrPresetProvider) {
      var _this;

      _classCallCheck(this, InstanceCastEntry);

      _this = _super.call(this);
      _this._thirdPartyEase = thirdPartyEase;
      _this._preset = _this._parseNativePreset(nativeEasePresetOrPresetProvider);
      return _this;
    }

    _createClass(InstanceCastEntry, [{
      key: "preset",
      get: function get() {
        return this._preset;
      }
    }, {
      key: "supportsCastInward",
      value: function supportsCastInward(thirdPartyEase) {
        return this._thirdPartyEase === thirdPartyEase && !!this._preset;
      }
    }, {
      key: "supportsCastOutward",
      value: function supportsCastOutward(nativeEasePreset) {
        return this._preset.equals(nativeEasePreset) && !!this._thirdPartyEase;
      }
    }, {
      key: "castInward",
      value: function castInward(thirdPartyEase) {
        return this._preset;
      }
    }, {
      key: "castOutward",
      value: function castOutward(nativeEasePreset) {
        return this._thirdPartyEase;
      }
    }, {
      key: "_parseNativePreset",
      value: function _parseNativePreset(rawNativePreset) {
        // instanceof seems broken after transpilation, added temporary signature checks
        if (rawNativePreset instanceof _EasePresetProvider["default"] || _EasePresetProvider["default"].checkSignature(rawNativePreset)) {
          return rawNativePreset.next();
        } else if (rawNativePreset instanceof _EasePreset["default"] || _EasePreset["default"].checkSignature(rawNativePreset)) {
          return rawNativePreset.clone();
        } else {
          console.warn("Native preset or preset provider expected. Instead got ", rawNativePreset);
        }
      }
    }], [{
      key: "of",
      value: function of(thirdPartyEase, nativeEasePresetOrPresetProvider) {
        return _construct(InstanceCastEntry, Array.prototype.slice.call(arguments));
      }
    }]);

    return InstanceCastEntry;
  }(_CastEntry2["default"]);

  var _default = InstanceCastEntry;
  _exports["default"] = _default;
});

/***/ }),

/***/ "./src/middleware/cast/PredicateCastEntry.js":
/*!***************************************************!*\
  !*** ./src/middleware/cast/PredicateCastEntry.js ***!
  \***************************************************/
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }

(function (global, factory) {
  if (true) {
    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [exports, __webpack_require__(/*! ../../gui/model/preset/EasePreset */ "./src/gui/model/preset/EasePreset.js"), __webpack_require__(/*! ../../gui/model/preset/EasePresetProvider */ "./src/gui/model/preset/EasePresetProvider.js"), __webpack_require__(/*! ./CastEntry */ "./src/middleware/cast/CastEntry.js")], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory),
		__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?
		(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
  } else { var mod; }
})(typeof globalThis !== "undefined" ? globalThis : typeof self !== "undefined" ? self : this, function (_exports, _EasePreset, _EasePresetProvider, _CastEntry2) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports["default"] = void 0;
  _EasePreset = _interopRequireDefault(_EasePreset);
  _EasePresetProvider = _interopRequireDefault(_EasePresetProvider);
  _CastEntry2 = _interopRequireDefault(_CastEntry2);

  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

  function _construct(Parent, args, Class) { if (_isNativeReflectConstruct()) { _construct = Reflect.construct; } else { _construct = function _construct(Parent, args, Class) { var a = [null]; a.push.apply(a, args); var Constructor = Function.bind.apply(Parent, a); var instance = new Constructor(); if (Class) _setPrototypeOf(instance, Class.prototype); return instance; }; } return _construct.apply(null, arguments); }

  function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

  function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

  function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }

  function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, "prototype", { writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }

  function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

  function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

  function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } else if (call !== void 0) { throw new TypeError("Derived constructors may only return object or undefined"); } return _assertThisInitialized(self); }

  function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

  function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

  function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

  var PredicateCastEntry = /*#__PURE__*/function (_CastEntry) {
    _inherits(PredicateCastEntry, _CastEntry);

    var _super = _createSuper(PredicateCastEntry);

    function PredicateCastEntry(predicateFunction, thirdPartyToNativeCast, nativeToThirdPartyCast, nativeEasePresetOrPresetProvider) {
      var _this;

      _classCallCheck(this, PredicateCastEntry);

      _this = _super.call(this);
      _this._predicate = predicateFunction;
      _this._transformThirdPartyToNativeEase = thirdPartyToNativeCast;
      _this._transformNativeToThirdPartyEase = nativeToThirdPartyCast;
      _this._preset = _this._parseNativePreset(nativeEasePresetOrPresetProvider);
      return _this;
    }

    _createClass(PredicateCastEntry, [{
      key: "preset",
      get: function get() {
        return this._preset;
      }
    }, {
      key: "supportsCastInward",
      value: function supportsCastInward(thirdPartyEase) {
        return this._predicate(thirdPartyEase) && this._transformThirdPartyToNativeEase;
      }
    }, {
      key: "castInward",
      value: function castInward(thirdPartyEase) {
        var preset = this._preset.clone();

        preset.ease = this._transformThirdPartyToNativeEase(thirdPartyEase);
        return preset;
      }
    }, {
      key: "castOutward",
      value: function castOutward(nativeEasePreset) {
        return this._transformNativeToThirdPartyEase(nativeEasePreset.ease);
      }
    }, {
      key: "_parseNativePreset",
      value: function _parseNativePreset(rawNativePreset) {
        // instanceof seems broken after transpilation, added temporary signature checks
        if (rawNativePreset instanceof _EasePresetProvider["default"] || _EasePresetProvider["default"].checkSignature(rawNativePreset)) {
          return rawNativePreset.next();
        } else if (rawNativePreset instanceof _EasePreset["default"] || _EasePreset["default"].checkSignature(rawNativePreset)) {
          return rawNativePreset.clone();
        } else {
          console.warn("Native preset or preset provider expected. Instead got ", rawNativePreset);
        }
      }
    }], [{
      key: "of",
      value: function of(predicateFunction, thirdPartyToNativeCast, nativeToThirdPartyCast, nativeEasePresetOrPresetProvider) {
        return _construct(PredicateCastEntry, Array.prototype.slice.call(arguments));
      }
    }]);

    return PredicateCastEntry;
  }(_CastEntry2["default"]);

  var _default = PredicateCastEntry;
  _exports["default"] = _default;
});

/***/ }),

/***/ "./src/middleware/cast/TransformCastEntry.js":
/*!***************************************************!*\
  !*** ./src/middleware/cast/TransformCastEntry.js ***!
  \***************************************************/
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }

(function (global, factory) {
  if (true) {
    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [exports, __webpack_require__(/*! ../../gui/model/preset/EasePreset */ "./src/gui/model/preset/EasePreset.js"), __webpack_require__(/*! ./CastEntry */ "./src/middleware/cast/CastEntry.js")], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory),
		__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?
		(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
  } else { var mod; }
})(typeof globalThis !== "undefined" ? globalThis : typeof self !== "undefined" ? self : this, function (_exports, _EasePreset, _CastEntry2) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports["default"] = void 0;
  _EasePreset = _interopRequireWildcard(_EasePreset);
  _CastEntry2 = _interopRequireDefault(_CastEntry2);

  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

  function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

  function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { "default": obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj["default"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

  function _construct(Parent, args, Class) { if (_isNativeReflectConstruct()) { _construct = Reflect.construct; } else { _construct = function _construct(Parent, args, Class) { var a = [null]; a.push.apply(a, args); var Constructor = Function.bind.apply(Parent, a); var instance = new Constructor(); if (Class) _setPrototypeOf(instance, Class.prototype); return instance; }; } return _construct.apply(null, arguments); }

  function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

  function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

  function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }

  function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, "prototype", { writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }

  function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

  function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

  function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } else if (call !== void 0) { throw new TypeError("Derived constructors may only return object or undefined"); } return _assertThisInitialized(self); }

  function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

  function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

  function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

  var TransformCastEntry = /*#__PURE__*/function (_CastEntry) {
    _inherits(TransformCastEntry, _CastEntry);

    var _super = _createSuper(TransformCastEntry);

    function TransformCastEntry(predicateFunction, thirdPartyToNativeCast, nativeToThirdPartyCast) {
      var _this;

      _classCallCheck(this, TransformCastEntry);

      _this = _super.call(this);
      _this._predicate = predicateFunction;
      _this._transformThirdPartyToNativeEase = thirdPartyToNativeCast;
      _this._transformNativeToThirdPartyEase = nativeToThirdPartyCast;
      return _this;
    }

    _createClass(TransformCastEntry, [{
      key: "supportsCastInward",
      value: function supportsCastInward(thirdPartyEase) {
        return this._predicate(thirdPartyEase) && this._transformThirdPartyToNativeEase;
      }
    }, {
      key: "castInward",
      value: function castInward(thirdPartyEase) {
        return new _EasePreset["default"](this._transformThirdPartyToNativeEase(thirdPartyEase), _EasePreset.Curve.CUSTOM);
      }
    }, {
      key: "castOutward",
      value: function castOutward(nativeEasePreset) {
        return this._transformNativeToThirdPartyEase(nativeEasePreset.ease);
      }
    }], [{
      key: "of",
      value: function of(predicateFunction, thirdPartyToNativeCast, nativeToThirdPartyCast) {
        return _construct(TransformCastEntry, Array.prototype.slice.call(arguments));
      }
    }]);

    return TransformCastEntry;
  }(_CastEntry2["default"]);

  var _default = TransformCastEntry;
  _exports["default"] = _default;
});

/***/ }),

/***/ "./node_modules/bezier-js/dist/bezier.cjs":
/*!************************************************!*\
  !*** ./node_modules/bezier-js/dist/bezier.cjs ***!
  \************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.Bezier = void 0;
// math-inlining.
const {
  abs,
  cos,
  sin,
  acos,
  atan2,
  sqrt,
  pow
} = Math; // cube root function yielding real roots

function crt(v) {
  return v < 0 ? -pow(-v, 1 / 3) : pow(v, 1 / 3);
} // trig constants


const pi = Math.PI,
      tau = 2 * pi,
      quart = pi / 2,
      // float precision significant decimal
epsilon = 0.000001,
      // extremas used in bbox calculation and similar algorithms
nMax = Number.MAX_SAFE_INTEGER || 9007199254740991,
      nMin = Number.MIN_SAFE_INTEGER || -9007199254740991,
      // a zero coordinate, which is surprisingly useful
ZERO = {
  x: 0,
  y: 0,
  z: 0
}; // Bezier utility functions

const utils = {
  // Legendre-Gauss abscissae with n=24 (x_i values, defined at i=n as the roots of the nth order Legendre polynomial Pn(x))
  Tvalues: [-0.0640568928626056260850430826247450385909, 0.0640568928626056260850430826247450385909, -0.1911188674736163091586398207570696318404, 0.1911188674736163091586398207570696318404, -0.3150426796961633743867932913198102407864, 0.3150426796961633743867932913198102407864, -0.4337935076260451384870842319133497124524, 0.4337935076260451384870842319133497124524, -0.5454214713888395356583756172183723700107, 0.5454214713888395356583756172183723700107, -0.6480936519369755692524957869107476266696, 0.6480936519369755692524957869107476266696, -0.7401241915785543642438281030999784255232, 0.7401241915785543642438281030999784255232, -0.8200019859739029219539498726697452080761, 0.8200019859739029219539498726697452080761, -0.8864155270044010342131543419821967550873, 0.8864155270044010342131543419821967550873, -0.9382745520027327585236490017087214496548, 0.9382745520027327585236490017087214496548, -0.9747285559713094981983919930081690617411, 0.9747285559713094981983919930081690617411, -0.9951872199970213601799974097007368118745, 0.9951872199970213601799974097007368118745],
  // Legendre-Gauss weights with n=24 (w_i values, defined by a function linked to in the Bezier primer article)
  Cvalues: [0.1279381953467521569740561652246953718517, 0.1279381953467521569740561652246953718517, 0.1258374563468282961213753825111836887264, 0.1258374563468282961213753825111836887264, 0.121670472927803391204463153476262425607, 0.121670472927803391204463153476262425607, 0.1155056680537256013533444839067835598622, 0.1155056680537256013533444839067835598622, 0.1074442701159656347825773424466062227946, 0.1074442701159656347825773424466062227946, 0.0976186521041138882698806644642471544279, 0.0976186521041138882698806644642471544279, 0.086190161531953275917185202983742667185, 0.086190161531953275917185202983742667185, 0.0733464814110803057340336152531165181193, 0.0733464814110803057340336152531165181193, 0.0592985849154367807463677585001085845412, 0.0592985849154367807463677585001085845412, 0.0442774388174198061686027482113382288593, 0.0442774388174198061686027482113382288593, 0.0285313886289336631813078159518782864491, 0.0285313886289336631813078159518782864491, 0.0123412297999871995468056670700372915759, 0.0123412297999871995468056670700372915759],
  arcfn: function (t, derivativeFn) {
    const d = derivativeFn(t);
    let l = d.x * d.x + d.y * d.y;

    if (typeof d.z !== "undefined") {
      l += d.z * d.z;
    }

    return sqrt(l);
  },
  compute: function (t, points, _3d) {
    // shortcuts
    if (t === 0) {
      points[0].t = 0;
      return points[0];
    }

    const order = points.length - 1;

    if (t === 1) {
      points[order].t = 1;
      return points[order];
    }

    const mt = 1 - t;
    let p = points; // constant?

    if (order === 0) {
      points[0].t = t;
      return points[0];
    } // linear?


    if (order === 1) {
      const ret = {
        x: mt * p[0].x + t * p[1].x,
        y: mt * p[0].y + t * p[1].y,
        t: t
      };

      if (_3d) {
        ret.z = mt * p[0].z + t * p[1].z;
      }

      return ret;
    } // quadratic/cubic curve?


    if (order < 4) {
      let mt2 = mt * mt,
          t2 = t * t,
          a,
          b,
          c,
          d = 0;

      if (order === 2) {
        p = [p[0], p[1], p[2], ZERO];
        a = mt2;
        b = mt * t * 2;
        c = t2;
      } else if (order === 3) {
        a = mt2 * mt;
        b = mt2 * t * 3;
        c = mt * t2 * 3;
        d = t * t2;
      }

      const ret = {
        x: a * p[0].x + b * p[1].x + c * p[2].x + d * p[3].x,
        y: a * p[0].y + b * p[1].y + c * p[2].y + d * p[3].y,
        t: t
      };

      if (_3d) {
        ret.z = a * p[0].z + b * p[1].z + c * p[2].z + d * p[3].z;
      }

      return ret;
    } // higher order curves: use de Casteljau's computation


    const dCpts = JSON.parse(JSON.stringify(points));

    while (dCpts.length > 1) {
      for (let i = 0; i < dCpts.length - 1; i++) {
        dCpts[i] = {
          x: dCpts[i].x + (dCpts[i + 1].x - dCpts[i].x) * t,
          y: dCpts[i].y + (dCpts[i + 1].y - dCpts[i].y) * t
        };

        if (typeof dCpts[i].z !== "undefined") {
          dCpts[i] = dCpts[i].z + (dCpts[i + 1].z - dCpts[i].z) * t;
        }
      }

      dCpts.splice(dCpts.length - 1, 1);
    }

    dCpts[0].t = t;
    return dCpts[0];
  },
  computeWithRatios: function (t, points, ratios, _3d) {
    const mt = 1 - t,
          r = ratios,
          p = points;
    let f1 = r[0],
        f2 = r[1],
        f3 = r[2],
        f4 = r[3],
        d; // spec for linear

    f1 *= mt;
    f2 *= t;

    if (p.length === 2) {
      d = f1 + f2;
      return {
        x: (f1 * p[0].x + f2 * p[1].x) / d,
        y: (f1 * p[0].y + f2 * p[1].y) / d,
        z: !_3d ? false : (f1 * p[0].z + f2 * p[1].z) / d,
        t: t
      };
    } // upgrade to quadratic


    f1 *= mt;
    f2 *= 2 * mt;
    f3 *= t * t;

    if (p.length === 3) {
      d = f1 + f2 + f3;
      return {
        x: (f1 * p[0].x + f2 * p[1].x + f3 * p[2].x) / d,
        y: (f1 * p[0].y + f2 * p[1].y + f3 * p[2].y) / d,
        z: !_3d ? false : (f1 * p[0].z + f2 * p[1].z + f3 * p[2].z) / d,
        t: t
      };
    } // upgrade to cubic


    f1 *= mt;
    f2 *= 1.5 * mt;
    f3 *= 3 * mt;
    f4 *= t * t * t;

    if (p.length === 4) {
      d = f1 + f2 + f3 + f4;
      return {
        x: (f1 * p[0].x + f2 * p[1].x + f3 * p[2].x + f4 * p[3].x) / d,
        y: (f1 * p[0].y + f2 * p[1].y + f3 * p[2].y + f4 * p[3].y) / d,
        z: !_3d ? false : (f1 * p[0].z + f2 * p[1].z + f3 * p[2].z + f4 * p[3].z) / d,
        t: t
      };
    }
  },
  derive: function (points, _3d) {
    const dpoints = [];

    for (let p = points, d = p.length, c = d - 1; d > 1; d--, c--) {
      const list = [];

      for (let j = 0, dpt; j < c; j++) {
        dpt = {
          x: c * (p[j + 1].x - p[j].x),
          y: c * (p[j + 1].y - p[j].y)
        };

        if (_3d) {
          dpt.z = c * (p[j + 1].z - p[j].z);
        }

        list.push(dpt);
      }

      dpoints.push(list);
      p = list;
    }

    return dpoints;
  },
  between: function (v, m, M) {
    return m <= v && v <= M || utils.approximately(v, m) || utils.approximately(v, M);
  },
  approximately: function (a, b, precision) {
    return abs(a - b) <= (precision || epsilon);
  },
  length: function (derivativeFn) {
    const z = 0.5,
          len = utils.Tvalues.length;
    let sum = 0;

    for (let i = 0, t; i < len; i++) {
      t = z * utils.Tvalues[i] + z;
      sum += utils.Cvalues[i] * utils.arcfn(t, derivativeFn);
    }

    return z * sum;
  },
  map: function (v, ds, de, ts, te) {
    const d1 = de - ds,
          d2 = te - ts,
          v2 = v - ds,
          r = v2 / d1;
    return ts + d2 * r;
  },
  lerp: function (r, v1, v2) {
    const ret = {
      x: v1.x + r * (v2.x - v1.x),
      y: v1.y + r * (v2.y - v1.y)
    };

    if (v1.z !== undefined && v2.z !== undefined) {
      ret.z = v1.z + r * (v2.z - v1.z);
    }

    return ret;
  },
  pointToString: function (p) {
    let s = p.x + "/" + p.y;

    if (typeof p.z !== "undefined") {
      s += "/" + p.z;
    }

    return s;
  },
  pointsToString: function (points) {
    return "[" + points.map(utils.pointToString).join(", ") + "]";
  },
  copy: function (obj) {
    return JSON.parse(JSON.stringify(obj));
  },
  angle: function (o, v1, v2) {
    const dx1 = v1.x - o.x,
          dy1 = v1.y - o.y,
          dx2 = v2.x - o.x,
          dy2 = v2.y - o.y,
          cross = dx1 * dy2 - dy1 * dx2,
          dot = dx1 * dx2 + dy1 * dy2;
    return atan2(cross, dot);
  },
  // round as string, to avoid rounding errors
  round: function (v, d) {
    const s = "" + v;
    const pos = s.indexOf(".");
    return parseFloat(s.substring(0, pos + 1 + d));
  },
  dist: function (p1, p2) {
    const dx = p1.x - p2.x,
          dy = p1.y - p2.y;
    return sqrt(dx * dx + dy * dy);
  },
  closest: function (LUT, point) {
    let mdist = pow(2, 63),
        mpos,
        d;
    LUT.forEach(function (p, idx) {
      d = utils.dist(point, p);

      if (d < mdist) {
        mdist = d;
        mpos = idx;
      }
    });
    return {
      mdist: mdist,
      mpos: mpos
    };
  },
  abcratio: function (t, n) {
    // see ratio(t) note on http://pomax.github.io/bezierinfo/#abc
    if (n !== 2 && n !== 3) {
      return false;
    }

    if (typeof t === "undefined") {
      t = 0.5;
    } else if (t === 0 || t === 1) {
      return t;
    }

    const bottom = pow(t, n) + pow(1 - t, n),
          top = bottom - 1;
    return abs(top / bottom);
  },
  projectionratio: function (t, n) {
    // see u(t) note on http://pomax.github.io/bezierinfo/#abc
    if (n !== 2 && n !== 3) {
      return false;
    }

    if (typeof t === "undefined") {
      t = 0.5;
    } else if (t === 0 || t === 1) {
      return t;
    }

    const top = pow(1 - t, n),
          bottom = pow(t, n) + top;
    return top / bottom;
  },
  lli8: function (x1, y1, x2, y2, x3, y3, x4, y4) {
    const nx = (x1 * y2 - y1 * x2) * (x3 - x4) - (x1 - x2) * (x3 * y4 - y3 * x4),
          ny = (x1 * y2 - y1 * x2) * (y3 - y4) - (y1 - y2) * (x3 * y4 - y3 * x4),
          d = (x1 - x2) * (y3 - y4) - (y1 - y2) * (x3 - x4);

    if (d == 0) {
      return false;
    }

    return {
      x: nx / d,
      y: ny / d
    };
  },
  lli4: function (p1, p2, p3, p4) {
    const x1 = p1.x,
          y1 = p1.y,
          x2 = p2.x,
          y2 = p2.y,
          x3 = p3.x,
          y3 = p3.y,
          x4 = p4.x,
          y4 = p4.y;
    return utils.lli8(x1, y1, x2, y2, x3, y3, x4, y4);
  },
  lli: function (v1, v2) {
    return utils.lli4(v1, v1.c, v2, v2.c);
  },
  makeline: function (p1, p2) {
    return new Bezier(p1.x, p1.y, (p1.x + p2.x) / 2, (p1.y + p2.y) / 2, p2.x, p2.y);
  },
  findbbox: function (sections) {
    let mx = nMax,
        my = nMax,
        MX = nMin,
        MY = nMin;
    sections.forEach(function (s) {
      const bbox = s.bbox();
      if (mx > bbox.x.min) mx = bbox.x.min;
      if (my > bbox.y.min) my = bbox.y.min;
      if (MX < bbox.x.max) MX = bbox.x.max;
      if (MY < bbox.y.max) MY = bbox.y.max;
    });
    return {
      x: {
        min: mx,
        mid: (mx + MX) / 2,
        max: MX,
        size: MX - mx
      },
      y: {
        min: my,
        mid: (my + MY) / 2,
        max: MY,
        size: MY - my
      }
    };
  },
  shapeintersections: function (s1, bbox1, s2, bbox2, curveIntersectionThreshold) {
    if (!utils.bboxoverlap(bbox1, bbox2)) return [];
    const intersections = [];
    const a1 = [s1.startcap, s1.forward, s1.back, s1.endcap];
    const a2 = [s2.startcap, s2.forward, s2.back, s2.endcap];
    a1.forEach(function (l1) {
      if (l1.virtual) return;
      a2.forEach(function (l2) {
        if (l2.virtual) return;
        const iss = l1.intersects(l2, curveIntersectionThreshold);

        if (iss.length > 0) {
          iss.c1 = l1;
          iss.c2 = l2;
          iss.s1 = s1;
          iss.s2 = s2;
          intersections.push(iss);
        }
      });
    });
    return intersections;
  },
  makeshape: function (forward, back, curveIntersectionThreshold) {
    const bpl = back.points.length;
    const fpl = forward.points.length;
    const start = utils.makeline(back.points[bpl - 1], forward.points[0]);
    const end = utils.makeline(forward.points[fpl - 1], back.points[0]);
    const shape = {
      startcap: start,
      forward: forward,
      back: back,
      endcap: end,
      bbox: utils.findbbox([start, forward, back, end])
    };

    shape.intersections = function (s2) {
      return utils.shapeintersections(shape, shape.bbox, s2, s2.bbox, curveIntersectionThreshold);
    };

    return shape;
  },
  getminmax: function (curve, d, list) {
    if (!list) return {
      min: 0,
      max: 0
    };
    let min = nMax,
        max = nMin,
        t,
        c;

    if (list.indexOf(0) === -1) {
      list = [0].concat(list);
    }

    if (list.indexOf(1) === -1) {
      list.push(1);
    }

    for (let i = 0, len = list.length; i < len; i++) {
      t = list[i];
      c = curve.get(t);

      if (c[d] < min) {
        min = c[d];
      }

      if (c[d] > max) {
        max = c[d];
      }
    }

    return {
      min: min,
      mid: (min + max) / 2,
      max: max,
      size: max - min
    };
  },
  align: function (points, line) {
    const tx = line.p1.x,
          ty = line.p1.y,
          a = -atan2(line.p2.y - ty, line.p2.x - tx),
          d = function (v) {
      return {
        x: (v.x - tx) * cos(a) - (v.y - ty) * sin(a),
        y: (v.x - tx) * sin(a) + (v.y - ty) * cos(a)
      };
    };

    return points.map(d);
  },
  roots: function (points, line) {
    line = line || {
      p1: {
        x: 0,
        y: 0
      },
      p2: {
        x: 1,
        y: 0
      }
    };
    const order = points.length - 1;
    const aligned = utils.align(points, line);

    const reduce = function (t) {
      return 0 <= t && t <= 1;
    };

    if (order === 2) {
      const a = aligned[0].y,
            b = aligned[1].y,
            c = aligned[2].y,
            d = a - 2 * b + c;

      if (d !== 0) {
        const m1 = -sqrt(b * b - a * c),
              m2 = -a + b,
              v1 = -(m1 + m2) / d,
              v2 = -(-m1 + m2) / d;
        return [v1, v2].filter(reduce);
      } else if (b !== c && d === 0) {
        return [(2 * b - c) / (2 * b - 2 * c)].filter(reduce);
      }

      return [];
    } // see http://www.trans4mind.com/personal_development/mathematics/polynomials/cubicAlgebra.htm


    const pa = aligned[0].y,
          pb = aligned[1].y,
          pc = aligned[2].y,
          pd = aligned[3].y;
    let d = -pa + 3 * pb - 3 * pc + pd,
        a = 3 * pa - 6 * pb + 3 * pc,
        b = -3 * pa + 3 * pb,
        c = pa;

    if (utils.approximately(d, 0)) {
      // this is not a cubic curve.
      if (utils.approximately(a, 0)) {
        // in fact, this is not a quadratic curve either.
        if (utils.approximately(b, 0)) {
          // in fact in fact, there are no solutions.
          return [];
        } // linear solution:


        return [-c / b].filter(reduce);
      } // quadratic solution:


      const q = sqrt(b * b - 4 * a * c),
            a2 = 2 * a;
      return [(q - b) / a2, (-b - q) / a2].filter(reduce);
    } // at this point, we know we need a cubic solution:


    a /= d;
    b /= d;
    c /= d;
    const p = (3 * b - a * a) / 3,
          p3 = p / 3,
          q = (2 * a * a * a - 9 * a * b + 27 * c) / 27,
          q2 = q / 2,
          discriminant = q2 * q2 + p3 * p3 * p3;
    let u1, v1, x1, x2, x3;

    if (discriminant < 0) {
      const mp3 = -p / 3,
            mp33 = mp3 * mp3 * mp3,
            r = sqrt(mp33),
            t = -q / (2 * r),
            cosphi = t < -1 ? -1 : t > 1 ? 1 : t,
            phi = acos(cosphi),
            crtr = crt(r),
            t1 = 2 * crtr;
      x1 = t1 * cos(phi / 3) - a / 3;
      x2 = t1 * cos((phi + tau) / 3) - a / 3;
      x3 = t1 * cos((phi + 2 * tau) / 3) - a / 3;
      return [x1, x2, x3].filter(reduce);
    } else if (discriminant === 0) {
      u1 = q2 < 0 ? crt(-q2) : -crt(q2);
      x1 = 2 * u1 - a / 3;
      x2 = -u1 - a / 3;
      return [x1, x2].filter(reduce);
    } else {
      const sd = sqrt(discriminant);
      u1 = crt(-q2 + sd);
      v1 = crt(q2 + sd);
      return [u1 - v1 - a / 3].filter(reduce);
    }
  },
  droots: function (p) {
    // quadratic roots are easy
    if (p.length === 3) {
      const a = p[0],
            b = p[1],
            c = p[2],
            d = a - 2 * b + c;

      if (d !== 0) {
        const m1 = -sqrt(b * b - a * c),
              m2 = -a + b,
              v1 = -(m1 + m2) / d,
              v2 = -(-m1 + m2) / d;
        return [v1, v2];
      } else if (b !== c && d === 0) {
        return [(2 * b - c) / (2 * (b - c))];
      }

      return [];
    } // linear roots are even easier


    if (p.length === 2) {
      const a = p[0],
            b = p[1];

      if (a !== b) {
        return [a / (a - b)];
      }

      return [];
    }

    return [];
  },
  curvature: function (t, d1, d2, _3d, kOnly) {
    let num,
        dnm,
        adk,
        dk,
        k = 0,
        r = 0; //
    // We're using the following formula for curvature:
    //
    //              x'y" - y'x"
    //   k(t) = ------------------
    //           (x'² + y'²)^(3/2)
    //
    // from https://en.wikipedia.org/wiki/Radius_of_curvature#Definition
    //
    // With it corresponding 3D counterpart:
    //
    //          sqrt( (y'z" - y"z')² + (z'x" - z"x')² + (x'y" - x"y')²)
    //   k(t) = -------------------------------------------------------
    //                     (x'² + y'² + z'²)^(3/2)
    //

    const d = utils.compute(t, d1);
    const dd = utils.compute(t, d2);
    const qdsum = d.x * d.x + d.y * d.y;

    if (_3d) {
      num = sqrt(pow(d.y * dd.z - dd.y * d.z, 2) + pow(d.z * dd.x - dd.z * d.x, 2) + pow(d.x * dd.y - dd.x * d.y, 2));
      dnm = pow(qdsum + d.z * d.z, 3 / 2);
    } else {
      num = d.x * dd.y - d.y * dd.x;
      dnm = pow(qdsum, 3 / 2);
    }

    if (num === 0 || dnm === 0) {
      return {
        k: 0,
        r: 0
      };
    }

    k = num / dnm;
    r = dnm / num; // We're also computing the derivative of kappa, because
    // there is value in knowing the rate of change for the
    // curvature along the curve. And we're just going to
    // ballpark it based on an epsilon.

    if (!kOnly) {
      // compute k'(t) based on the interval before, and after it,
      // to at least try to not introduce forward/backward pass bias.
      const pk = utils.curvature(t - 0.001, d1, d2, _3d, true).k;
      const nk = utils.curvature(t + 0.001, d1, d2, _3d, true).k;
      dk = (nk - k + (k - pk)) / 2;
      adk = (abs(nk - k) + abs(k - pk)) / 2;
    }

    return {
      k: k,
      r: r,
      dk: dk,
      adk: adk
    };
  },
  inflections: function (points) {
    if (points.length < 4) return []; // FIXME: TODO: add in inflection abstraction for quartic+ curves?

    const p = utils.align(points, {
      p1: points[0],
      p2: points.slice(-1)[0]
    }),
          a = p[2].x * p[1].y,
          b = p[3].x * p[1].y,
          c = p[1].x * p[2].y,
          d = p[3].x * p[2].y,
          v1 = 18 * (-3 * a + 2 * b + 3 * c - d),
          v2 = 18 * (3 * a - b - 3 * c),
          v3 = 18 * (c - a);

    if (utils.approximately(v1, 0)) {
      if (!utils.approximately(v2, 0)) {
        let t = -v3 / v2;
        if (0 <= t && t <= 1) return [t];
      }

      return [];
    }

    const trm = v2 * v2 - 4 * v1 * v3,
          sq = Math.sqrt(trm),
          d2 = 2 * v1;
    if (utils.approximately(d2, 0)) return [];
    return [(sq - v2) / d2, -(v2 + sq) / d2].filter(function (r) {
      return 0 <= r && r <= 1;
    });
  },
  bboxoverlap: function (b1, b2) {
    const dims = ["x", "y"],
          len = dims.length;

    for (let i = 0, dim, l, t, d; i < len; i++) {
      dim = dims[i];
      l = b1[dim].mid;
      t = b2[dim].mid;
      d = (b1[dim].size + b2[dim].size) / 2;
      if (abs(l - t) >= d) return false;
    }

    return true;
  },
  expandbox: function (bbox, _bbox) {
    if (_bbox.x.min < bbox.x.min) {
      bbox.x.min = _bbox.x.min;
    }

    if (_bbox.y.min < bbox.y.min) {
      bbox.y.min = _bbox.y.min;
    }

    if (_bbox.z && _bbox.z.min < bbox.z.min) {
      bbox.z.min = _bbox.z.min;
    }

    if (_bbox.x.max > bbox.x.max) {
      bbox.x.max = _bbox.x.max;
    }

    if (_bbox.y.max > bbox.y.max) {
      bbox.y.max = _bbox.y.max;
    }

    if (_bbox.z && _bbox.z.max > bbox.z.max) {
      bbox.z.max = _bbox.z.max;
    }

    bbox.x.mid = (bbox.x.min + bbox.x.max) / 2;
    bbox.y.mid = (bbox.y.min + bbox.y.max) / 2;

    if (bbox.z) {
      bbox.z.mid = (bbox.z.min + bbox.z.max) / 2;
    }

    bbox.x.size = bbox.x.max - bbox.x.min;
    bbox.y.size = bbox.y.max - bbox.y.min;

    if (bbox.z) {
      bbox.z.size = bbox.z.max - bbox.z.min;
    }
  },
  pairiteration: function (c1, c2, curveIntersectionThreshold) {
    const c1b = c1.bbox(),
          c2b = c2.bbox(),
          r = 100000,
          threshold = curveIntersectionThreshold || 0.5;

    if (c1b.x.size + c1b.y.size < threshold && c2b.x.size + c2b.y.size < threshold) {
      return [(r * (c1._t1 + c1._t2) / 2 | 0) / r + "/" + (r * (c2._t1 + c2._t2) / 2 | 0) / r];
    }

    let cc1 = c1.split(0.5),
        cc2 = c2.split(0.5),
        pairs = [{
      left: cc1.left,
      right: cc2.left
    }, {
      left: cc1.left,
      right: cc2.right
    }, {
      left: cc1.right,
      right: cc2.right
    }, {
      left: cc1.right,
      right: cc2.left
    }];
    pairs = pairs.filter(function (pair) {
      return utils.bboxoverlap(pair.left.bbox(), pair.right.bbox());
    });
    let results = [];
    if (pairs.length === 0) return results;
    pairs.forEach(function (pair) {
      results = results.concat(utils.pairiteration(pair.left, pair.right, threshold));
    });
    results = results.filter(function (v, i) {
      return results.indexOf(v) === i;
    });
    return results;
  },
  getccenter: function (p1, p2, p3) {
    const dx1 = p2.x - p1.x,
          dy1 = p2.y - p1.y,
          dx2 = p3.x - p2.x,
          dy2 = p3.y - p2.y,
          dx1p = dx1 * cos(quart) - dy1 * sin(quart),
          dy1p = dx1 * sin(quart) + dy1 * cos(quart),
          dx2p = dx2 * cos(quart) - dy2 * sin(quart),
          dy2p = dx2 * sin(quart) + dy2 * cos(quart),
          // chord midpoints
    mx1 = (p1.x + p2.x) / 2,
          my1 = (p1.y + p2.y) / 2,
          mx2 = (p2.x + p3.x) / 2,
          my2 = (p2.y + p3.y) / 2,
          // midpoint offsets
    mx1n = mx1 + dx1p,
          my1n = my1 + dy1p,
          mx2n = mx2 + dx2p,
          my2n = my2 + dy2p,
          // intersection of these lines:
    arc = utils.lli8(mx1, my1, mx1n, my1n, mx2, my2, mx2n, my2n),
          r = utils.dist(arc, p1); // arc start/end values, over mid point:

    let s = atan2(p1.y - arc.y, p1.x - arc.x),
        m = atan2(p2.y - arc.y, p2.x - arc.x),
        e = atan2(p3.y - arc.y, p3.x - arc.x),
        _; // determine arc direction (cw/ccw correction)


    if (s < e) {
      // if s<m<e, arc(s, e)
      // if m<s<e, arc(e, s + tau)
      // if s<e<m, arc(e, s + tau)
      if (s > m || m > e) {
        s += tau;
      }

      if (s > e) {
        _ = e;
        e = s;
        s = _;
      }
    } else {
      // if e<m<s, arc(e, s)
      // if m<e<s, arc(s, e + tau)
      // if e<s<m, arc(s, e + tau)
      if (e < m && m < s) {
        _ = e;
        e = s;
        s = _;
      } else {
        e += tau;
      }
    } // assign and done.


    arc.s = s;
    arc.e = e;
    arc.r = r;
    return arc;
  },
  numberSort: function (a, b) {
    return a - b;
  }
};
/**
 * Poly Bezier
 * @param {[type]} curves [description]
 */

class PolyBezier {
  constructor(curves) {
    this.curves = [];
    this._3d = false;

    if (!!curves) {
      this.curves = curves;
      this._3d = this.curves[0]._3d;
    }
  }

  valueOf() {
    return this.toString();
  }

  toString() {
    return "[" + this.curves.map(function (curve) {
      return utils.pointsToString(curve.points);
    }).join(", ") + "]";
  }

  addCurve(curve) {
    this.curves.push(curve);
    this._3d = this._3d || curve._3d;
  }

  length() {
    return this.curves.map(function (v) {
      return v.length();
    }).reduce(function (a, b) {
      return a + b;
    });
  }

  curve(idx) {
    return this.curves[idx];
  }

  bbox() {
    const c = this.curves;
    var bbox = c[0].bbox();

    for (var i = 1; i < c.length; i++) {
      utils.expandbox(bbox, c[i].bbox());
    }

    return bbox;
  }

  offset(d) {
    const offset = [];
    this.curves.forEach(function (v) {
      offset.push(...v.offset(d));
    });
    return new PolyBezier(offset);
  }

}
/**
  A javascript Bezier curve library by Pomax.

  Based on http://pomax.github.io/bezierinfo

  This code is MIT licensed.
**/
// math-inlining.


const {
  abs: abs$1,
  min,
  max,
  cos: cos$1,
  sin: sin$1,
  acos: acos$1,
  sqrt: sqrt$1
} = Math;
const pi$1 = Math.PI;
/**
 * Bezier curve constructor.
 *
 * ...docs pending...
 */

class Bezier {
  constructor(coords) {
    let args = coords && coords.forEach ? coords : Array.from(arguments).slice();
    let coordlen = false;

    if (typeof args[0] === "object") {
      coordlen = args.length;
      const newargs = [];
      args.forEach(function (point) {
        ["x", "y", "z"].forEach(function (d) {
          if (typeof point[d] !== "undefined") {
            newargs.push(point[d]);
          }
        });
      });
      args = newargs;
    }

    let higher = false;
    const len = args.length;

    if (coordlen) {
      if (coordlen > 4) {
        if (arguments.length !== 1) {
          throw new Error("Only new Bezier(point[]) is accepted for 4th and higher order curves");
        }

        higher = true;
      }
    } else {
      if (len !== 6 && len !== 8 && len !== 9 && len !== 12) {
        if (arguments.length !== 1) {
          throw new Error("Only new Bezier(point[]) is accepted for 4th and higher order curves");
        }
      }
    }

    const _3d = this._3d = !higher && (len === 9 || len === 12) || coords && coords[0] && typeof coords[0].z !== "undefined";

    const points = this.points = [];

    for (let idx = 0, step = _3d ? 3 : 2; idx < len; idx += step) {
      var point = {
        x: args[idx],
        y: args[idx + 1]
      };

      if (_3d) {
        point.z = args[idx + 2];
      }

      points.push(point);
    }

    const order = this.order = points.length - 1;
    const dims = this.dims = ["x", "y"];
    if (_3d) dims.push("z");
    this.dimlen = dims.length; // is this curve, practically speaking, a straight line?

    const aligned = utils.align(points, {
      p1: points[0],
      p2: points[order]
    });
    const baselength = utils.dist(points[0], points[order]);
    this._linear = aligned.reduce((t, p) => t + abs$1(p.y), 0) < baselength / 50;
    this._lut = [];
    this._t1 = 0;
    this._t2 = 1;
    this.update();
  }

  static quadraticFromPoints(p1, p2, p3, t) {
    if (typeof t === "undefined") {
      t = 0.5;
    } // shortcuts, although they're really dumb


    if (t === 0) {
      return new Bezier(p2, p2, p3);
    }

    if (t === 1) {
      return new Bezier(p1, p2, p2);
    } // real fitting.


    const abc = Bezier.getABC(2, p1, p2, p3, t);
    return new Bezier(p1, abc.A, p3);
  }

  static cubicFromPoints(S, B, E, t, d1) {
    if (typeof t === "undefined") {
      t = 0.5;
    }

    const abc = Bezier.getABC(3, S, B, E, t);

    if (typeof d1 === "undefined") {
      d1 = utils.dist(B, abc.C);
    }

    const d2 = d1 * (1 - t) / t;
    const selen = utils.dist(S, E),
          lx = (E.x - S.x) / selen,
          ly = (E.y - S.y) / selen,
          bx1 = d1 * lx,
          by1 = d1 * ly,
          bx2 = d2 * lx,
          by2 = d2 * ly; // derivation of new hull coordinates

    const e1 = {
      x: B.x - bx1,
      y: B.y - by1
    },
          e2 = {
      x: B.x + bx2,
      y: B.y + by2
    },
          A = abc.A,
          v1 = {
      x: A.x + (e1.x - A.x) / (1 - t),
      y: A.y + (e1.y - A.y) / (1 - t)
    },
          v2 = {
      x: A.x + (e2.x - A.x) / t,
      y: A.y + (e2.y - A.y) / t
    },
          nc1 = {
      x: S.x + (v1.x - S.x) / t,
      y: S.y + (v1.y - S.y) / t
    },
          nc2 = {
      x: E.x + (v2.x - E.x) / (1 - t),
      y: E.y + (v2.y - E.y) / (1 - t)
    }; // ...done

    return new Bezier(S, nc1, nc2, E);
  }

  static getUtils() {
    return utils;
  }

  getUtils() {
    return Bezier.getUtils();
  }

  static get PolyBezier() {
    return PolyBezier;
  }

  valueOf() {
    return this.toString();
  }

  toString() {
    return utils.pointsToString(this.points);
  }

  toSVG() {
    if (this._3d) return false;
    const p = this.points,
          x = p[0].x,
          y = p[0].y,
          s = ["M", x, y, this.order === 2 ? "Q" : "C"];

    for (let i = 1, last = p.length; i < last; i++) {
      s.push(p[i].x);
      s.push(p[i].y);
    }

    return s.join(" ");
  }

  setRatios(ratios) {
    if (ratios.length !== this.points.length) {
      throw new Error("incorrect number of ratio values");
    }

    this.ratios = ratios;
    this._lut = []; //  invalidate any precomputed LUT
  }

  verify() {
    const print = this.coordDigest();

    if (print !== this._print) {
      this._print = print;
      this.update();
    }
  }

  coordDigest() {
    return this.points.map(function (c, pos) {
      return "" + pos + c.x + c.y + (c.z ? c.z : 0);
    }).join("");
  }

  update() {
    // invalidate any precomputed LUT
    this._lut = [];
    this.dpoints = utils.derive(this.points, this._3d);
    this.computedirection();
  }

  computedirection() {
    const points = this.points;
    const angle = utils.angle(points[0], points[this.order], points[1]);
    this.clockwise = angle > 0;
  }

  length() {
    return utils.length(this.derivative.bind(this));
  }

  static getABC(order = 2, S, B, E, t = 0.5) {
    const u = utils.projectionratio(t, order),
          um = 1 - u,
          C = {
      x: u * S.x + um * E.x,
      y: u * S.y + um * E.y
    },
          s = utils.abcratio(t, order),
          A = {
      x: B.x + (B.x - C.x) / s,
      y: B.y + (B.y - C.y) / s
    };
    return {
      A,
      B,
      C,
      S,
      E
    };
  }

  getABC(t, B) {
    B = B || this.get(t);
    let S = this.points[0];
    let E = this.points[this.order];
    return Bezier.getABC(this.order, S, B, E, t);
  }

  getLUT(steps) {
    this.verify();
    steps = steps || 100;

    if (this._lut.length === steps) {
      return this._lut;
    }

    this._lut = []; // n steps means n+1 points

    steps++;
    this._lut = [];

    for (let i = 0, p, t; i < steps; i++) {
      t = i / (steps - 1);
      p = this.compute(t);
      p.t = t;

      this._lut.push(p);
    }

    return this._lut;
  }

  on(point, error) {
    error = error || 5;
    const lut = this.getLUT(),
          hits = [];

    for (let i = 0, c, t = 0; i < lut.length; i++) {
      c = lut[i];

      if (utils.dist(c, point) < error) {
        hits.push(c);
        t += i / lut.length;
      }
    }

    if (!hits.length) return false;
    return t /= hits.length;
  }

  project(point) {
    // step 1: coarse check
    const LUT = this.getLUT(),
          l = LUT.length - 1,
          closest = utils.closest(LUT, point),
          mpos = closest.mpos,
          t1 = (mpos - 1) / l,
          t2 = (mpos + 1) / l,
          step = 0.1 / l; // step 2: fine check

    let mdist = closest.mdist,
        t = t1,
        ft = t,
        p;
    mdist += 1;

    for (let d; t < t2 + step; t += step) {
      p = this.compute(t);
      d = utils.dist(point, p);

      if (d < mdist) {
        mdist = d;
        ft = t;
      }
    }

    ft = ft < 0 ? 0 : ft > 1 ? 1 : ft;
    p = this.compute(ft);
    p.t = ft;
    p.d = mdist;
    return p;
  }

  get(t) {
    return this.compute(t);
  }

  point(idx) {
    return this.points[idx];
  }

  compute(t) {
    if (this.ratios) {
      return utils.computeWithRatios(t, this.points, this.ratios, this._3d);
    }

    return utils.compute(t, this.points, this._3d, this.ratios);
  }

  raise() {
    const p = this.points,
          np = [p[0]],
          k = p.length;

    for (let i = 1, pi, pim; i < k; i++) {
      pi = p[i];
      pim = p[i - 1];
      np[i] = {
        x: (k - i) / k * pi.x + i / k * pim.x,
        y: (k - i) / k * pi.y + i / k * pim.y
      };
    }

    np[k] = p[k - 1];
    return new Bezier(np);
  }

  derivative(t) {
    return utils.compute(t, this.dpoints[0], this._3d);
  }

  dderivative(t) {
    return utils.compute(t, this.dpoints[1], this._3d);
  }

  align() {
    let p = this.points;
    return new Bezier(utils.align(p, {
      p1: p[0],
      p2: p[p.length - 1]
    }));
  }

  curvature(t) {
    return utils.curvature(t, this.dpoints[0], this.dpoints[1], this._3d);
  }

  inflections() {
    return utils.inflections(this.points);
  }

  normal(t) {
    return this._3d ? this.__normal3(t) : this.__normal2(t);
  }

  __normal2(t) {
    const d = this.derivative(t);
    const q = sqrt$1(d.x * d.x + d.y * d.y);
    return {
      x: -d.y / q,
      y: d.x / q
    };
  }

  __normal3(t) {
    // see http://stackoverflow.com/questions/25453159
    const r1 = this.derivative(t),
          r2 = this.derivative(t + 0.01),
          q1 = sqrt$1(r1.x * r1.x + r1.y * r1.y + r1.z * r1.z),
          q2 = sqrt$1(r2.x * r2.x + r2.y * r2.y + r2.z * r2.z);
    r1.x /= q1;
    r1.y /= q1;
    r1.z /= q1;
    r2.x /= q2;
    r2.y /= q2;
    r2.z /= q2; // cross product

    const c = {
      x: r2.y * r1.z - r2.z * r1.y,
      y: r2.z * r1.x - r2.x * r1.z,
      z: r2.x * r1.y - r2.y * r1.x
    };
    const m = sqrt$1(c.x * c.x + c.y * c.y + c.z * c.z);
    c.x /= m;
    c.y /= m;
    c.z /= m; // rotation matrix

    const R = [c.x * c.x, c.x * c.y - c.z, c.x * c.z + c.y, c.x * c.y + c.z, c.y * c.y, c.y * c.z - c.x, c.x * c.z - c.y, c.y * c.z + c.x, c.z * c.z]; // normal vector:

    const n = {
      x: R[0] * r1.x + R[1] * r1.y + R[2] * r1.z,
      y: R[3] * r1.x + R[4] * r1.y + R[5] * r1.z,
      z: R[6] * r1.x + R[7] * r1.y + R[8] * r1.z
    };
    return n;
  }

  hull(t) {
    let p = this.points,
        _p = [],
        q = [],
        idx = 0;
    q[idx++] = p[0];
    q[idx++] = p[1];
    q[idx++] = p[2];

    if (this.order === 3) {
      q[idx++] = p[3];
    } // we lerp between all points at each iteration, until we have 1 point left.


    while (p.length > 1) {
      _p = [];

      for (let i = 0, pt, l = p.length - 1; i < l; i++) {
        pt = utils.lerp(t, p[i], p[i + 1]);
        q[idx++] = pt;

        _p.push(pt);
      }

      p = _p;
    }

    return q;
  }

  split(t1, t2) {
    // shortcuts
    if (t1 === 0 && !!t2) {
      return this.split(t2).left;
    }

    if (t2 === 1) {
      return this.split(t1).right;
    } // no shortcut: use "de Casteljau" iteration.


    const q = this.hull(t1);
    const result = {
      left: this.order === 2 ? new Bezier([q[0], q[3], q[5]]) : new Bezier([q[0], q[4], q[7], q[9]]),
      right: this.order === 2 ? new Bezier([q[5], q[4], q[2]]) : new Bezier([q[9], q[8], q[6], q[3]]),
      span: q
    }; // make sure we bind _t1/_t2 information!

    result.left._t1 = utils.map(0, 0, 1, this._t1, this._t2);
    result.left._t2 = utils.map(t1, 0, 1, this._t1, this._t2);
    result.right._t1 = utils.map(t1, 0, 1, this._t1, this._t2);
    result.right._t2 = utils.map(1, 0, 1, this._t1, this._t2); // if we have no t2, we're done

    if (!t2) {
      return result;
    } // if we have a t2, split again:


    t2 = utils.map(t2, t1, 1, 0, 1);
    return result.right.split(t2).left;
  }

  extrema() {
    const result = {};
    let roots = [];
    this.dims.forEach(function (dim) {
      let mfn = function (v) {
        return v[dim];
      };

      let p = this.dpoints[0].map(mfn);
      result[dim] = utils.droots(p);

      if (this.order === 3) {
        p = this.dpoints[1].map(mfn);
        result[dim] = result[dim].concat(utils.droots(p));
      }

      result[dim] = result[dim].filter(function (t) {
        return t >= 0 && t <= 1;
      });
      roots = roots.concat(result[dim].sort(utils.numberSort));
    }.bind(this));
    result.values = roots.sort(utils.numberSort).filter(function (v, idx) {
      return roots.indexOf(v) === idx;
    });
    return result;
  }

  bbox() {
    const extrema = this.extrema(),
          result = {};
    this.dims.forEach(function (d) {
      result[d] = utils.getminmax(this, d, extrema[d]);
    }.bind(this));
    return result;
  }

  overlaps(curve) {
    const lbbox = this.bbox(),
          tbbox = curve.bbox();
    return utils.bboxoverlap(lbbox, tbbox);
  }

  offset(t, d) {
    if (typeof d !== "undefined") {
      const c = this.get(t),
            n = this.normal(t);
      const ret = {
        c: c,
        n: n,
        x: c.x + n.x * d,
        y: c.y + n.y * d
      };

      if (this._3d) {
        ret.z = c.z + n.z * d;
      }

      return ret;
    }

    if (this._linear) {
      const nv = this.normal(0),
            coords = this.points.map(function (p) {
        const ret = {
          x: p.x + t * nv.x,
          y: p.y + t * nv.y
        };

        if (p.z && nv.z) {
          ret.z = p.z + t * nv.z;
        }

        return ret;
      });
      return [new Bezier(coords)];
    }

    return this.reduce().map(function (s) {
      if (s._linear) {
        return s.offset(t)[0];
      }

      return s.scale(t);
    });
  }

  simple() {
    if (this.order === 3) {
      const a1 = utils.angle(this.points[0], this.points[3], this.points[1]);
      const a2 = utils.angle(this.points[0], this.points[3], this.points[2]);
      if (a1 > 0 && a2 < 0 || a1 < 0 && a2 > 0) return false;
    }

    const n1 = this.normal(0);
    const n2 = this.normal(1);
    let s = n1.x * n2.x + n1.y * n2.y;

    if (this._3d) {
      s += n1.z * n2.z;
    }

    return abs$1(acos$1(s)) < pi$1 / 3;
  }

  reduce() {
    // TODO: examine these var types in more detail...
    let i,
        t1 = 0,
        t2 = 0,
        step = 0.01,
        segment,
        pass1 = [],
        pass2 = []; // first pass: split on extrema

    let extrema = this.extrema().values;

    if (extrema.indexOf(0) === -1) {
      extrema = [0].concat(extrema);
    }

    if (extrema.indexOf(1) === -1) {
      extrema.push(1);
    }

    for (t1 = extrema[0], i = 1; i < extrema.length; i++) {
      t2 = extrema[i];
      segment = this.split(t1, t2);
      segment._t1 = t1;
      segment._t2 = t2;
      pass1.push(segment);
      t1 = t2;
    } // second pass: further reduce these segments to simple segments


    pass1.forEach(function (p1) {
      t1 = 0;
      t2 = 0;

      while (t2 <= 1) {
        for (t2 = t1 + step; t2 <= 1 + step; t2 += step) {
          segment = p1.split(t1, t2);

          if (!segment.simple()) {
            t2 -= step;

            if (abs$1(t1 - t2) < step) {
              // we can never form a reduction
              return [];
            }

            segment = p1.split(t1, t2);
            segment._t1 = utils.map(t1, 0, 1, p1._t1, p1._t2);
            segment._t2 = utils.map(t2, 0, 1, p1._t1, p1._t2);
            pass2.push(segment);
            t1 = t2;
            break;
          }
        }
      }

      if (t1 < 1) {
        segment = p1.split(t1, 1);
        segment._t1 = utils.map(t1, 0, 1, p1._t1, p1._t2);
        segment._t2 = p1._t2;
        pass2.push(segment);
      }
    });
    return pass2;
  }

  translate(v, d1, d2) {
    d2 = typeof d2 === "number" ? d2 : d1; // TODO: make this take curves with control points outside
    //       of the start-end interval into account

    const o = this.order;
    let d = this.points.map((_, i) => (1 - i / o) * d1 + i / o * d2);
    return new Bezier(this.points.map((p, i) => ({
      x: p.x + v.x * d[i],
      y: p.y + v.y * d[i]
    })));
  }

  scale(d) {
    const order = this.order;
    let distanceFn = false;

    if (typeof d === "function") {
      distanceFn = d;
    }

    if (distanceFn && order === 2) {
      return this.raise().scale(distanceFn);
    } // TODO: add special handling for non-linear degenerate curves.


    const clockwise = this.clockwise;
    const points = this.points;

    if (this._linear) {
      return this.translate(this.normal(0), distanceFn ? distanceFn(0) : d, distanceFn ? distanceFn(1) : d);
    }

    const r1 = distanceFn ? distanceFn(0) : d;
    const r2 = distanceFn ? distanceFn(1) : d;
    const v = [this.offset(0, 10), this.offset(1, 10)];
    const np = [];
    const o = utils.lli4(v[0], v[0].c, v[1], v[1].c);

    if (!o) {
      throw new Error("cannot scale this curve. Try reducing it first.");
    } // move all points by distance 'd' wrt the origin 'o',
    // and move end points by fixed distance along normal.


    [0, 1].forEach(function (t) {
      const p = np[t * order] = utils.copy(points[t * order]);
      p.x += (t ? r2 : r1) * v[t].n.x;
      p.y += (t ? r2 : r1) * v[t].n.y;
    });

    if (!distanceFn) {
      // move control points to lie on the intersection of the offset
      // derivative vector, and the origin-through-control vector
      [0, 1].forEach(t => {
        if (order === 2 && !!t) return;
        const p = np[t * order];
        const d = this.derivative(t);
        const p2 = {
          x: p.x + d.x,
          y: p.y + d.y
        };
        np[t + 1] = utils.lli4(p, p2, o, points[t + 1]);
      });
      return new Bezier(np);
    } // move control points by "however much necessary to
    // ensure the correct tangent to endpoint".


    [0, 1].forEach(function (t) {
      if (order === 2 && !!t) return;
      var p = points[t + 1];
      var ov = {
        x: p.x - o.x,
        y: p.y - o.y
      };
      var rc = distanceFn ? distanceFn((t + 1) / order) : d;
      if (distanceFn && !clockwise) rc = -rc;
      var m = sqrt$1(ov.x * ov.x + ov.y * ov.y);
      ov.x /= m;
      ov.y /= m;
      np[t + 1] = {
        x: p.x + rc * ov.x,
        y: p.y + rc * ov.y
      };
    });
    return new Bezier(np);
  }

  outline(d1, d2, d3, d4) {
    d2 = d2 === undefined ? d1 : d2;

    if (this._linear) {
      // TODO: find the actual extrema, because they might
      //       be before the start, or past the end.
      const n = this.normal(0);
      const start = this.points[0];
      const end = this.points[this.points.length - 1];
      let s, mid, e;

      if (d3 === undefined) {
        d3 = d1;
        d4 = d2;
      }

      s = {
        x: start.x + n.x * d1,
        y: start.y + n.y * d1
      };
      e = {
        x: end.x + n.x * d3,
        y: end.y + n.y * d3
      };
      mid = {
        x: (s.x + e.x) / 2,
        y: (s.y + e.y) / 2
      };
      const fline = [s, mid, e];
      s = {
        x: start.x - n.x * d2,
        y: start.y - n.y * d2
      };
      e = {
        x: end.x - n.x * d4,
        y: end.y - n.y * d4
      };
      mid = {
        x: (s.x + e.x) / 2,
        y: (s.y + e.y) / 2
      };
      const bline = [e, mid, s];
      const ls = utils.makeline(bline[2], fline[0]);
      const le = utils.makeline(fline[2], bline[0]);
      const segments = [ls, new Bezier(fline), le, new Bezier(bline)];
      return new PolyBezier(segments);
    }

    const reduced = this.reduce(),
          len = reduced.length,
          fcurves = [];
    let bcurves = [],
        p,
        alen = 0,
        tlen = this.length();
    const graduated = typeof d3 !== "undefined" && typeof d4 !== "undefined";

    function linearDistanceFunction(s, e, tlen, alen, slen) {
      return function (v) {
        const f1 = alen / tlen,
              f2 = (alen + slen) / tlen,
              d = e - s;
        return utils.map(v, 0, 1, s + f1 * d, s + f2 * d);
      };
    } // form curve oulines


    reduced.forEach(function (segment) {
      const slen = segment.length();

      if (graduated) {
        fcurves.push(segment.scale(linearDistanceFunction(d1, d3, tlen, alen, slen)));
        bcurves.push(segment.scale(linearDistanceFunction(-d2, -d4, tlen, alen, slen)));
      } else {
        fcurves.push(segment.scale(d1));
        bcurves.push(segment.scale(-d2));
      }

      alen += slen;
    }); // reverse the "return" outline

    bcurves = bcurves.map(function (s) {
      p = s.points;

      if (p[3]) {
        s.points = [p[3], p[2], p[1], p[0]];
      } else {
        s.points = [p[2], p[1], p[0]];
      }

      return s;
    }).reverse(); // form the endcaps as lines

    const fs = fcurves[0].points[0],
          fe = fcurves[len - 1].points[fcurves[len - 1].points.length - 1],
          bs = bcurves[len - 1].points[bcurves[len - 1].points.length - 1],
          be = bcurves[0].points[0],
          ls = utils.makeline(bs, fs),
          le = utils.makeline(fe, be),
          segments = [ls].concat(fcurves).concat([le]).concat(bcurves);
    return new PolyBezier(segments);
  }

  outlineshapes(d1, d2, curveIntersectionThreshold) {
    d2 = d2 || d1;
    const outline = this.outline(d1, d2).curves;
    const shapes = [];

    for (let i = 1, len = outline.length; i < len / 2; i++) {
      const shape = utils.makeshape(outline[i], outline[len - i], curveIntersectionThreshold);
      shape.startcap.virtual = i > 1;
      shape.endcap.virtual = i < len / 2 - 1;
      shapes.push(shape);
    }

    return shapes;
  }

  intersects(curve, curveIntersectionThreshold) {
    if (!curve) return this.selfintersects(curveIntersectionThreshold);

    if (curve.p1 && curve.p2) {
      return this.lineIntersects(curve);
    }

    if (curve instanceof Bezier) {
      curve = curve.reduce();
    }

    return this.curveintersects(this.reduce(), curve, curveIntersectionThreshold);
  }

  lineIntersects(line) {
    const mx = min(line.p1.x, line.p2.x),
          my = min(line.p1.y, line.p2.y),
          MX = max(line.p1.x, line.p2.x),
          MY = max(line.p1.y, line.p2.y);
    return utils.roots(this.points, line).filter(t => {
      var p = this.get(t);
      return utils.between(p.x, mx, MX) && utils.between(p.y, my, MY);
    });
  }

  selfintersects(curveIntersectionThreshold) {
    // "simple" curves cannot intersect with their direct
    // neighbour, so for each segment X we check whether
    // it intersects [0:x-2][x+2:last].
    const reduced = this.reduce(),
          len = reduced.length - 2,
          results = [];

    for (let i = 0, result, left, right; i < len; i++) {
      left = reduced.slice(i, i + 1);
      right = reduced.slice(i + 2);
      result = this.curveintersects(left, right, curveIntersectionThreshold);
      results.push(...result);
    }

    return results;
  }

  curveintersects(c1, c2, curveIntersectionThreshold) {
    const pairs = []; // step 1: pair off any overlapping segments

    c1.forEach(function (l) {
      c2.forEach(function (r) {
        if (l.overlaps(r)) {
          pairs.push({
            left: l,
            right: r
          });
        }
      });
    }); // step 2: for each pairing, run through the convergence algorithm.

    let intersections = [];
    pairs.forEach(function (pair) {
      const result = utils.pairiteration(pair.left, pair.right, curveIntersectionThreshold);

      if (result.length > 0) {
        intersections = intersections.concat(result);
      }
    });
    return intersections;
  }

  arcs(errorThreshold) {
    errorThreshold = errorThreshold || 0.5;
    return this._iterate(errorThreshold, []);
  }

  _error(pc, np1, s, e) {
    const q = (e - s) / 4,
          c1 = this.get(s + q),
          c2 = this.get(e - q),
          ref = utils.dist(pc, np1),
          d1 = utils.dist(pc, c1),
          d2 = utils.dist(pc, c2);
    return abs$1(d1 - ref) + abs$1(d2 - ref);
  }

  _iterate(errorThreshold, circles) {
    let t_s = 0,
        t_e = 1,
        safety; // we do a binary search to find the "good `t` closest to no-longer-good"

    do {
      safety = 0; // step 1: start with the maximum possible arc

      t_e = 1; // points:

      let np1 = this.get(t_s),
          np2,
          np3,
          arc,
          prev_arc; // booleans:

      let curr_good = false,
          prev_good = false,
          done; // numbers:

      let t_m = t_e,
          prev_e = 1; // step 2: find the best possible arc

      do {
        prev_good = curr_good;
        prev_arc = arc;
        t_m = (t_s + t_e) / 2;
        np2 = this.get(t_m);
        np3 = this.get(t_e);
        arc = utils.getccenter(np1, np2, np3); //also save the t values

        arc.interval = {
          start: t_s,
          end: t_e
        };

        let error = this._error(arc, np1, t_s, t_e);

        curr_good = error <= errorThreshold;
        done = prev_good && !curr_good;
        if (!done) prev_e = t_e; // this arc is fine: we can move 'e' up to see if we can find a wider arc

        if (curr_good) {
          // if e is already at max, then we're done for this arc.
          if (t_e >= 1) {
            // make sure we cap at t=1
            arc.interval.end = prev_e = 1;
            prev_arc = arc; // if we capped the arc segment to t=1 we also need to make sure that
            // the arc's end angle is correct with respect to the bezier end point.

            if (t_e > 1) {
              let d = {
                x: arc.x + arc.r * cos$1(arc.e),
                y: arc.y + arc.r * sin$1(arc.e)
              };
              arc.e += utils.angle({
                x: arc.x,
                y: arc.y
              }, d, this.get(1));
            }

            break;
          } // if not, move it up by half the iteration distance


          t_e = t_e + (t_e - t_s) / 2;
        } else {
          // this is a bad arc: we need to move 'e' down to find a good arc
          t_e = t_m;
        }
      } while (!done && safety++ < 100);

      if (safety >= 100) {
        break;
      } // console.log("L835: [F] arc found", t_s, prev_e, prev_arc.x, prev_arc.y, prev_arc.s, prev_arc.e);


      prev_arc = prev_arc ? prev_arc : arc;
      circles.push(prev_arc);
      t_s = prev_e;
    } while (t_e < 1);

    return circles;
  }

}

exports.Bezier = Bezier;


/***/ }),

/***/ "./src/gui/view/dom/gui.html":
/*!***********************************!*\
  !*** ./src/gui/view/dom/gui.html ***!
  \***********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
// Module
var code = "<div class=\"ease-gui mode-select\">\n    <div class=\"header\">\n        <div class=\"property-name\"></div>\n        <div class=\"c\">\n            <div class=\"ease-selector\">\n                <div class=\"corner-curve-container\">\n                    <div class=\"ratio-box\">\n                        <div class=\"ratio-box-inner\">\n                            <canvas class=\"corner-curve\"></canvas>\n                        </div>\n                    </div>\n                </div>\n\n                <div class=\"template-selector\">\n                    <div class=\"curve-selector-container\">\n                        <select class=\"curve-selector\" dir=\"rtl\"></select>\n                    </div>\n                    <div class=\"orientation-selector-container\">\n                        <select class=\"orientation-selector\"></select>\n                    </div>\n                    <div class=\"edit-button-container\">\n                        <svg class=\"edit-button\" xmlns=\"http://www.w3.org/2000/svg\" height=\"18px\" viewBox=\"0 0 24 24\" width=\"18px\" fill=\"#606060\"><path d=\"M0 0h24v24H0z\" fill=\"none\"/><path d=\"M19.5 9.5c-1.03 0-1.9.62-2.29 1.5h-2.92c-.39-.88-1.26-1.5-2.29-1.5s-1.9.62-2.29 1.5H6.79c-.39-.88-1.26-1.5-2.29-1.5C3.12 9.5 2 10.62 2 12s1.12 2.5 2.5 2.5c1.03 0 1.9-.62 2.29-1.5h2.92c.39.88 1.26 1.5 2.29 1.5s1.9-.62 2.29-1.5h2.92c.39.88 1.26 1.5 2.29 1.5 1.38 0 2.5-1.12 2.5-2.5s-1.12-2.5-2.5-2.5z\"/></svg>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n    <div class=\"properties-container\">\n        <!-- procedurally injected elements -->\n    </div>\n    <div class=\"editor-container\">\n        <div class=\"ratio-box\">\n            <div class=\"ratio-box-inner\">\n                <canvas class=\"editor\"></canvas>\n            </div>\n        </div>\n        <div class=\"path-selector-container\">\n            <input type=\"text\" class=\"path-selector\" onclick=\"this.select();\" value=\"M0,0 C20, 23,123\" />\n            <div class=\"copy-button-container\">\n                <svg class=\"copy-button\" xmlns=\"http://www.w3.org/2000/svg\" height=\"18px\" viewBox=\"0 0 24 24\" width=\"18px\" fill=\"#606060\"><path d=\"M0 0h24v24H0V0z\" fill=\"none\"/><path d=\"M16 1H4c-1.1 0-2 .9-2 2v14h2V3h12V1zm3 4H8c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h11c1.1 0 2-.9 2-2V7c0-1.1-.9-2-2-2zm0 16H8V7h11v14z\"/></svg>\n            </div>\n        </div>\n        <div class=\"editor-buttons\">\n            <div class=\"decline-button\">\n                <div class=\"icon-container\">\n                    <svg class=\"icon\" xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 0 24 24\" width=\"24px\" fill=\"#c93333\"><path d=\"M0 0h24v24H0V0z\" fill=\"none\"/><path d=\"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12 19 6.41z\"/></svg>\n                </div>\n                <div class=\"label-container\">\n                    <div class=\"label\">DISCARD</div>\n                </div>\n            </div>\n            <div class=\"accept-button\">\n                <div class=\"label-container\">\n                    <div class=\"label\">ACCEPT</div>\n                </div>\n                <div class=\"icon-container\">\n                    <svg class=\"icon\" xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 0 24 24\" width=\"24px\" fill=\"#84be18\"><path d=\"M0 0h24v24H0V0z\" fill=\"none\"/><path d=\"M9 16.2l-3.5-3.5c-.39-.39-1.01-.39-1.4 0-.39.39-.39 1.01 0 1.4l4.19 4.19c.39.39 1.02.39 1.41 0L20.3 7.7c.39-.39.39-1.01 0-1.4-.39-.39-1.01-.39-1.4 0L9 16.2z\"/></svg>\n                </div>\n            </div>\n        </div>\n    </div>\n    <div>\n        \n    </div>\n</div>";
// Exports
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (code);

/***/ }),

/***/ "./src/gui/view/dom/property.html":
/*!****************************************!*\
  !*** ./src/gui/view/dom/property.html ***!
  \****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
// Module
var code = "<li class=\"cr\">\n    <div>\n        <span class=\"property-name\"><!-- procedurally injected name --></span>\n        <div class=\"c\"><!-- procedurally injected control --></div>\n    </div>\n</li>";
// Exports
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (code);

/***/ }),

/***/ "./src/index.scss":
/*!************************!*\
  !*** ./src/index.scss ***!
  \************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
// extracted by mini-css-extract-plugin


/***/ }),

/***/ "dat.gui":
/*!******************************************************************************************!*\
  !*** external {"commonjs":"dat.gui","commonjs2":"dat.gui","amd":"dat.gui","root":"dat"} ***!
  \******************************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = __WEBPACK_EXTERNAL_MODULE_dat_gui__;

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module is referenced by other modules so it can't be inlined
/******/ 	var __webpack_exports__ = __webpack_require__("./src/index.js");
/******/ 	
/******/ 	return __webpack_exports__;
/******/ })()
;
});
//# sourceMappingURL=dat.gui.ease.min.js.map